

#define CLASS_PREREQ(cl,lv,DC)                      \
   ( (EActor->LevelAs(cl) >= lv) ||                 \
     ((EActor->HasAbility(CA_TRICK_MAGIC) &&        \
       ((EActor->SkillRating(SK_USE_MAGIC) +        \
         EActor->SkillRating(SK_BLUFF)) > DC)) )   

#define MTYPE_PREREQ(mt,DC)                         \
   ( EActor->isMType(mt) ||                         \
     ((EActor->HasAbility(CA_TRICK_MAGIC) &&        \
       ((EActor->SkillRating(SK_USE_MAGIC) +        \
         EActor->SkillRating(SK_BLUFF)) > DC)) )   

#define SKILL_PREREQ(sk,lv,DC)                      \
   ( (EActor->SkillRating(sk) >= lv) ||             \
     ((EActor->HasAbility(CA_TRICK_MAGIC) &&        \
       ((EActor->SkillRating(SK_USE_MAGIC) +        \
         EActor->SkillRating(SK_BLUFF)) > DC)) )   
         
#define LEVEL_AS(cl,DC)                             \
   ( EActor->LevelAs(cl) + ( cl != $"Rogue" &&      \
     HasAbility(CA_TRICK_MAGIC) &&                  \
     ((EActor->SkillRating(SK_USE_MAGIC) +          \
         EActor->SkillRating(SK_BLUFF)) > DC) ?     \
       EActor->LevelAs($"Rogue") ) )

/* Item Level Precedents:       Item Level        Bonus    Item Cost                  
   Generic Stat Enhance Item    PLUS_3PER1        Plus     Level Chart x10
   Generic Inherent Bonus Tome  PLUS_3PER1_ADD3   Plus     Level Chart x20
   Generic Elemental Resist     PLUS_2PER1        Plus x3  Level Chart x5
   Generic Elemental Immunity   15                --       Level Chart x15
   Generic Skill Enhancer       PLUS_2PER1        Plus     Level Chart x3   
   Hide/MS Skill Enhancer       PLUS_2PER1        Plus     Level Chart x10 
   Specific Save Booster        PLUS_3PER1        Plus x2  Level Chart x5 
   Universal Save Booster       PLUS_3PER1        Plus     Level Chart x10 */

/************************************************************************\
 *                           ABILITY BOOSTERS                           *
\************************************************************************/

AI_TOME Effect "Manual of Gainful Exercise" : EA_GENERIC
  { Flags: EF_NEEDS_PLUS, EF_NAMEONLY; 
    pval: PLUS_1PER1; Purpose: EP_BUFF; Level: PLUS_3PER1_ADD3;
    On Event EV_MAGIC_HIT {
      /* Temporary Kludge to balance humans -- not needed
      if (EActor->HasAbility(CA_INHERANT_POTENTIAL))
        e.vDmg += 1d2;
      */
      EActor->GainInherentBonus(A_STR,e.vDmg,true);
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
		Desc: "This ancient tome contains descriptions of mystical
		  exercises capable of bestowing upon the reader supernatural
			strength.";
  }

AI_TOME Effect "Treatise of Efficious Celerity" : EA_GENERIC
  { Flags: EF_NEEDS_PLUS, EF_NAMEONLY; 
    pval: PLUS_1PER1; Purpose: EP_BUFF; Level: PLUS_3PER1_ADD3;
    On Event EV_MAGIC_HIT {
      /* Temporary Kludge to balance humans -- not needed
      if (EActor->HasAbility(CA_INHERANT_POTENTIAL))
        e.vDmg += 1d2;
      */
      EActor->GainInherentBonus(A_DEX,e.vDmg,true);
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
		Desc: "This tome documents arcane rites and rituals that may
		  be used to supernaturally augment a character's natural
			reflexes and agility.";
  }

AI_TOME Effect "Libram of Bodily Health" : EA_GENERIC
  { Flags: EF_NEEDS_PLUS, EF_NAMEONLY; 
    pval: PLUS_1PER1; Purpose: EP_BUFF; Level: PLUS_3PER1_ADD3;
    On Event EV_MAGIC_HIT {
      /* Temporary Kludge to balance humans -- not needed
      if (EActor->HasAbility(CA_INHERANT_POTENTIAL))
        e.vDmg += 1d2;
      */
      EActor->GainInherentBonus(A_CON,e.vDmg,true);
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
		Desc: "This libram describes an esoteric process by which a
		  person can acquire supernatural, inherent toughness and
			health.";
  }

AI_TOME Effect "Clear Thought" : EA_GENERIC
  { Flags: EF_NEEDS_PLUS; 
    pval: PLUS_1PER1; Purpose: EP_BUFF; Level: PLUS_3PER1_ADD3;
    On Event EV_MAGIC_HIT {
      /* Temporary Kludge to balance humans -- not needed
      if (EActor->HasAbility(CA_INHERANT_POTENTIAL))
        e.vDmg += 1d2;
      */
      EActor->GainInherentBonus(A_INT,e.vDmg,true);
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
		Desc: "The mental transfigurations described in this manual
		  allow the reader to augment his intellect, sometimes to a
			superhuman degree.";
  }

AI_TOME Effect "Treatise of Revealed Enlightenment" : EA_GENERIC
  { Flags: EF_NEEDS_PLUS, EF_NAMEONLY; 
    pval: PLUS_1PER1; Purpose: EP_BUFF; Level: PLUS_3PER1_ADD3;
    On Event EV_MAGIC_HIT {
      /* Temporary Kludge to balance humans -- not needed
      if (EActor->HasAbility(CA_INHERANT_POTENTIAL))
        e.vDmg += 1d2;
      */
      EActor->GainInherentBonus(A_WIS,e.vDmg,true);
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
		Desc: "This book of haikus and metaphors is said to alter the
		  reader's outlook on the world, improving their perrception,
			willpower and understanding of spiritual matters.";
  }

AI_TOME Effect "Leadership and Influence" : EA_GENERIC
  { Flags: EF_NEEDS_PLUS; 
    pval: PLUS_1PER1; Purpose: EP_BUFF; Level: PLUS_3PER1_ADD3;
    On Event EV_MAGIC_HIT {
      /* Temporary Kludge to balance humans -- not needed
      if (EActor->HasAbility(CA_INHERANT_POTENTIAL))
        e.vDmg += 1d2;
      */
      EActor->GainInherentBonus(A_CHA,e.vDmg,true);
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
		Desc: "Penned by a long-forgotten general, this book describes
		  supernatural rites to permanently augment the reader's force
			of personality and magnetic presence."; 
  }

AI_TOME Effect "Manual of Fortuitous Methodology" : EA_GENERIC
  { Flags: EF_NEEDS_PLUS, EF_NAMEONLY; 
    pval: PLUS_1PER1; Purpose: EP_BUFF; Level: PLUS_3PER1_ADD3;
    On Event EV_MAGIC_HIT {
      /* Temporary Kludge to balance humans -- not needed
      if (EActor->HasAbility(CA_INHERANT_POTENTIAL))
        e.vDmg += 1d2;
      */
      EActor->GainInherentBonus(A_LUC,e.vDmg,true);
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
		Desc: "This manual describes the art of geomancy -- moving in
		  line with the unseen currents of the universe in order to
			attain good fortune and serendipity. Reading it will permanantly
			better a character's luck.";
  }

/* It's a tradition dating back to 1E that Girdle of Giant Strength
   and Gauntlets of Ogre Power stack. */
AI_GIRDLE  
  Effect "Giant Strength" : EA_GRANT
  { xval: ADJUST; yval: A_STR; pval: PLUS_1PER1; 
    Flags: EF_NEEDS_PLUS; SC_THA; Level: PLUS_2PER1; 
    Desc: "This augments a wearer's strength, granting him a 
           magic bonus to his Strength score."; 
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
AI_GAUNTLETS
  Effect "Ogre Power" : EA_GRANT
  { xval: ADJUST_MOR; yval: A_STR; pval: PLUS_1PER1; 
    Flags: EF_NEEDS_PLUS; SC_THA; Level: PLUS_2PER1; 
    Desc: "This augments a wearer's strength, granting him a 
           morale bonus to his Strength score, but also a 
           commensurate morale penalty to his Intelligence
           score."; 
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
and EA_GRANT
  { xval: ADJUST_MOR; yval: A_INT; 
    On Event PRE(EV_MAGIC_HIT) {
      if (e.efNum == 1)
        e.vDmg = -(EItem->GetPlus());
      return NOTHING;
      };
  }
AI_BRACERS 
  Effect "Might" : EA_GRANT
  { xval: ADJUST; yval: A_STR; pval: PLUS_1PER1; 
    Flags: EF_NEEDS_PLUS; SC_THA; Level: PLUS_2PER1; 
    Desc: "This augments a wearer's strength, granting him a 
           magic bonus to his Strength score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }

AI_GAUNTLETS 
  Effect "Gloves of Dexterity" : EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS, EF_NAMEONLY; SC_THA; Level: PLUS_2PER1;
    Desc: "This bestows preternatural grace and agility
      when worn, improving the wearer's Dexterity through a magic
      bonus.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); 
    Constants:
      * BASE_ITEM $"gloves";
  }
AI_BRACERS 
  Effect "Graceful Motion" : EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_THA; Level: PLUS_2PER1;
    Desc: "This bestows preternatural grace and agility
      when worn, improving the wearer's Dexterity through a magic
      bonus.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
AI_RING 
  Effect "the Dancer" : EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_THA; Level: PLUS_2PER1;
    Desc: "This bestows preternatural grace and agility
      when worn, improving the wearer's Dexterity through a magic
      bonus.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }

AI_BRACERS 
  Effect "Health" : EA_GRANT
  { xval: ADJUST; yval: A_CON; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_THA; Level: PLUS_2PER1;
    Desc: "This grants its bearer a supernatural resilience,
      improving her Constitution with a magic bonus equal in magnitude
      to its own plus.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
AI_GIRDLE 
  Effect "Tenacity" : EA_GRANT
  { xval: ADJUST; yval: A_CON; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_THA; Level: PLUS_2PER1;
    Desc: "This grants its bearer a supernatural resilience,
      improving her Constitution with a magic bonus equal in magnitude
      to its own plus.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }

AI_AMULET Effect "Periapt of Wisdom" : EA_GRANT
  { xval: ADJUST; yval: A_WIS; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS, EF_NAMEONLY; SC_THE; Level: PLUS_2PER1;
    Desc: "This item mystically augments a wearer's willpower,
      perception and spiritual consciousness, granting her a magic
      bonus to her Wisdom score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
AI_STONE Effect "Heartstone" : EA_GRANT
  { xval: ADJUST; yval: A_WIS; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS, EF_NAMEONLY; SC_THE; Level: PLUS_2PER1;
    Desc: "This item mystically augments a wearer's willpower,
      perception and spiritual consciousness, granting her a magic
      bonus to her Wisdom score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(150); }
AI_EYES Effect "Mystic Insight" : EA_GRANT
  { xval: ADJUST; yval: A_WIS; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_THE; Level: PLUS_2PER1;
    Desc: "This item mystically augments a wearer's willpower,
      perception and spiritual consciousness, granting her a magic
      bonus to her Wisdom score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(120); }

AI_HEADBAND Effect "Intellect" : EA_GRANT
  { xval: ADJUST; yval: A_INT; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_ENC; Level: PLUS_2PER1;
    Desc: "This item increases a wearer's intellect and mental
      prowess, granting her a magic bonus to Intelligence equal to
      its enchantment level.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
AI_STONE Effect "Mindstone" : EA_GRANT
  { xval: ADJUST; yval: A_INT; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS, EF_NAMEONLY; SC_ENC; Level: PLUS_2PER1;
    Desc: "This item increases a wearer's intellect and mental
      prowess, granting her a magic bonus to Intelligence equal to
      its enchantment level.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(150); }
AI_EYES Effect "the Scholar" : EA_GRANT
  { xval: ADJUST; yval: A_INT; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_ENC; Level: PLUS_2PER1;
    Desc: "This item increases a wearer's intellect and mental
      prowess, granting her a magic bonus to Intelligence equal to
      its enchantment level.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(120); }

AI_CLOAK Effect "Charisma" : EA_GRANT
  { xval: ADJUST; yval: A_CHA; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_ENC; Level: PLUS_2PER1;
    Desc: "This item evokes a supernatural aura of awe, composure
      and affiability around its wearer, effectively giving him a
      magic bonus to his Charisma score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(80); }
AI_HELM Effect "Majesty" : EA_GRANT
  { xval: ADJUST; yval: A_CHA; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_ENC; Level: PLUS_2PER1;
    Desc: "This item evokes a supernatural aura of awe, composure
      and affiability around its wearer, effectively giving him a
      magic bonus to his Charisma score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
AI_EYES Effect "the Courtesan" : EA_GRANT
  { xval: ADJUST; yval: A_CHA; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_ENC; Level: PLUS_2PER1;
    Desc: "This item evokes a supernatural aura of awe, composure
      and affiability around its wearer, effectively giving him a
      magic bonus to his Charisma score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(120); }


AI_STONE Effect "Luckstone" : EA_GRANT
  { xval: ADJUST; yval: A_LUC; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS, EF_NAMEONLY; SC_WEA; Level: PLUS_2PER1;
    Desc: "When carried, this item bestows
      good luck upon its wielder in the form of a magic bonus to
      his Luck score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(150); }
AI_RING Effect "Good Fortune" : EA_GRANT
  { xval: ADJUST; yval: A_LUC; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_WEA; Level: PLUS_2PER1;
    Desc: "When carried or worn, this item bestows
      good luck upon its wielder in the form of a magic bonus to
      his Luck score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }
AI_BOOTS Effect "Providence" : EA_GRANT
  { xval: ADJUST; yval: A_LUC; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; SC_WEA; Level: PLUS_2PER1;
    Desc: "When carried or worn, this item bestows
      good luck upon its wielder in the form of a magic bonus to
      his Luck score.";  
    Lists:
      * ITEM_COST ABIL_BOOST_COST(100); }

AI_BOOTS Effect "the Druid;boots" : EA_GRANT
  { SC_WEA; xval: EXTRA_ABILITY; yval: CA_WOODLAND_STRIDE; 
    Level: 3;
    Desc: "These boots allow the wearer to walk through webbing, trees,
    brimstone and other troublesome terrain without ill effect. In
    addition, they make you inoffensive to sylvan creatures";  
    Lists:
      * ITEM_COST 6000; }
  and EA_GRANT { xval: NEUTRAL_TO; yval: MA_SYLVAN; }

/************************************************************************\
 *                           PERMA-BOOSTERS                             *
\************************************************************************/
// ww: to give some Tome variety

AI_TOME Effect "Libram of Hidden Secrets" : EA_GENERIC
  { Flags: EF_NAMEONLY; 
    Purpose: EP_BUFF; Level: 5;
    On Event EV_MAGIC_HIT {
      if (!EActor->HasStati(SEE_INVIS)) {
        EActor->GainPermStati(SEE_INVIS,EActor,SS_PERM,1,1,
               $"Libram of Hidden Secrets",5);
        EActor->IPrint("You now understand how to see the unseen!");
      } else if (!EActor->HasAbility(CA_NATURE_SENSE)) {
        EActor->GainAbility(CA_NATURE_SENSE,1,$"Libram of Hidden Secrets",SS_ITEM);
        EActor->IPrint("Your eyes pierce the fog of the natural world!");
      } else { 
        EActor->IPrint("You feel your potential expand!");
        EActor->GainFeat(0,0);
      } 
      EActor->IdentByTrial(EItem);
      EItem->Remove(true);
      EActor->IPrint("The tome vanishes!");
      return DONE;
      };
  Desc: "This tome documents arcane rites and rituals that may
          be used to supernaturally augment a character's natural
          vision or talents: after reading it the unseen will become canny,
          the shrouded will be made plain, and the technique of the master
          will become commonplace. Subsequent readings will reveal
          additional truths."; 
  }

/************************************************************************\
 *                          ELEMENTAL ATTACK RESISTANCES                *
\************************************************************************/
// ww: before, these were spread out so that one was a ring, one was a
// belt, etc. However, there were so few magical items that this meant that
// repeat players always knew just what was happening: when you found a
// magic helmet, it was a helm of sound resistance. Since 3E handles
// stacking bonuses much better than 2E, there's no reason not to allow
// rings and amulets and whatnot to also provide sound resistance. This
// keeps players on their toes, makes inventory shuffling more fun, etc,
// but doesn't really give any more power. 
/* FJM: Unfortunately, there's several reasons that this isn't that good.
   * Firstly, it kills flavour by making items more generic, and goes 
     against the feel of old-school RPGs.
   * Secondly, the item ID system isn't set up to properly handle multiple
     items types unless there's only two and one is a potion.
   * Third, I think that vermislitude would be better served by subtly
     different items rather than the same item in different categories.
   * Forth, given how drastically more common low-level items are in
     Incursion (compared to base d20), I really don't like the "should I
     wear Fire Resistance as a set of bracers, ring, amulet or hat?" factor
     implicit with multi-slot items in late game.
   * Finally, limited items in each category helps players identify them
     -- note how players build cost-categories in NetHack to help ID
     unknown items. The problem of "only one item per category" can be
     solved by limiting some categories of items to appearing only deeper
     in the dungeon -- something always planned but never implemented
     until now.
     IOW, this makes the "identify school" feature of Intuition valuable.
*/


AI_BOOTS Effect "the Winterlands" : EA_GRANT
  { SC_ABJ; 
    xval: RESIST; yval: AD_COLD; pval: PLUS_3PER1; Flags: EF_NEEDS_PLUS;
    Level: PLUS_2PER1; 
    Desc: "This renders you (and your mount) immune to slipping on
    ice, and gives you three levels of cold resistance per magical plus
    they are enchanted with."; }

AI_AMULET Effect "Ice" : EA_GRANT
  { SC_ABJ; SC_WEA;
    xval: RESIST; yval: AD_COLD; pval: PLUS_3PER1; Flags: EF_NEEDS_PLUS;
    Level: PLUS_2PER1; 
    Desc: "Only thirteen of these ancient amulets are known to exist.
      Wearing one increases the caster level of all the bearer's cold-
      based spells by its magical plus, and also grants three levels
      of cold resistance per magical plus."; }
and EA_GRANT
  { xval: BONUS_SCHOOL_CASTING_LEVEL; yval: SC_COLD; pval: PLUS_1PER1; }
    
AI_BRACERS Effect "the Inferno" : EA_GRANT
  { SC_ABJ; xval: RESIST; yval: AD_FIRE; pval: PLUS_4PER1; 
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This bestows upon its wearer 4 points of fire
      resistance for every magical plus it is imbued with and allows you
      (and your mount) to travel safely over fiery terrain."; }

AI_RING Effect "Fire Resistance" : EA_GRANT
  { SC_ABJ; xval: RESIST; yval: AD_FIRE; pval: PLUS_3PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This ring makes its wearer supernaturally resistant to heat
      and fire, granting her a fire resistance of 3 points per magical
      plus, and allowing her (and her mount) to cross over fiery terrain
      safely."; }
      
AI_GIRDLE Effect "Surtur" : EA_GRANT
  { SC_ABJ; SC_ENC; xval: RESIST; yval: AD_FIRE; pval: PLUS_3PER1;
    Flags: EF_NEEDS_PLUS, EF_ACTIVATE2, EF_3PERDAY; Level: PLUS_3PER1;
    Desc: "This magical belt renders its wearer resistant to flame,
      granting three levels of fire resistance per magical plus. Further,
      it allows the wearer to mentally dominate all fire creatures within
      80 feet whose CR is lower than twice its magical plus when it is 
      activated, up to three times per day."; }
and EA_INFLICT
  { xval: CHARMED; yval: CH_DOMINATE;
    aval: AR_GLOBE; cval: RED; lval: 8;
    On Event EV_ISTARGET {
      if (e.efNum == 1) {
        if (EVictim->isMType(MA_FIRE))
          if (EVictim->ChallengeRating() <= EItem->GetPlus() * 2)
            return SHOULD_CAST_IT;
        return CAN_CAST_IT;
        }
      return SHOULD_CAST_IT;
      };
  }
        
AI_AMULET Effect "Bile" : EA_GRANT
  { SC_ABJ; xval: RESIST; yval: AD_ACID; pval: PLUS_4PER1; 
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This bestows an acid and disease resistance of 4 per level of
      enchantment it possesses on its wearer."; } 
  and EA_GRANT 
  { xval: RESIST; yval: AD_DISE; pval: PLUS_4PER1; }

AI_RING Effect "Acid Warding" : EA_GRANT
  { SC_ABJ; xval: RESIST; yval: AD_ACID; pval: PLUS_4PER1;
    Flags: EF_NEEDS_PLUS, EF_GOOD; Level: PLUS_2PER1;
    Desc: "This ring protects its wearer from acid damage, granting four
      levels of acid resistance per magical plus. However, the ring carries
      a potent weakness compared to similar items: if the wearer ever deals
      acid damage herself, it will shatter. This is a good-aligned item,
      forged on the principle that acid is a horrific form of attack that
      causes exceptional pain and mutilates its victims."; }
and EA_GRANT 
  { xval: TRAP_EVENT; yval: PRE(EV_DAMAGE);
    On Event META(PRE(EV_DAMAGE)) {
      hObj hRing;
      if (GetHandle(EActor) == GetHandle(EVictim))
        return NOTHING;
      if (e.DType == AD_ACID) {
        hRing = EActor->GetEffStatiObj(RESIST, $"Acid Warding");
        if (hRing == NULL_OBJ)
          return NOTHING;
        EActor->IDPrint("Your <hObj2> shatters!", 
                        "The <hObj>'s <hObj2> shatters!", EActor, hRing);
        hRing->Remove(true);
        
        /* Odd case -- wearing two identical rings */
        hRing = EActor->GetEffStatiObj(RESIST, $"Acid Warding");
        if (hRing == NULL_OBJ)
          return NOTHING;
        EActor->IDPrint("Your <hObj2> shatters!", 
                        "The <hObj>'s <hObj2> shatters!", EActor, hRing);
        hRing->Remove(true);
        }
      return NOTHING;
      };
  }        

AI_RING Effect "Brass and Glass" : EA_GRANT
  { (SC_EVO | SC_ABJ); xval: RESIST; yval: AD_ELEC; pval: PLUS_3PER1; 
    qval: Q_DIR | Q_TAR; }
and EA_BLAST
  { xval: AD_ELEC; pval: (PLUS_2PER1)d8; aval: AR_BOLT;
    sval: REF; Flags: EF_PARTIAL, EF_ACTIVATE2, EF_NEEDS_PLUS, EF_3PERDAY;
    On Event MSG_BLASTNAME "ball lightning"; Purpose: EP_ATTACK; 
    Level: PLUS_2PER1; cval: YELLOW;
    Desc: "This item has a dual effect, granting you lightning resistance
      equal to thrice its magical plus, and allowing you to project blasts
      of ball lightning (which inflict 2d8 per plus) when it is activated."; }

AI_GIRDLE Effect "the Stormlord" : EA_GRANT
  { SC_ABJ; xval: RESIST; yval: AD_ELEC; pval: PLUS_3PER1; 
    Flags: EF_NEEDS_PLUS; Level: PLUS_3PER1; }
and EA_GRANT
  { xval: RESIST; yval: AD_SONI; pval: PLUS_3PER1;
    Desc: "This magical belt gives the wearer authority over storms, granting
      her three levels magical resistance to thunder and lightning (i.e., 
      electrical and sonic damage) for every magical plus."; }

AI_AMULET Effect "Periapt of Proof against Poisons" : EA_GRANT
  { SC_ABJ; xval: SAVE_BONUS; yval: SN_POISON; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: RESIST; yval: AD_TOXI; pval: PLUS_4PER1; 
    Flags: EF_NEEDS_PLUS, EF_NAMEONLY; Level: PLUS_2PER1; 
    Desc: "This item protects its wearer from toxins, granting a +2
      magic bonus to saving throws versus poison and 4 points of
      toxic damage resistance per magical plus it possesses."; }

AI_HELM Effect "Clear Sound" : EA_GRANT
  { SC_ABJ; xval: RESIST; yval: AD_SONI; pval: PLUS_4PER1; 
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This item grants the wearer resistance to sonic damage 
            and confusion effects equal to its magical bonus multipled by
            four."; }
and EA_GRANT
  { SC_ABJ; xval: SAVE_BONUS; yval: SN_CONF; pval: PLUS_4PER1; }

AI_WONDER Effect "Musical Defense" : EA_GRANT
  { SC_ABJ; xval: RESIST; yval: AD_SONI; pval: PLUS_3PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1;
    Desc: "This magical instrument grants its bearer protection from
      sound-based attacks -- three levels of sonic resistance per
      magical plus it possesses. In the hands of a character with
      three or more bard levels, it also adds its magical plus to 
      all saving throws against spells."; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_SPELLS; pval: PLUS_1PER1;
    On Event EV_MAGIC_HIT {
      if (e.efNum == 1 && !e.isRemove) {
        if (EActor->ItemPrereq($"bard",3,15))
          return NOTHING;
        return DONE;
        }
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"mandolin";
  }

/************************************************************************\
 *                             ARMOUR QUALITIES                          *
\************************************************************************/

/* NOTE: These names are hardcoded into Incursion's C++ source. If the
   game can't find these resources when it needs them, it will whinge
   and bail. You can't, at this time, add extra Qualities (for armour or
   weapons) just through resources. Sorry.' */

Effect "quality::light fortification" : EA_GRANT
  { xval: FORTIFICATION; pval: 25; }

Effect "quality::medium fortification" : EA_GRANT
  { xval: FORTIFICATION; pval: 50; }

Effect "quality::heavy fortification" : EA_GRANT
  { xval: FORTIFICATION; pval: 75; }

Effect "quality::auspicious" : EA_GRANT
  { xval: ADJUST_RES; yval: A_SAV; pval: PLUS_1PER1; }

Effect "quality::rapid healing" : EA_GRANT
  { SC_THA; xval: EXTRA_ABILITY; yval: CA_REGEN; pval: PLUS_1PER1; }

Effect "quality::fire resistance" : EA_GRANT
  { xval: RESIST; yval: AD_FIRE; pval: PLUS_3PER1; }
Effect "quality::acid resistance" : EA_GRANT
  { xval: RESIST; yval: AD_ACID; pval: PLUS_3PER1; }
Effect "quality::cold resistance" : EA_GRANT
  { xval: RESIST; yval: AD_COLD; pval: PLUS_3PER1; }
Effect "quality::lightning resistance" : EA_GRANT
  { xval: RESIST; yval: AD_ELEC; pval: PLUS_3PER1; }
Effect "quality::sonic resistance" : EA_GRANT
  { xval: RESIST; yval: AD_SONI; pval: PLUS_3PER1; }
Effect "quality::poison resistance" : EA_GRANT
  { xval: RESIST; yval: AD_TOXI; pval: PLUS_3PER1; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: PLUS_1PER1; }

Effect "quality::animated" : EA_GENERIC { }

Effect "quality::arrow-deflecting" : EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_DEFLECT_ARROWS; }

Effect "quality::bashing" : EA_GENERIC { }

Effect "quality::blinding" : EA_GRANT
  { xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE); 
    On Event META(EVICTIM(EV_STRIKE)) {
      if (EActor->Perceives(EVictim) & PER_VISUAL)
        {
          e.vDef += 2;
          e.strDef += " +2 glint";
          if (!random(20))
            {
              VPrint(e,"Your armour flares!", "The <EVictim>'s armour flares!");
              if (EActor->ResistLevel(AD_BLND) == -1)
                DPrint(e,"You are unaffected.", "The <EActor> is unaffected.");
              else if (EActor->SavingThrow(FORT,10 + EVictim->GetEffStatiObj(TRAP_EVENT,
                $"quality::blinding")->ItemLevel()/2 + EVictim->Mod(A_CHA),SA_MAGIC))
                DPrint(e,"You resist the effect.","The <EActor> resists the effect.");
              else {
                EActor->GainTempStati(BLIND,NULL,1d4,SS_MISC);
                DPrint(e,"You are blinded by the glare!","The <EActor> is blinded by the glare!");
                }
            }
        }
      return NOTHING;
      };
  }
  
Effect "quality::etherealness" : EA_INFLICT
  { xval: PHASED; yval: PHASE_ETHEREAL; 
    Flags: EF_ACTIVATE, EF_CANCEL, EF_PERMANANT, EF_3PERDAY;
    On Event POST(EV_EFFECT) {
      if (e.isActivation)
        EActor->LoseFatigue(2,false);
      return NOTHING;
      };
  }

Effect "quality::feather-light" : EA_GENERIC { }

Effect "quality::ghost-touch" : EA_GENERIC { }

Effect "quality::graceful" : EA_GENERIC { }

Effect "quality::invulnerability" : EA_GRANT
  { xval: EXTRA_ABILITY; yval: CA_WEAPON_IMMUNITY; pval: 1; }

Effect "quality::great invulnerability" : EA_GRANT
  { xval: EXTRA_ABILITY; yval: CA_WEAPON_IMMUNITY; pval: 4; }

Effect "quality::magic resistance" : EA_GRANT
  { xval: ADJUST; yval: A_MR;  pval: PLUS_10PER1; }

Effect "quality::shadow" : EA_GRANT
  { xval: SKILL_BONUS; yval: SK_HIDE; pval: PLUS_2PER1; }

Effect "quality::silent moves" : EA_GRANT
  { xval: SKILL_BONUS; yval: SK_MOVE_SIL; pval: PLUS_2PER1; }

Effect "quality::slick" : EA_GRANT
  { xval: SKILL_BONUS; yval: SK_ESCAPE_ART; pval: PLUS_2PER1; }

Effect "quality::might" : EA_GRANT
  { xval: ADJUST; yval: A_STR; pval: PLUS_1PER1; }
Effect "quality::agility" : EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1; }
Effect "quality::endurance" : EA_GRANT
  { xval: ADJUST; yval: A_CON; pval: PLUS_1PER1; }

Effect "quality::radiant" : EA_GENERIC
  { aval: AR_MFIELD; lval: 6; cval: YELLOW;
    rval: FI_MOBILE|FI_LIGHT;  }

Effect "quality::fearsome" : EA_GENERIC { }
Effect "quality::shifting" : EA_GENERIC { }
Effect "quality::bane-blind" : EA_GENERIC { }
Effect "quality::spiked" : EA_GENERIC { }

Effect "quality::resistant" : EA_GRANT
  { SC_ENC; xval: ADJUST; yval: A_SAV; pval: PLUS_1PER1; }

Effect "quality::command" : EA_GRANT
  { xval: ADJUST; yval: A_CHA; pval: PLUS_1PER1; SC_ENC; }
  // ww: should also give that morale bonus

Effect "quality::sacred" : EA_GRANT 
  { xval: TURN_ABILITY; yval: MA_UNDEAD; pval: PLUS_1PER1; 
    On Event EV_MAGIC_HIT {
      e.vDmg = max(e.vDmg,EActor->HighStatiMag(
        TURN_ABILITY,MA_UNDEAD) + EItem->GetPlus());
      };
  }

Effect "quality::graven" : EA_GENERIC { }

Effect "quality::life-keeping" : EA_GRANT
  { xval: SUSTAIN; yval: A_AID; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: RESIST; yval: AD_NECR; pval: PLUS_3PER1; }

/************************************************************************\
 *                                SCROLLS                               *
\************************************************************************/

AI_SCROLL Spell "Identify;scroll" : EA_GENERIC
  { SC_DIV; Level: 1; qval: Q_INV;
  // ww: we want Identify wands to be *easy* to use! 
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY, EF_STAPLE;
    Desc: "This scroll identifies the basic magical nature of one chosen
      item when fired."; Purpose: EP_PLAYER_ONLY;
    On Event 
      EV_EFFECT {
        EActor->IdentByTrial(EItem);
        return NOTHING;
        },
      EV_RATETARG {
        if (EItem->isKnown(KN_IDENTIFIED) || EItem->isType(T_LIGHT) ||
            EItem->isType(T_FOOD))
          return ABORT;
        return NOTHING;
        },
      EV_MAGIC_HIT {
        hObj it;
        if (GetHandle(EItem) != NULL_OBJ && EItem->isBlessed())
          if (1d100 < EActor->Mod(A_LUC)*3)
            {
              EActor->IPrint("The magic of this scroll is especially deep!
                You are overcome with revelations!");
              for (it=EActor->FirstInv();it;it=EActor->NextInv())
                it->MakeKnown(0xFF);
              return DONE;
            }
        ETarget->MakeKnown(0xFF);
        EActor->IPrint("That is an <hObj>.",ETarget);
        return DONE;
      };
  }

AI_SCROLL Spell "*Identify*;scroll" : EA_GENERIC
  { SC_DIV; Level: 3; 
    Desc: "This scroll identifies the basic magical nature of every item
      in the reader's possession when it is used."; Purpose: EP_PLAYER_ONLY;
    On Event 
      EV_MAGIC_HIT {
        hObj it; 
        for (it=EActor->FirstInv();it;it=EActor->NextInv())
          it->MakeKnown(0xFF);
        return DONE;
        };
  }

AI_SCROLL Effect "Enchant Armour" : EA_GENERIC
  {
    Level: 3;
    Desc: "This scroll, when read, will increase the plus of the
      suit of armour you currently wear by 1 (to a maximum of +5),
      provided that the armour's item level (before enchantment) is 
      lower than your character level plus your Charisma modifier, 
      +2 if enchanting medium armour or +4 if enchanting heavy armour.";
    On Event EV_MAGIC_HIT {
      hObj Ar; int16 lev;
      lev = EActor->ChallengeRating() + EActor->Mod(A_CHA);
      Ar = EActor->InSlot(SL_ARMOUR); 
      if (Ar == NULL_OBJ)
        return NOTHING;
      if (!Ar->isType(T_ARMOUR))
        return NOTHING;
      if (Ar->isGroup(WG_HARMOUR))
        lev += 4;
      else if (Ar->isGroup(WG_MARMOUR))
        lev += 2;
      if (Ar->isCursed())
        {
          EActor->IPrint("Your armour glows an angry red!",
                          "The <hObj>'s armour glows an angry red!",
                          EActor);
          EActor->MakeKnown(KN_CURSE);
          return DONE;
        }
      if (Ar->GetInherentPlus() >= 5 ||
            Ar->ItemLevel() > lev)
        {
          EActor->IDPrint("Your armour glows white, but the glow soon fades.",
                          "The <hObj>'s armour glows white, but the glow soon fades.",
                          EActor);
          return DONE;
        }
      EActor->IDPrint("Your armour glows white!",
                      "The <hObj>'s armour glows white!", EActor);
      Ar->SetInherentPlus(Ar->GetInherentPlus()+1);
      return DONE;
      };
  }      

AI_SCROLL Effect "Enchant Armour (featherlight)" : EA_GENERIC
  {
    Level: 3;
    Desc: "This scroll, when read, will bestow the featherlight
      quality on the suit of armour you currently wear, provided 
      that the armour's item level (before enchantment) is lower 
      than your character level plus your Charisma modifier, 
      +2 if enchanting medium armour or +4 if enchanting heavy armour.";
    On Event EV_MAGIC_HIT {
      hObj Ar; int16 lev;
      lev = EActor->ChallengeRating() + EActor->Mod(A_CHA);
      Ar = EActor->InSlot(SL_ARMOUR); 
      if (Ar == NULL_OBJ)
        return NOTHING;
      if (!Ar->isType(T_ARMOUR))
        return NOTHING;
      if (Ar->isGroup(WG_HARMOUR))
        lev += 4;
      else if (Ar->isGroup(WG_MARMOUR))
        lev += 2;
      if (Ar->isCursed())
        {
          EActor->IPrint("Your armour glows an angry red!",
                          "The <hObj>'s armour glows an angry red!",
                          EActor);
          EActor->MakeKnown(KN_CURSE);
          return DONE;
        }
      if (Ar->HasQuality(IQ_FEATHERLIGHT) ||
            Ar->ItemLevel() > lev)
        {
          EActor->IDPrint("Your armour glows white, but the glow soon fades.",
                          "The <hObj>'s armour glows white, but the glow soon fades.",
                          EActor);
          return DONE;
        }
      EActor->IDPrint("Your armour glows white!",
                      "The <hObj>'s armour glows white!", EActor);
      Ar->AddQuality(IQ_FEATHERLIGHT);
      return DONE;
      };
  }      

AI_SCROLL Effect "Enchant Armour (graceful)" : EA_GENERIC
  {
    Level: 3;
    Desc: "This scroll, when read, will bestow the featherlight
      quality on the suit of armour you currently wear, provided 
      that the armour's item level (before enchantment) is lower 
      than your character level plus your Charisma modifier, 
      +2 if enchanting medium armour or +4 if enchanting heavy armour.";
    On Event EV_MAGIC_HIT {
      hObj Ar; int16 lev;
      lev = EActor->ChallengeRating() + EActor->Mod(A_CHA);
      Ar = EActor->InSlot(SL_ARMOUR); 
      if (Ar == NULL_OBJ)
        return NOTHING;
      if (!Ar->isType(T_ARMOUR))
        return NOTHING;
      if (Ar->isGroup(WG_HARMOUR))
        lev += 4;
      else if (Ar->isGroup(WG_MARMOUR))
        lev += 2;
      if (Ar->isCursed())
        {
          EActor->IPrint("Your armour glows an angry red!",
                          "The <hObj>'s armour glows an angry red!",
                          EActor);
          EActor->MakeKnown(KN_CURSE);
          return DONE;
        }
      if (Ar->HasQuality(AQ_GRACEFUL) ||
            Ar->ItemLevel() > lev)
        {
          EActor->IDPrint("Your armour glows white, but the glow soon fades.",
                          "The <hObj>'s armour glows white, but the glow soon fades.",
                          EActor);
          return DONE;
        }
      EActor->IDPrint("Your armour glows white!",
                      "The <hObj>'s armour glows white!", EActor);
      Ar->AddQuality(AQ_GRACEFUL);
      return DONE;
      };
  }      

AI_SCROLL Effect "Enchant Armour (life-keeping)" : EA_GENERIC
  {
    Level: 5;
    Desc: "This scroll, when read, will bestow the featherlight
      quality on the suit of armour you currently wear, provided 
      that the armour's item level (before enchantment) is lower 
      than your character level plus your Charisma modifier, 
      +2 if enchanting medium armour or +4 if enchanting heavy armour.";
    On Event EV_MAGIC_HIT {
      hObj Ar; int16 lev;
      lev = EActor->ChallengeRating() + EActor->Mod(A_CHA);
      Ar = EActor->InSlot(SL_ARMOUR); 
      if (Ar == NULL_OBJ)
        return NOTHING;
      if (!Ar->isType(T_ARMOUR))
        return NOTHING;
      if (Ar->isGroup(WG_HARMOUR))
        lev += 4;
      else if (Ar->isGroup(WG_MARMOUR))
        lev += 2;
      if (Ar->isCursed())
        {
          EActor->IPrint("Your armour glows an angry red!",
                          "The <hObj>'s armour glows an angry red!",
                          EActor);
          EActor->MakeKnown(KN_CURSE);
          return DONE;
        }
      if (Ar->HasQuality(AQ_LIFEKEEPING) ||
            Ar->ItemLevel() > lev)
        {
          EActor->IDPrint("Your armour glows white, but the glow soon fades.",
                          "The <hObj>'s armour glows white, but the glow soon fades.",
                          EActor);
          return DONE;
        }
      EActor->IDPrint("Your armour glows white!",
                      "The <hObj>'s armour glows white!", EActor);
      Ar->AddQuality(AQ_LIFEKEEPING);
      return DONE;
      };
  }      


AI_SCROLL Effect "Enchant Armour (fortification)" : EA_GENERIC
  {
    Level: 4;
    Desc: "This scroll, when read, will bestow a level of the
      fortification (no fortification becomes light, light
      becomes medium and medium becomes heavy) 
      quality on the suit of armour you currently wear, provided 
      that the armour's item level (before enchantment) is lower 
      than your character level plus your Charisma modifier, 
      +2 if enchanting medium armour or +4 if enchanting heavy armour.";
    On Event EV_MAGIC_HIT {
      hObj Ar; int16 lev;
      lev = EActor->ChallengeRating() + EActor->Mod(A_CHA);
      Ar = EActor->InSlot(SL_ARMOUR); 
      if (Ar == NULL_OBJ)
        return NOTHING;
      if (!Ar->isType(T_ARMOUR))
        return NOTHING;
      if (Ar->isGroup(WG_HARMOUR))
        lev += 4;
      else if (Ar->isGroup(WG_MARMOUR))
        lev += 2;
      if (Ar->isCursed())
        {
          EActor->IPrint("Your armour glows an angry red!",
                          "The <hObj>'s armour glows an angry red!",
                          EActor);
          EActor->MakeKnown(KN_CURSE);
          return DONE;
        }
      if (Ar->HasQuality(AQ_HEAVY_FOR) ||
            Ar->ItemLevel() > lev)
        {
          EActor->IDPrint("Your armour glows white, but the glow soon fades.",
                          "The <hObj>'s armour glows white, but the glow soon fades.",
                          EActor);
          return DONE;
        }
      EActor->IDPrint("Your armour glows white!",
                      "The <hObj>'s armour glows white!", EActor);
      if (Ar->HasQuality(AQ_MEDIUM_FOR))
        { Ar->RemoveQuality(AQ_MEDIUM_FOR);
          Ar->AddQuality(AQ_HEAVY_FOR);
          return DONE; }
      else if (Ar->HasQuality(AQ_LIGHT_FOR))
        { Ar->RemoveQuality(AQ_LIGHT_FOR);
          Ar->AddQuality(AQ_MEDIUM_FOR);
          return DONE; }
      else
        Ar->AddQuality(AQ_LIGHT_FOR);
      return DONE;
      };
  }   

AI_SCROLL Effect "Enchant Armour (resistance)" : EA_GENERIC
  {
    Level: 4;
    Desc: "This scroll, when read, will bestow one of the 
      elemental resistance qualities (that your armour doesn't
      already have) on the suit of armour you currently wear, provided 
      that the armour's item level (before enchantment) is lower 
      than your character level plus your Charisma modifier, 
      +2 if enchanting medium armour or +4 if enchanting heavy armour.";
    On Event EV_MAGIC_HIT {
      hObj Ar; int16 lev;
      lev = EActor->ChallengeRating() + EActor->Mod(A_CHA);
      Ar = EActor->InSlot(SL_ARMOUR); 
      if (Ar == NULL_OBJ)
        return NOTHING;
      if (!Ar->isType(T_ARMOUR))
        return NOTHING;
      if (Ar->isGroup(WG_HARMOUR))
        lev += 4;
      else if (Ar->isGroup(WG_MARMOUR))
        lev += 2;
      if (Ar->isCursed())
        {
          EActor->IPrint("Your armour glows an angry red!",
                          "The <hObj>'s armour glows an angry red!",
                          EActor);
          EActor->MakeKnown(KN_CURSE);
          return DONE;
        }
      if ((Ar->HasQuality(AQ_FIRE_RES) && Ar->HasQuality(AQ_COLD_RES) &&
           Ar->HasQuality(AQ_ACID_RES) && Ar->HasQuality(AQ_LIGHT_RES) &&
           Ar->HasQuality(AQ_SONIC_RES) && Ar->HasQuality(AQ_POISON_RES)) ||
            Ar->ItemLevel() > lev)
        {
          EActor->IDPrint("Your armour glows white, but the glow soon fades.",
                          "The <hObj>'s armour glows white, but the glow soon fades.",
                          EActor);
          return DONE;
        }
      EActor->IDPrint("Your armour glows white!",
                      "The <hObj>'s armour glows white!", EActor);
      do {
        switch(1d6) {
          case 1:
            if (!Ar->HasQuality(AQ_FIRE_RES))
              { Ar->AddQuality(AQ_FIRE_RES);
                return DONE; }
           break;
          case 2:
            if (!Ar->HasQuality(AQ_COLD_RES))
              { Ar->AddQuality(AQ_COLD_RES);
                return DONE; }
           break;
          case 3:
            if (!Ar->HasQuality(AQ_SONIC_RES))
              { Ar->AddQuality(AQ_SONIC_RES);
                return DONE; }
           break;
          case 4:
            if (!Ar->HasQuality(AQ_LIGHT_RES))
              { Ar->AddQuality(AQ_LIGHT_RES);
                return DONE; }
           break;
          case 5:
            if (!Ar->HasQuality(AQ_ACID_RES))
              { Ar->AddQuality(AQ_ACID_RES);
                return DONE; }
           break;
          case 6:
            if (!Ar->HasQuality(AQ_POISON_RES))
              { Ar->AddQuality(AQ_POISON_RES);
                return DONE; }
           break;
          }
        }
      while (1);
      };
  }      
     

/************************************************************************\
 *                                POTIONS                               *
\************************************************************************/

AI_POTION Effect "Fury" : EA_INFLICT
  { SC_ENC; xval: RAGING; yval: +4; Level: 1;
    Flags: EF_AUTOID, EF_DLONG, EF_NOTBAD; Purpose: EP_BUFF;
    Desc: "This potion drives you into a mad fury, allowing you to
      rage as a barbarian does (+4 Str, +4 Con, +2 Will saves)."; }

AI_POTION Effect "Valour;potion" : EA_INFLICT
  { SC_ENC; xval: IMMUNITY; yval: AD_FEAR; Level: 1;
    Flags: EF_USERID, EF_DLONG, EF_NOTBAD; Purpose: EP_COUNTER (VS_FEAR); }
  and EA_HEALING
  { xval: HEAL_MALADY; yval: AFRAID; 
    Desc: "This potion removes fear, and renders you immune to fear
      for a long period after drinking it."; }

AI_POTION Effect "Neutralize Poison;potion" : EA_INFLICT
  { xval: RESIST; yval: AD_TOXI; pval: 7;
    Flags: EF_NOTBAD; Level: 1;
    Purpose: EP_COUNTER (VS_POISON); }      
  and EA_HEALING
  { xval: HEAL_MALADY; yval: POISONED; }
  and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: +5;
    Desc: "This potion neutralizes poisons active in your system,
      gives you a +5 bonus to save against further exposures and
      grants you resistance to toxic damage (level 7) for a brief
      period after drinking it."; }

/* Immunity to Elfshot! */
AI_POTION Effect "Wakefulness" : EA_INFLICT
  { SC_ENC; xval: IMMUNITY; yval: AD_SLEE; Level: 1;
    Desc: "This potion renders you immune to sleep effects for a
      limited period after you drink it."; }

AI_POTION Effect "Healing" : EA_HEALING
  { SC_THA; Cost: 3; xval: HEAL_HP; pval: 2d8+8; 
    Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY); Level: 1;
    Flags: EF_STAPLE;
    Desc: "When drunk, this potion heals 2d8+8 points of
      damage suffered."; }
  
AI_POTION Effect "Extra-Healing" : EA_HEALING
  { SC_THA; Cost: 7; xval: HEAL_HP; pval: 3d8+12;
    Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY); Level: 4;
    Desc: "When drunk, this potion heals 3d8+12 points of
      damage suffered."; }

AI_POTION Effect "True-Healing" : EA_HEALING
  { SC_THA; Cost: 7; xval: HEAL_HP; pval: 4d8+20;
    Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY); Level: 7;
    Desc: "When drunk, this potion heals 4d8+20 points of
      damage suffered."; }

AI_POTION Effect "Mana" : EA_HEALING
  { SC_THA; Level: 1; xval: HEAL_MANA; pval: 3d8+8; 
    Purpose: EP_FIX_TROUBLE (TROUBLE_LOWMANA);
    Flags: EF_STAPLE; Level: 1; 
    Desc: "This potion restores 3d8+8 points of mana when 
      drunk."; }

AI_POTION Effect "*Mana*" : EA_HEALING
  { SC_THA; Level: 3; xval: HEAL_MANA; pval: 5d12+12; 
    Purpose: EP_FIX_TROUBLE (TROUBLE_LOWMANA); Level: 3; 
    Desc: "This potion restores 5d12+12 points of mana when 
      drunk."; }

AI_POTION Effect "*MANA*" : EA_HEALING
  { SC_THA; Level: 5; xval: HEAL_MANA; pval: 8d20+20; 
    Purpose: EP_FIX_TROUBLE (TROUBLE_LOWMANA); 
    Level: 7; 
    Desc: "This potion restores 8d20+20 points of mana when 
      drunk."; }


AI_POTION Effect "Dimunition" : EA_GENERIC
  { SC_THA; Level: 1; Flags: EF_AUTOID, EF_NOGEN;    
    On Event EV_MAGIC_HIT {
      return RedirectEff(e,$"reduce");
      };
    Desc: "When drunk, this potion causes you to shrink, lowering
      your size by one size category.";
  }

AI_POTION Effect "Growth" : EA_GENERIC
  { SC_THA; Level: 1; Flags: EF_AUTOID, EF_NOTBAD;    
    On Event EV_MAGIC_HIT {
      return RedirectEff(e,$"enlarge");
      };
    Desc: "When drunk, this potion causes you to grow, increasing
      your size by one size category.";
  }

#if 0
AI_POTION Effect "Silversheen" : EA_GENERIC // ww: it's in the SRD
  {
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY; Level: 5; qval: Q_INV; 
    Desc: "This magical alchemical potion can be applied to 
      an item and changes its basic material composition into silver."; 
    Purpose: EP_PLAYER_ONLY;
    On Event 
      EV_RATETARG {
        if (!EItem->QualityOK(IQ_SILVER))
          return ABORT;
        return NOTHING;
      },
      EV_MAGIC_HIT {
        ETarget->AddQuality(IQ_SILVER);
        DPrint(e,"Your <ETarget> glows with a soft silver light.",NULL);
        return DONE;
      };
  }
#endif

AI_POTION Effect "Remove Curse;potion" : EA_GENERIC
  { SC_ABJ; Level: 2; qval: Q_INV | Q_TAR;
    Flags: EF_LOSEMANA, EF_STAPLE, EF_AFFECTS_ITEMS;
    Purpose: EP_PLAYER_ONLY;
    Desc: "Drinking this potion lifts a curse from a single chosen
      item or individual.\n
      __Curses include the effects of a cursed item that cannot be removed
      or the effects of spells like <9>bestow curse<1> or <9>mark of justice<1>.
      A -6 luck penalty to an attribute is a <9>bestow curse<1> effect.
      Other attribute damage, poisoning, diseases and experience drain do not count
      as curses -- though some curse effects do reduce attributes.";
    On Event EV_MAGIC_HIT {	
      if (ETarget->isCreature())
        {
          /*
          if (ETarget->HighSourceCLev(SS_CURS) > (e.vCasterLev + EActor->Mod(A_CHA)))
            {
              ETarget->IPrint("Your body glows with an angry red radiance.");
              return DONE;
            }
          */
          ETarget->RemoveStatiSource(SS_CURS);
          VPrint(e,"Your body glows with a soft blue light.",
                   "The <EVictim>'s body glows with a soft blue light.");
          return DONE;     
        }
      if (ETarget->isType(T_ITEM)) {
        ETarget->MakeKnown(KN_CURSE);
        if (!(ETarget->IFlags & IF_CURSED))
          {
            DPrint(e,"Your <ETarget> glows with a soft blue light.",NULL);
            return DONE;
          }
        /*
        if (ETarget->ItemLevel() > (e.vCasterLev + EActor->Mod(A_CHA)))
          DPrint(e,"Your <ETarget> glows with an angry red radiance.",NULL);
        else {
        */
          ETarget->IFlags &= ~IF_CURSED;
          DPrint(e,"Your <ETarget> glows with a soft blue light.",NULL);
        /* } */
        }
      else 
        APrint(e,"The <ETarget> glows with a soft blue light.");
      return NOTHING;
      },
      EV_RATETARG {
        if (ETarget->isCreature())
          return DONE;
        if (ETarget->isType(T_ITEM))
          if (!(ETarget->isCursed() && ETarget->isKnown(KN_CURSE)))
            return ABORT;
        return NOTHING;
      };
  }

AI_POTION Effect "Giant Strength;potion" : EA_INFLICT
  { SC_THA; xval: ADJUST; yval: A_STR; pval: 2d4+2; 
    Level: 1; Flags: EF_NOTBAD; 
    Desc: "This potion gives you a magic bonus to your Strength
      of 2d4+2 points for a brief period."; }

AI_POTION Effect "Disorientation" : EA_INFLICT
  { SC_THA; Cost: 4; xval: CONFUSED; pval: 6d6; 
    Flags: EF_AUTOID, EF_CURSED; Level: 0; 
    Desc: "This cursed potion causes you to become confused for
      a short period of time when drunk."; }


AI_POTION Effect "Blindness" : EA_INFLICT
  { SC_THA; xval: BLIND; pval: 6d6; 
    Flags: EF_AUTOID, EF_CURSED; Level: 0; 
    Desc: "This cursed potion strikes you blind for a brief
      period of time when drunk."; }

AI_POTION Effect "Beast Control" : EA_INFLICT
  { SC_ENC; xval: CHARMED; yval: CH_DOMINATE; Level: 5;
    tval: MA_BEAST; aval: AR_GLOBE; qval: Q_TAR; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_STRIKEID; sval: WILL;
    Desc: "This potion allows you to mentally dominate any one
      nearby beast when it is drunk."; }

AI_POTION Effect "Undead Control" : EA_INFLICT
  { SC_ENC; xval: CHARMED; yval: CH_DOMINATE; Level: 5;
    tval: MA_UNDEAD; aval: AR_GLOBE; qval: Q_TAR; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_STRIKEID; sval: WILL;
    Desc: "This potion allows you to mentally dominate any one
      nearby grave-born abomination when it is drunk."; }

AI_POTION Effect "Elemental Control" : EA_INFLICT
  { SC_ENC; xval: CHARMED; yval: CH_DOMINATE; Level: 5;
    tval: MA_ELEMENTAL; aval: AR_GLOBE; qval: Q_TAR; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_STRIKEID; sval: WILL;
    Desc: "This potion allows you to mentally dominate any one
      nearby elemental when it is drunk."; }

AI_POTION Effect "Outsider Control" : EA_INFLICT
  { SC_ENC; xval: CHARMED; yval: CH_DOMINATE; Level: 5;
    tval: MA_OUTSIDER; aval: AR_GLOBE; qval: Q_TAR; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_STRIKEID; sval: WILL;
    Desc: "This potion allows you to mentally dominate any one
      nearby outsider when it is drunk."; }

AI_POTION Effect "Fire Breath" : EA_BLAST
  { SC_EVO; Level: 2; aval: AR_BEAM; qval: Q_DIR | Q_TAR; Level: 3;
    xval: AD_FIRE; lval: 4; sval: REF partial; pval: 3d8+3;
    Purpose: EP_ATTACK; cval: RED; Flags: EF_AUTOID; 
    Desc: "Drinking this potion allows you to breathe out a gout
      of fire inflicting 3d8+3 points of fire damage in a direction
      you specify."; }

AI_POTION Effect "Vitality" : EA_HEALING
  { SC_THA; Cost: 7; xval: HEAL_FATIGUE; pval: 3d4+1;
    Purpose: EP_FIX_TROUBLE (TROUBLE_FATIGUE); Level: 2;
    Flags: EF_STAPLE; 
    Desc: "Drinking this potion removes fatigue and exhaustion,
      restoring 3d4+1 lost fatigue points."; }

AI_POTION Effect "Weakness;potion" : EA_DRAIN
  { SC_THA; xval: AD_DAST; pval: 1d6+1; Flags: EF_AUTOID, EF_CURSED; 
    Desc: "This cursed potion inflicts 1d6+1 points of damage to
      your Strength if you drink it."; }

AI_POTION Effect "Unhealth" : EA_DRAIN
  { SC_THA; xval: AD_DACO; pval: 1d6+1; Flags: EF_AUTOID, EF_CURSED; 
    Desc: "This cursed potion inflicts 1d6+1 points of damage to
      your Constitution if you drink it."; }

AI_POTION Effect "Philter of Stammering and Stuttering" : EA_DRAIN
  { SC_THA; xval: AD_DACH; pval: 1d6+1; 
    Flags: EF_AUTOID, EF_CURSED, EF_NAMEONLY; 
    Desc: "This cursed potion inflicts 1d6+1 points of damage to
      your Charisma if you drink it."; }

AI_POTION Effect "Poison" : EA_GENERIC
  { Flags: EF_CURSED, EF_AUTOID; Level: 0;
    On Event EV_MAGIC_HIT {
      rID pID;
      pID = theGame->GetEffectID(PUR_POISON,0,8,0);
      if ((bool)pID) 
        EActor->GainPermStati(POISONED,NULL,SS_MISC,0,0,pID);
      EActor->IdentByTrial(EItem);
      };
    Desc: "This potion poisons its imbiber with a random sort of
      poison when drunk. It cannot be used to poison a weapon like
      a normal poison, however.";
  }

AI_POTION Effect "Restore Strength" : EA_HEALING
  { xval: HEAL_SATTR; yval: A_STR; pval: 6d8; Flags: EF_STAPLE;
    Desc: "This potion heals [6d8 / 5] points of damage to your
      Strength when it is drunk."; }
AI_POTION Effect "Restore Dexterity" : EA_HEALING
  { xval: HEAL_SATTR; yval: A_DEX; pval: 6d8; Flags: EF_STAPLE; 
    Desc: "This potion heals [6d8 / 5] points of damage to your
      Dexterity when it is drunk."; }
AI_POTION Effect "Restore Constitution" : EA_HEALING
  { xval: HEAL_SATTR; yval: A_CON; pval: 6d8; Flags: EF_STAPLE;
    Desc: "This potion heals [6d8 / 5] points of damage to your
      Constitution when it is drunk."; }
AI_POTION Effect "Restore Intelligence" : EA_HEALING
  { xval: HEAL_SATTR; yval: A_INT; pval: 6d8; Flags: EF_STAPLE;
    Desc: "This potion heals [6d8 / 5] points of damage to your
      Intelligence when it is drunk."; }
AI_POTION Effect "Restore Wisdom" : EA_HEALING
  { xval: HEAL_SATTR; yval: A_WIS; pval: 6d8; Flags: EF_STAPLE;
    Desc: "This potion heals [6d8 / 5] points of damage to your
      Wisdom when it is drunk."; }
AI_POTION Effect "Restore Charisma" : EA_HEALING
  { xval: HEAL_SATTR; yval: A_CHA; pval: 6d8; Flags: EF_STAPLE;
    Desc: "This potion heals [6d8 / 5] points of damage to your
      Charisma when it is drunk."; }
AI_POTION Effect "Restore Luck" : EA_HEALING
  { xval: HEAL_SATTR; yval: A_LUC; pval: 6d8; Flags: EF_STAPLE;
    Desc: "This potion heals [6d8 / 5] points of damage to your
      Luck when it is drunk."; }

AI_POTION Effect "Light;potion" : EA_INFLICT
  {
    xval: TRAP_EVENT; yval: PRE(EV_DAMAGE); Level: 3;
    Desc: "A potion of light in a congealed cocktail of positive
      energy, held in reserve by the body for a brief period of
      time to deflect experience-draining negative energy attacks.
      Once drunk, the imbiber is immune to such attacks for 3d6
      turns.";
    Flags: EF_AUTOID;
    On Event META(PRE(EV_DAMAGE)) {
      if (e.DType == AD_DREX) {
        APrint(e,"A warm glow blocks the negative energy!");
        return DONE;
        }
      return NOTHING;
      },
    MSG_STATINAME 
      "PotLight",
    EV_EFFECT {
      EActor->IPrint("You feel warm inside.");
      return NOTHING;
      },
    EV_CALC_EFFECT {
      e.vDuration = 3d6;
      return NOTHING;
      },
    EV_ELAPSED
      "The feeling of inner warmth fades.";
  }

AI_POTION Effect "Faerie;potion" : EA_INFLICT
  {
    xval: MANIFEST; Level: 4;
    Desc: "A potion of faerie, distilled from the blood of fae creatures,
      duplicates the inherent elven ability of manifestation, enhancing
      the imbiber's Charisma and allowing her to exist on all planes at
      once for 3d6 turns.";
    Flags: EF_AUTOID;
    On Event MSG_STATINAME 
      "PotFaerie",
    EV_EFFECT {
      EActor->IPrint("You feel spectacular, ancient and whole.");
      return NOTHING;
      },
    EV_CALC_EFFECT {
      e.vDuration = 3d6;
      return NOTHING;
      },
    EV_ELAPSED
      "The feeling of grandeur fades.";
  }

#define WEAPON_OIL_POTION                        \
  On Event EV_DRINK {                            \
    EActor->IPrint("Boy, that tasted greasy!");  \
    EItem->TakeOne()->Remove(true);              \
    return DONE;                                 \
    },                                           \
  EV_APPLY {                                     \
    if (!EItem->isKnown(KN_MAGIC))               \
      return NOTHING;                            \
    if (GetHandle(EActor) == GetHandle(ETarget)) \
      DPrint(e, "You rub the oil into your skin.",               \
        "The <EActor> rubs the oil into <his:EActor> skin.");    \
    else                                                         \
      DPrint(e, "You rub the oil on the <ETarget>.",             \
        "The <EActor> rubs the oil on <his:EActor> <ETarget>."); \
    if (ETarget->isType(T_WEAPON))               \
      ReThrow(EV_EFFECT,e);                      \
    else                                         \
      APrint(e,"Nothing happens.");              \
    EItem->TakeOne()->Remove(true);              \
    };                                           
    
    
    
AI_POTION Effect "Oil of Transformation" : EA_GENERIC
  {
    Desc: "This oil, when applied to the surface of a weapon,
      permanently transforms that weapon into any other type
      of weapon, as a limited form of the <9>polymorph any
      object<7> spell. The weapon retains any magical qualities
      it had before being transformed, provided that they apply
      to its new form; any inapplicable abilities are lost.
      Thus, a +4 keen longsword could be changed into a +4
      keen scimitar or a +4 keen dagger, but only into a +4
      quarterstaff, since the keen quality only applies to
      slashing weapons. Unique or specific weapons cannot be
      transformed by this oil.\n
      __Use the Apply verb to transform a weapon with this oil.";
    Level: 5;
    Flags: EF_NAMEONLY, EF_AFFECTS_ITEMS, EF_ITEMS_ONLY, EF_AUTOID;
    WEAPON_OIL_POTION
    rID currID;
    On Event EV_MAGIC_HIT {
      rID newID; int16 i;
      if (!ETarget->isType(T_WEAPON))
        {
          EActor->IPrint("Only weapons can be transformed!");
          return ABORT;
        }
      if (ETarget->ieID != NULL_ID)
        {
          EActor->IPrint("That weapon cannot be transformed!");
          return ABORT;
        }
      currID = ETarget->iID;
      newID = ETerm->ChooseResource(
        "Select a New Form", T_TITEM, $"Oil of Transformation");
      if (newID == -1)
        return DONE;
      if (ETarget->isPlural())
        EActor->IPrint("Your <hObj> change into <hText>!",
          ETarget,Pluralize(NAME(newID)));
      else
        EActor->IPrint("Your <hObj> changes into a <Res>!",
          ETarget,newID);
      ETarget->ChangeIID(newID);
      for (i=0;i!=WQ_LAST;i++)
        if (ETarget->HasQuality(i))
          {
            ETarget->RemoveQuality(i);
            if (ETarget->QualityOK(i))
              ETarget->AddQuality(i);
          }
      return DONE;
      },
    EV_RATETARG {
      if (!ETarget->isType(T_WEAPON))
        return ABORT;
      if (ETarget->ieID != NULL_ID)
        return ABORT;
      return NOTHING;
      },
    EV_CRITERIA {
      if (e.eID == currID)
        return false;
      if (ResourceHasFlag(e.eID,IT_GROUP) !=
          ResourceHasFlag(currID,IT_GROUP))
        return false;
      if (ResourceHasFlag(e.eID,IT_BGROUP) !=
          ResourceHasFlag(currID,IT_BGROUP))
        return false;
      if (ResourceHasFlag(e.eID,IT_NOGEN))
        return false;
      if (e.eID->RIType != currID->RIType)
        return false;
      return true;
      };
  }
  
AI_POTION Effect "See Invisibility;potion" : EA_INFLICT
  { SC_DIV; Level: 1; xval: SEE_INVIS; Flags: EF_DLONG, EF_AUTOID;
    On Event MSG_STATINAME "See Invis" / "SI"; 
    Desc: "Drinking this potion allows the imbiber to see invisible 
      creatures normally; it also renders visible creatures on
      the ethereal plane, who normally cannot be seen by observers
      from the material plane.";
    On Event 
      MSG_CAST
        "Your vision expands into the otherworldly!",
      EV_ELAPSED
        "Your vison fades back to mundane levels.";
  }
/************************************************************************\
 *                           SKILL BOOSTERS                             *
\************************************************************************/

AI_BRACERS Effect "the Endless Wave" : EA_GRANT
  { SC_THA; SC_ABJ; xval: SKILL_BONUS; yval: SK_SWIMMING; pval: PLUS_2PER1;
    Purpose: EP_BUFF;  Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1_ADD1; 
    Desc: "When worn, this item grants you a magic bonus to your
      Swimming skill equal to twice its plus. In addition, it makes
      you inoffensive to water creatures and makes you immune to soaking
      damage."; }
  and EA_GRANT { xval: NEUTRAL_TO; yval: MA_WATER; }
  and EA_GRANT { xval: IMMUNITY; yval: AD_SOAK; }

AI_EYES Effect "Detection" : EA_GRANT
  { SC_DIV|SC_ENC; xval: SKILL_BONUS; yval: SK_SEARCH; pval: PLUS_2PER1;
    Purpose: EP_BUFF;  Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "When worn, this item grants you a magic bonus to your
      Search and Wilderness Lore skills equal to twice its plus. It also
      grants you the Sharp Senses ability, allowing you a chance to
      automatically detect secret doors as you walk by them."; }
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_WILD_LORE; pval: PLUS_2PER1; }
  and EA_GRANT { xval: EXTRA_ABILITY; yval: CA_SHARP_SENSES; pval: 1; }

AI_EYES Effect "the Eagle" : EA_GRANT
  { SC_THA; SC_ABJ; xval: SKILL_BONUS; yval: SK_SPOT; pval: PLUS_2PER1;
    Purpose: EP_BUFF;  Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "When worn, this item grants you a magic bonus to your
      Spot skill equal to twice its plus. It grants the Superior
      Senses feat, thus doubling you basic vision range.  In addition, it
      makes you inoffensive to birds."; }
  and EA_GRANT { xval: EXTRA_FEAT; yval: FT_ACUTE_SENSES; }
  and EA_GRANT { xval: NEUTRAL_TO; yval: MA_BIRD; }

AI_EYES Effect "the Soul;eyes" : EA_GRANT
  { SC_NEC|SC_THE; xval: SKILL_BONUS; yval: SK_INTIMIDATE; pval: PLUS_2PER1; 
    Level: PLUS_2PER1; Flags: EF_NEEDS_PLUS; 
    Desc: "These lenses grant the bearer a terrifying window in the souls
    of others and the holes where the souls of the undead would be. This
    grants the wearer a skill bonus to Intimidate and Knowledge (Theology) skill checks
    equal to twice their plus. In addition, the wearer adds their magical
    plus as a bonus to saving throws versus fear."; }
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_KNOW_THEO; pval: PLUS_2PER1; }
  and EA_GRANT { xval: SAVE_BONUS; yval: SN_FEAR; pval: PLUS_1PER1; } 
  and EA_GRANT { xval: EXTRA_FEAT; yval: FT_NECROPHYSIOLOGY; } 

/*
AI_BOOTS Effect "the Mantis" : EA_GRANT { 
    Flags: EF_NEEDS_PLUS; SC_THA; 
    xval: SKILL_BONUS; yval: SK_ATHLETICS; pval: PLUS_2PER1;
    Desc: "When worn, these boots grant a +2 bonus to Athletics and
      Jump checks per magical plus they posses. They also grant you the
      Mantis Leap feat."; } 
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_JUMP; pval: PLUS_2PER1; } 
  and EA_GRANT { xval: EXTRA_FEAT; yval: FT_MANTIS_LEAP; }
*/
/*
AI_BOOTS Effect "the Spur" : EA_GRANT {
    SC_THA|SC_ENC; xval: SKILL_BONUS; yval: SK_ANIMAL_EMP; pval: PLUS_2PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "These boots grant you a magical bonus to Ride and Animal Empathy
    skill checks. In addition, you enjoy the benefit of the Overrun feat
    while mounted.";  } 
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_RIDE; pval: PLUS_2PER1; } 
  and EA_GRANT { xval: EXTRA_FEAT; yval: FT_OVERRUN; }
*/

AI_BOOTS Effect "Stability;boots" : EA_GRANT
  { SC_ABJ|SC_ENC; SC_THA; xval: IMMUNITY; yval: AD_POLY; Level: PLUS_2PER1; 
    Flags: EF_NEEDS_PLUS; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_BALANCE; pval: PLUS_2PER1;
    Desc: "When worn, these boots grant you a bonus to your Balance skill
    equal to twice their plus. In addition, they make you immune to
    Polymorph effects."; } 

AI_BRACERS Effect "Contortion" : EA_GRANT
  { SC_THA; xval: SKILL_BONUS; yval: SK_ESCAPE_ART;
    pval: PLUS_2PER1; Flags: EF_NEEDS_PLUS; 
    Level: PLUS_2PER1; 
    Desc: "These magical items allow you a great deal of extra flexibility
    when you attempt to bend your body. As a a result you gain a +2 bonus
    to Escape Artist and Tumble skill checks per magical plus they possess.
    In addition, you enjoy the benefits of the Featherfoot feat."; } 
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_TUMBLE; pval: PLUS_2PER1; } 
  and EA_GRANT { xval: EXTRA_FEAT; yval: FT_FEATHERFOOT; } 

AI_HEADBAND Effect "Magical Aptitude" : EA_GRANT
{ SC_ARC; xval: SKILL_BONUS; yval: SK_USE_MAGIC; pval: PLUS_2PER1;
  Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
  Desc: "This magic item enhances your ability to cast spells and use
  magical items. It grants you a +2 bonus to Concentration and Use Magic
  skill checks per magical plus it possesses. In addition, it grants
  you the power to detect summoned monsters within 100 feet (10 squares)
  plus 20 feet (2 squares) per magical plus."; }
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_CONCENTRATION; pval: PLUS_2PER1; } 
  and EA_GRANT { xval: DETECTING; yval: MA_SUMMONED; pval: PLUS_2PER1_ADD10; } 

AI_STONE Effect "Shadowstone" : EA_GENERIC
  { SC_ARC|SC_ILL; Flags: EF_AUTOID | EF_NEEDS_PLUS; 
    lval: 1; Level: PLUS_2PER1; 
    aval: AR_MFIELD; rval: FI_SHADOW; cval: shadow; 
    Purpose: EP_STEALTH; Flags: EF_GLYPH_FLOOR, EF_NAMEONLY; 
    Desc: "This item creates a field of supernatural shadow. Inside the
    field bright lights (e.g., from wall torches) do not prevent creatures
    from hiding. The field of shadow is not a field of darkness, and
    surroundings and features can still be seen, even via torchlight. In
    addition, the cloak grants a bonus to Hide skill checks equal to its
    magical plus."; 
  } and EA_GRANT { xval: SKILL_BONUS; yval: SK_HIDE; pval: PLUS_2PER1; }



/* Animal Empathy               - the Spur
 * Athletics                    - Striding & Springing
 * Balance                      - Stability
 * Climb                        - Arachnida
 * Concentration                - Magical Aptitude
 * Escape Artist                - Contortion
 * Food Tending
 * Handle Device                - Legerdemain
 * Hide in Shadows              - the Shadows
 * Intuition            
 * Jump                         - Striding & Springing
 * Listen                       - the Bat
 * Lockpicking                  - Legerdemain
 * Metamagic
 * Move Silently                - Elvenkind
 * Poison Use
 * Ride                         - the Spur
 * Searching                    - Detection
 * Spellcraft                   
 * Spot                         - the Eagle
 * Swimming                     - the Endless Wave
 * Theology                     - the Soul
 * Tumble                       - Contortion
 * Use Magic                    - Magical Aptitude
 *
 * Intimidate                   - the Soul
 * Wilderness                   - Detection
 */


/************************************************************************\
 *                                 EYES                                *
\************************************************************************/

AI_EYES Effect "the Druid;eyes" : EA_GRANT
  { SC_WEA; xval: EXTRA_ABILITY; yval: CA_NATURE_SENSE; 
    Level: 3;
    Desc: "These lenses allow the wearer to see through fog, trees, webbing
    and other visual impediments without trouble. In addition, they
    make you inoffensive to sylvan creatures."; } 
  and EA_GRANT { xval: NEUTRAL_TO; yval: MA_SYLVAN; }

AI_EYES Effect "the Night" : EA_GRANT
  { SC_THA; xval: EXTRA_ABILITY; yval: CA_INFRAVISION; pval: +6; 
    Level: 1;
    Desc: "This grants you Infravision to a range of 60 feet, or
      improves the range of your existing Infravision by 60 feet."; }

AI_EYES Effect "Terror;eyes" : EA_GRANT
  { SC_NEC; xval: SKILL_BONUS; yval: SK_INTIMIDATE; pval: +5; 
    Level: 1;
    Desc: "These lenses give the wearer the illusionary effect of a
    terrifying visage. The visage is so terrifying that many beings will
    see the wearer as a being to be feared. This grants the wearer a +5
    bonus to Intimidation checks and conversely grants the wearer a +5
    bonus to saves against Fear effects."; }
  and EA_GRANT 
  { SC_ABJ; xval: SAVE_BONUS; yval: SN_FEAR; pval: +5; }

AI_EYES Effect "Stone;eyes" : EA_GRANT
  { SC_ABJ; xval: GAZE_REFLECTION; yval: GR_IMMUNE; Level: 1; 
    Desc: "These lenses appear to be opaque, but when worn they
    can be seen through normally.  They grant the wearer immunity to
    all incoming gaze attacks (i.e. - from basilisks, jackal lords,
    medusae, floating eyes, etc.) as well as all light-based damage."; } 
  and EA_GRANT { xval: IMMUNITY; yval: AD_SUNL; } 

AI_EYES Effect "Precision;eyes" : EA_GRANT
  { SC_THA; xval: EXTRA_FEAT; yval: FT_PRECISE_SHOT; pval: PLUS_1PER1; 
    Level: PLUS_3PER1; Flags: EF_NEEDS_PLUS; 
    Desc: "These lenses give the wearer a preternatural sharpness of
    vision and a steady hand. While worn they grant the benefits of the
    Precise Shot and Aimed Shot feat as well as increasing the lowlight
    vision (and typically thus perception range) of the wearer by 20 feet
    (2 squares). They are a great benison to archers."; } 
  and EA_GRANT 
  { SC_THA; xval: EXTRA_FEAT; yval: FT_AIMED_SHOT; pval: PLUS_1PER1; }
  and EA_GRANT 
  { xval: EXTRA_ABILITY; yval: CA_LOWLIGHT; pval: PLUS_2PER1; }

/************************************************************************\
 *                                 WANDS                                *
\************************************************************************/

/* NOTE: All wands are not created equal! The level I've assigned
 *   them is based on the level it would be balanced for a PC to
 *   wield them at, rather than their effective power compared to
 *   each other. A level 3 wand is not as powerful as a level 6
 *   wand, but one level 3 wand might be as useful as four other
 *   level 3 wands put together, and thus a much "better" item.
 *   "Suboptimal" is fine for magical items, because A) you might
 *   never find the optimal choice, and B) you don't sacrifice
 *   anything inherent to your character by throwing away a sub-
 *   optimal wand (or any other item).
 * Eventually, once we have a better idea how they influence game-
 *   play, I'll ad EF_GOOD and EF_GREAT to these, so that lucky
 *   characters are more likely to find the good ones at a given
 *   level, and unlucky characters... not.
 * Westley, I'd encourage you to change the Level values for these
 *   if you think it would improve balance, but please don't
 *   simplify or streamline them -- that's counter to the design
 *   principle I want for magical items.
 * I'm evaluating these based on seven factors: Area, Damage, Mana
 *   Cost, Damage Type, Extra Effects, Saving Throw and Other
 * Area:
 *   Poor (-1)    - Bolt
 *   Good (+1)    - Beam
 *   Great (+3)   - Ball/Globe/Chain
 *   Perfect (+4) - Hits everything in area, caster immune
 * Damage:
 *   Poor (-1)  - 1d6/plus or 1d4+1/plus
 *   Average    - 1d8/plus
 *   Good (+1)  - 2d6/plus
 *   Great (+2) - 2d8/plus
 *   Super (+3) - 2d10/plus
 *   Incred. (+4) - 2d12/plus
 * Mana Cost:
 *   Poor (-2)  - 10 mana
 *   Average    - 5 mana
 *   Good (+1)  - 3 mana
 *   Great (+2) - 2 mana
 *   Super (+3) - 1 mana
 * Damage Type:
 *   Base (-2)    - Slashing, Piercing, Blunt
 *   Common (-1)  - Fire
 *   Uncommon     - Cold, Lightning
 *   Rare (+1)    - Acid, Sonic, Poison, Necro
 *   V. Rare (+3) - Pure Magic/unavoidable
 *   (for 2 types, add both mods (min -1))
 * Extra Effects:
 *   Rated by hand at +0 to +4.
 * Limited Targets:
 *   Rated by hand at -1 to -4.
 * Saving Throw:
 *   Negates Utterly (-2)
 *   Reflex for half (no mod)
 *   None (+2)
 * Total
 *   -2 PLUS_1PER1
 *   -1 PLUS_2PER1
 *    0 PLUS_2PER1_ADD1
 *   +1 PLUS_2PER1_ADD2
 *   +2 PLUS_3PER1_ADD1
 *   +3 PLUS_3PER1_ADD2
 *   +4 PLUS_3PER1_ADD3
 *
 * Wand Effect Field Checklist:
 * -- Schools
 * -- Mana Cost
 * -- Purpose
 * -- qval: Q_DIR | Q_TAR | Q_LOC;
 * -- aval:
 * -- cval (beam colour)
 * -- lval
 * -- Flags (EF_NEEDS_PLUS, EF_AUTOID, others?)
 * -- sval
 * -- Level-by-Plus constant, calculated as above
 * -- pval (damage, if applicable)
 * -- MSG_BLASTNAME
 
 
 * IMPORTANT WAND NOTE:
 *   Until wand balance is more fully tested, I've lowered the item level
 * of all wands by 2 using a kludge in the source code. This is because I
 * want to us constants like PLUS_3PER1 instead of PLUS_1EVERY3, but I also
 * want there to be wands available as level 1 treasure, rather than starting
 * at level 3+.
 
 */

/* Area -1, Damage +1, Mana +1, DType -1, 
   Extra 0, Save -2 == -2. */  
AI_WAND Effect "Fire Bolts" : EA_BLAST
  { SC_EVO; Cost: 3; xval: AD_FIRE; pval: (PLUS_2PER1)d6;
    sval: REF; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BOLT; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID; Purpose: EP_ATTACK; 
    cval: RED; On Event MSG_BLASTNAME "fire bolt"; 
    Level: PLUS_1PER1; 
    Desc: "This wand produces a flaming bolt that strikes a
      single target for 2d6 fire damage per plus. A successful
      Reflex saving throw represents dodging the bolt, and
      completely negates the damage."; }

/* Area +1, Damage 0, Mana 0, DType 0,
   Extra +2, Save 0 == +1. */ 
AI_WAND Effect "Ice;wand" : EA_BLAST
  { SC_EVO; Cost: 5; xval: AD_COLD; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BEAM; 
    Purpose: EP_ATTACK; Level: PLUS_2PER1_ADD2; sval: REF partial;
    cval: SKYBLUE; On Event MSG_BLASTNAME "frigid blast";
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_AFFECTS_ITEMS;
    Desc: "This wand projects a cone of blue light inside of which
      ice magically forms on every exposed surface and flesh cracks
      from the unearthly cold. This inflicts 1d8 points of damage 
      per plus due to frigid cold, and turns both water and plain
      floor into ice squares. If a target fails to save, they also
      become stuck as their body is encased in ice.";
    On Event POST(EV_MAGIC_HIT) {
      if (EVictim->isCreature() && !e.Resist)
        { EVictim->GainPermStati(STUCK,NULL,SS_ATTK,e.saveDC,0,$"Ice;wand"); 
          VPrint(e,"You are partially encased in ice!",
                   "The <EVictim> is partially encased in ice!"); }
      return NOTHING;
      };
  }
and EA_TERRAFORM
  { xval: TERRA_FLOOR; rval: $"ice floor"; }
and EA_TERRAFORM
  { xval: TERRA_WATER; rval: $"ice floor"; }

/* Area +1, Damage 0, Mana -2, DType +2, Extra -1 (1/2 the damage
     only affect breathers), Save 0 == 0 */
AI_WAND Effect "Scouring" : EA_BLAST
  { SC_ARC; SC_EVO; Cost: 10; xval: AD_ACID; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BEAM; 
    Purpose: EP_ATTACK; Level: PLUS_2PER1_ADD1;  
    cval: GREEN; On Event MSG_BLASTNAME "sulpherous fumes";
    Flags: EF_NEEDS_PLUS, EF_AUTOID;
    Desc: "This wand projects a blast of sulpherous fumes that inflict
      1d8 acid damage and 1d8 toxic damage for every magical plus the
      wand has. Creatures that do not breathe suffer only the acid
      damage. A Reflex save halves the damage.";
    On Event EV_MAGIC_HIT {
      if (e.efNum == 1 && !EVictim->isMType(MA_BREATHER))
        { VPrint(e,"The poison doesn't affect you.",
                   "The poison doesn't affect the <EVictim>.");
          return DONE; }
      return NOTHING;
      };
  }
and EA_BLAST
  { aval: AR_BEAM; sval: REF partial; 
    xval: AD_TOXI; pval: (PLUS_1PER1)d8; }

/* Area +1, Damage -1, Mana 10, DType +1 (breathers and creatures
     without eyes resist), Extra +2 (blinding, choking penalty),
     Save 0 == +1 */
AI_WAND Effect "Ash" : EA_GENERIC
  { SC_ARC; Cost: 10; pval: (PLUS_1PER1)d6; Purpose: EP_ATTACK;
    qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BEAM; cval: BLACK;
    Level: PLUS_2PER1_ADD2; Flags: EF_NEEDS_PLUS, EF_AUTOID;
    Desc: "When activation, a cloud of thick, greasy ash pours
      out from the tip of this wand, moving in a line to consume
      everything in its path. Victims must make two Fortitude
      saves -- one, if they have eyes, to avoid being blinded
      for 3d6 turns. The second save applies only to creatures
      who breathe, and halves both of the wand's primary effects:
      1d6 damage per plus and a -4 general penalty for 3d6 rounds, 
      both due to violent, bloody choking after breathing in the 
      ash.";
    /* This'll be simpler as a script. */
    On Event EV_MAGIC_HIT {
      e.Immune = true;
      if (EVictim->onPlane() != EActor->onPlane())
        return DONE;
      if (!EVictim->HasMFlag(M_BLIND)) {
        e.Immune = false;
        if (!EVictim->SavingThrow(FORT,e.saveDC,SA_MAGIC))
          {
            VPrint(e,"You are blinded!",
                     "The <EVictim> is blinded!");
            /* These stati are SS_ATTK because they're effects of
               a mundane-once-conjured cloud of ash, so they can
               not be dispelled and you'll still be blind if you
               go into an anti-magic shell, etc. */
            EVictim->GainTempStati(BLIND,NULL,3d6,SS_ATTK);
          }
        else
          e.Resist = true;
        }
      if (EVictim->isMType(MA_BREATHER))
        {
          e.Immune = false;
          if (!EVictim->SavingThrow(FORT,e.saveDC,SA_MAGIC))
            {
              VPrint(e,"You choke horrifically!",
                       "The <EVictim> chokes horrifically!");
              EVictim->GainTempStati(ADJUST_CIRC,NULL,3d6,SS_ATTK,
                                       A_AID,-4);
              ThrowDmg(EV_DAMAGE, AD_NORM, e.vDmg, "a cloud of choking ash",
                EActor, EVictim, EItem);
            }
          else
            {
              VPrint(e,"You choke!",
                       "The <EVictim> chokes!");
              EVictim->GainTempStati(ADJUST_CIRC,NULL,3d6 / 2,SS_ATTK,
                                       A_AID,-2);
              ThrowDmg(EV_DAMAGE, AD_NORM, e.vDmg / 2, "a cloud of choking ash",
                EActor, EVictim, EItem);
            }       
        }
      return DONE;
      },
    EV_ISTARGET {
      return EVictim->isMType(MA_BREATHER) ||
             !EVictim->HasMFlag(M_BLIND) ?
        SHOULD_CAST_IT : CANNOT_CAST_IT;
      };
  }

/* Area -1, Damage 0, DType +3, Targets -2
   (living only), Save 0, Mana 0, Extra +1 == +1 */
AI_WAND Effect "Dehydration" : EA_BLAST
  { SC_THA; Cost: 5; pval: (PLUS_1PER1)d8; Purpose: EP_ATTACK;
    qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BEAM; cval: BROWN;
    tval: MA_LIVING; Purpose: EP_ATTACK; xval: AD_NORM;
    Flags: EF_LIM_MTYPE, EF_NEEDS_PLUS, EF_AUTOID; 
    sval: FORT partial; Level: PLUS_2PER1_ADD2;
    On Event MSG_BLASTNAME "thin amber bolt",
      EV_MAGIC_HIT {
        VPrint(e,"You feel ravenously thirsty suddenly!",
                 "The <EVictim>'s skin splits and peels!");
        EVictim->LoseFatigue(e.vDmg/4,false);
        return NOTHING;
        };
    Desc: "This wand produces a thin amber bolt that flares out
      to strike a target, destroying a portion of the water in
      their body to inflict 1d8 points of damage per plus, and
      additionally sap the target of 1 fatigue for every 4 points
      of damage inflicted. A successful Fortitude saving throw
      halves the effect. Only living creatures are subject to
      dehydration -- undead, constructs and similar beings are
      immune."; 
  }
    
/* Area +1, Damage +3, Mana -2, DType -2, 
     Extra +2 == +2 */
AI_WAND Effect "Shards" : EA_BLAST
  {
    SC_EVO; Cost: 10; Purpose: EP_ATTACK;
    qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BEAM; cval: WHITE;
    Flags: EF_NEEDS_PLUS, EF_AUTOID; sval: REF partial;
    On Event MSG_BLASTNAME "spray of glass shards";
    xval: AD_SLASH; pval: (PLUS_2PER1)d10;
    Level: PLUS_3PER1_ADD1;
    Desc: "When fired, this wand projects a stream of tiny glass
      shards in a line about 5 feet wide. The glass shreds anything
      organic it comes in contact with, inflicting 2d10 points of
      damage per magical plus of the wand. Additionally, targets
      with blood bleed for [plus] points of damage per turn after
      being struck by this wand, lasting for one turn per 4 points
      of damage the target actually took the initial spray. A Reflex 
      saving throw halves the initial damage (and thus the bleeding
      duration as well).";
    On Event POST(EV_MAGIC_HIT) 
      {
        if (e.aDmg && EVictim->isMType(MA_HAS_BLOOD))
          EVictim->GainTempStati(BLEEDING,NULL,e.aDmg / 4,
                                   SS_ATTK,0,EItem->GetPlus());
        return NOTHING;
      };
  }

/* Area +3, Damage +1, Mana 0, DType +1, Targets -2,
     Extra 0, Save 0 == +3 
   Note: Life Stealing and the Void have very similar
     parameters so you can't tell them apart without
     testing them live-fire, short of an Intuition
     check that spots the Weavecraft on the latter. */
AI_WAND Effect "the Void" : EA_BLAST
  {   
    SC_NEC; SC_WEA; Cost: 5; Purpose: EP_ATTACK; tval: MA_LIVING;
    qval: Q_TAR | Q_LOC | Q_DIR; aval: AR_BURST; lval: 7; cval: COL_NECRO;
    Flags: EF_STRIKEID, EF_NEEDS_PLUS, EF_LIM_MTYPE; sval: REF partial;
    xval: AD_COLD; pval: (PLUS_1PER1)d6; Level: PLUS_3PER1_ADD2;
    On Event MSG_BLASTNAME "ball of dark energy";    
    Desc: "This wand produces a ball of unnatural, life-sapping vacuum
      drawn from the places where the Negative Energy Plane edges
      the Paraelemental Plane of Vacuum. This ball inflicts 1d6
      points of cold damage and 1d6 points of necromatic damage for
      every plus the wand has. Undead and constructs are immune;
      other targets caught in the area can make a Reflex saving 
      throw for half damage.";
    On Event EV_MAGIC_HIT
      "You feel a deathly chill!" /
      "The <EVictim> withers!";
  }
and EA_BLAST
  { xval: AD_NECR; pval: (PLUS_1PER1)d6; }
  
/* Area +3, Damage -1, Mana -2, DType +1, Targets -2, 
   Extra +3 (free healing in incursion is GOOD, see
   balance issues RE Feed Upon Pain) == +2 */
AI_WAND Effect "Life Stealing" : EA_BLAST
  { 
    SC_NEC; Cost: 10; Purpose: EP_ATTACK; tval: MA_LIVING;
    qval: Q_TAR | Q_LOC | Q_DIR; aval: AR_BURST; lval: 7; cval: COL_NECRO;
    Flags: EF_STRIKEID, EF_NEEDS_PLUS, EF_LIM_MTYPE; sval: REF partial;
    xval: AD_VAMP; pval: (PLUS_1PER1)d6; Level: PLUS_3PER1_ADD1;
    On Event MSG_BLASTNAME "ball of dark energy";
    Desc: "When fired, this wand emits a blast of life-sapping
      shadow that drains the vitality of any living targets it
      hits even as it heals and strengthens the wielder. The
      blast inflicts 1d6 points of necromantic damage to
      everyone caught in its area, healing the caster for half
      of the total hit points it actually inflicts. Victims
      may make a Reflex saving throw for half damage.";
  }   

/* Area +4, Damage -1, Mana -2, DType +1,
   Extra +2 == +4 */
AI_WAND Effect "Sound Bursts" : EA_BLAST
  {
    SC_EVO; Cost: 10; Purpose: EP_ATTACK; /* qval absent by intent */
    aval: AR_GLOBE; lval: 8; Level: PLUS_3PER1_ADD3; 
    Flags: EF_AUTOID, EF_NEEDS_PLUS, EF_AFFECTS_ITEMS,
             EF_CASTER_IMMUNE;
    sval: FORT partial; xval: AD_SONI; pval: (PLUS_1PER1)d6; 
    On Event MSG_BLASTNAME 
      "cacophany",
    EV_MAGIC_HIT {
      if (EVictim->isCreature() && !e.Resist)
        {
          EVictim->GainTempStati(STUNNED,NULL,3d6,SS_ATTK);
          EVictim->StatiMessage(STUNNED,0,false);
        }
      return NOTHING;
      };
    Desc: "When fired, this wand releases a tremendous cacophany of
      sound and vibration all around the wielder (who is immune).
      The blast inflicts 1d6 points of damage per magical plus the
      wand has, allowing a Fortitude save for half damage. Those
      who fail the save are also stunned for 3d6 rounds. The
      destructive sonics also damage any unattended equipment, or
      items held by those who fail a saving throw.";
  }
  
/* Area -1, Damage 0, Mana 0, Extra +2,
   Save +2, DType +1 == +3 */
AI_WAND Effect "Acid;wand" : EA_BLAST
  {
    SC_ARC; Cost: 5; Purpose: EP_ATTACK; Level: PLUS_3PER1_ADD3; 
    qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BOLT; cval: EMERALD;
    Flags: EF_AUTOID, EF_NEEDS_PLUS, EF_AFFECTS_ITEMS; sval: NOSAVE;
    xval: AD_ACID; pval: (PLUS_1PER1)d8; 
    On Event MSG_BLASTNAME 
      "glob of acid",
    EV_ELAPSED
      "The acid has run its course." /
      "The <EActor>'s flesh stops bubbling.",
    META(EV_TURN) {
      hObj killer;
      killer = EActor->GetEffStatiObj(TRAP_EVENT,$"Acid;wand");
      if (killer) 
        ThrowDmg(EV_DAMAGE,AD_FIRE,1d6,"residual acid damage",killer,EActor);
      else 
        ThrowDmg(EV_DAMAGE,AD_FIRE,1d6,"residual acid damage",EActor,EActor);
      if (EActor->isDead())
        DPrint(e,"The acid burns, killing you.",
                 "The acid burns the <EActor> to death.");
      else
        DPrint(e,"The acid burns you!",
                 "The acid burns the <EActor>!");
      if (EActor->isDead() && killer != NULL)
        killer->KillXP(EActor);
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      if (!EVictim->isDead())
        EVictim->GainTempStati(TRAP_EVENT,EActor,EItem->GetPlus(),
          SS_ATTK,EV_TURN,0,$"Acid;wand");
      return NOTHING;
      };
    Desc: "This wand fires a glob of concentrated acid with unerring accuracy,
      striking a single target for 1d8 points of acid damage for every magical
      plus it possesses. The acid can also damage the victim's equipment. If
      the victim survives the initial damage, she also suffers 1d6 points of
      damage every turn thereafter for a number of turns equal to the wand's
      magical plus as the acid continues to burn her.";
  }
 
/* Area -1, Damage +2.5, Mana 0, DType +0.5, 
     Extra +2, Save -2 == +2 */
AI_WAND Effect "Thunderbolts" : EA_BLAST
  {
    SC_EVO; Cost: 5; Purpose: EP_ATTACK; qval: Q_DIR|Q_TAR|Q_LOC;
    aval: AR_BOLT; cval: YELLOW; Flags: EF_NEEDS_PLUS, EF_AUTOID;
    sval: REF; xval: AD_ELEC; pval: (PLUS_2PER1)d6;
    Level: PLUS_3PER1_ADD1;
    Desc: "This wand fires a brilliant stroke of lightning about a
      meter long that arcs across space to strike a single target
      with a terrible thunderclap, inflicting 2d6 points of electrical
      damage and 1d6 points of sonic damage for every plus the wand
      possesses. A Reflex save indicates dodging the bolt utterly,
      but if a target is struck, the must attempt a second Fortitude
      save or be left stunned for 1d4+1 rounds."; }
and EA_BLAST 
  { xval: AD_SONI; pval: (PLUS_1PER1)d6;
    On Event 
      MSG_BLASTNAME 
        "thunderbolt",
      POST(EV_MAGIC_HIT) {
        if (!EVictim->SavingThrow(FORT,e.saveDC,SA_MAGIC|SA_STUN))
          {
            EVictim->GainTempStati(STUNNED,NULL,1d4+1,SS_ATTK);
            EVictim->StatiMessage(STUNNED,0,false);
          }
        return NOTHING;
        };
  }

/* Area -1, Damage 0, Mana 0, Damage 0, Extra +3,
     Limited Range -1, Save 0 == +1 */
AI_WAND Effect "Surtension" : EA_BLAST
  {
    SC_EVO; Cost: 5; Purpose: EP_ATTACK; qval: Q_TAR | Q_LOC | Q_DIR;
    aval: AR_RAY; cval: AZURE; Level: PLUS_2PER1_ADD2;
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_LIM_MTYPE;
    sval: FORT partial; xval: AD_ELEC; pval: (PLUS_1PER1)d8;
    On Event 
      MSG_BLASTNAME
        "arc of electricity",
      POST(EV_MAGIC_HIT) {
        if (EVictim->isMType(MA_LIVING))
          {
            if (!e.Resist)
              {
                EVictim->GainTempStati(PARALYSIS,NULL,1,SS_ATTK);
                VPrint(e,"Your muscles lock up!",
                         "The <EVictim> goes rigid!");
              }
            else
              VPrint(e,"Your muscles stiffen!",
                       "The <EVictim> goes briefly rigid!");
          }
        APrint(e,"The smell of ozone fills the air!");
        return NOTHING;
      },
    PRE(EV_EFFECT) {
      /* The arc only appears if it has something to strike,
         so we need to check for a target. If there's no valid
         target, the arc doesn't appear at all. */
      if (e.isDir)
        if (!(EMap->FCreatureAt(EActor->x + DirX(e.EDir), 
                EActor->y + DirY(e.EDir)) || EMap->FCreatureAt(EActor->x + 
                  DirX(e.EDir)*2, EActor->y + DirY(e.EDir)*2)))
          return DONE;
      if (e.isLoc)
        if (!EMap->FCreatureAt(e.EXVal,e.EYVal))
          return DONE;
      return NOTHING;          
      },
    EV_CALC_EFFECT {
      e.vRange = 2;
      return NOTHING;
      };
    Desc: "This wand produces a brilliant, crackling arc of electrical
      energy striking a target of the user's choice. The arc can only
      reach 20 feet (2 squares), but hits a target for 1d8 points of
      lightning damage per plus; a Fortitude save halves the damage.
      The current also locks up its victim's muscles, inflicting 1d2 +
      the wand's magical plus points of Dexterity damage (again, halved
      on a successful save) and paralyzing targets who fail the save
      for a single round. The paralysis and Dexterity damage affect
      only living targets.";
  }
and EA_BLAST
  { xval: AD_DADX; pval: 1d2 + PLUS_1PER1; sval: FORT partial;
    tval: MA_LIVING; }

/* Area +3, Damage +1, Mana -2, DType +3,
    Limited Targets -3 == +2 */
AI_WAND Effect "Cleansing Light" : EA_BLAST
  {      
    SC_EVO; SC_NAT; Cost: 10; Purpose: EP_ATTACK; qval: Q_TAR|Q_DIR|Q_LOC;
    aval: AR_CHAIN; cval: COL_COLD; Level: PLUS_3PER1_ADD1;
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_BLIND_PROMPT;
    sval: FORT partial; xval: AD_NORM; pval: (LEVEL_2PER1)d6;
    On Event
      MSG_BLASTNAME
        "ray of moonlight",
      EV_ISTARGET {
        if ( EVictim->isMType(MA_OUTSIDER) ||
             EVictim->isMType(MA_ABERRATION) ||
             EVictim->isMType(MA_UNDEAD) )
          return SHOULD_CAST_IT;
        else
          return CANNOT_CAST_IT;
        },
      /* Unfortunately, IncursionScript doesn't currently support
         changing EVictim. D'oh!
      PRE(EV_EFFECT) {
        if ( EActor->isMType(MA_OUTSIDER) ||
             EActor->isMType(MA_ABERRATION) ||
             EActor->isMType(MA_UNDEAD) )
          {
            EVictim = EActor;
            isTar = true;
          }
        return NOTHING;
        }, */
      EV_CALC_EFFECT {
        if (GetHandle(EItem) != NULL_OBJ)
          e.vChainMax = EItem->GetPlus();
        return NOTHING;
        };
    Desc: "This translucent wand fires a swirling, incandescant beam of
      glittering moonlight that is harmless to most creatures. However,
      when is strikes an aberration, undead or outsider, that creature
      withers away for 2d6 points of damage per magical plus the wand
      possesses. This is not elemental damage and cannot be avoided by
      most standard resistances. After striking one viable target, the
      beam will curl around to encompass a number of other targets equal
      to the wand's magical plus.";
  }

/* Area +3, Damage +1, Mana -2, DType +3, 
     Limited -1, Save 0 == +4 */
AI_WAND Effect "Soul Flaying" : EA_BLAST
  {
    SC_WEA; Cost: 10; Purpose: EP_ATTACK; qval: Q_TAR|Q_DIR|Q_LOC;
    aval: AR_BALL; cval: COL_SILVERY; lval: 20;
    xval: AD_DAWI; pval: (PLUS_1PER1)d4; sval: WILL partial;
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_BLIND_PROMPT;   
    Level: PLUS_3PER1_ADD3;
    On Event
      MSG_BLASTNAME
        "silver fire",
      EV_ISTARGET {
        return EVictim->HasMFlag(M_MINDLESS) ?
          CANNOT_CAST_IT : SHOULD_CAST_IT;
        };
    Desc: "This wand, crafted by the derro, fires a tiny globe
      that explodes into a huge blast of silvery flames. This
      unnatural flame does no harm to matter or flesh, but scours
      the psyches of self-aware beings on the astral plane,
      inflicting 1d4 points of Wisdom damage for every magical
      plus it possesses. A Will save halves the damage.";
  }

/* Area -1, Damage +3, Mana +1, Damage -2,
     Extra +1, Save 0 == +2 */
AI_WAND Effect "Striking;wand" : EA_BLAST
  {
    SC_EVO; Cost: 3; Purpose: EP_ATTACK; qval: Q_TAR|Q_DIR|Q_LOC;
    aval: AR_BOLT; cval: WHITE; Flags: EF_NEEDS_PLUS, EF_AUTOID;
    sval: REF partial; xval: AD_BLUNT; pval: (PLUS_2PER1)d10;
    Level: PLUS_3PER1_ADD1; 
    On Event
      MSG_BLASTNAME
        "bolt of telekinetic force";
    Desc: "This wand fires a telekinetic bolt which strikes a
      single target for 2d10 points of blunt damage per magical
      plus of the wand. A Reflex save halves the damage, but on
      failure the target will also be knocked back 1d4 + [magical
      plus] squares.";
  }
and EA_BLAST 
  { xval: AD_KNOC; pval: 1d4 + PLUS_1PER1; sval: REF; }

/* Note that the area here is actually meant to be a weakness, or
   at least a double-edged sword -- it's hard to fire this without
   hitting yourself!
   Area +2, Damage +3, Mana -4, DType +2,
     Targets -1, Extra 0, Save 0 == +2 */
AI_WAND Effect "the Hellstorm" : EA_BLAST
  {
    SC_EVO; Cost: 20; Purpose: EP_ATTACK; qval: Q_TAR|Q_DIR|Q_LOC;
    aval: AR_BALL; cval: COL_FIRE; Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_EVIL;
    sval: REF partial; xval: AD_FIRE; pval: (PLUS_1PER1)d10; lval: 40;
    Level: PLUS_3PER1_ADD1;
    On Event
      MSG_BLASTNAME
        "hellstorm",
      EV_ISTARGET {
        return EActor->isMType(MA_DEVIL) ?
          SHOULD_CAST_IT : CAN_CAST_IT;
        };
    Desc: "This wand projects a globe that blossoms into a vast
      infernal conflaguration, inflicting 1d10 points of fire damage
      and 1d10 points of unavoidable damage resulting directly from
      infernal power for every plus it has. Devils are immune to the
      effects of a hellstorm.";
  }
and EA_BLAST
  { xval: AD_NORM; pval: (PLUS_1PER1)d10; }

/* Area +3, Damage 0, Mana -2, DType +1, 
     Extra +3, Save 0, Hits Caster -3 == +2 */
AI_WAND Effect "Unearthly Harmonies" : EA_BLAST
  { 
    SC_EVO; Cost: 10; Purpose: EP_ATTACK; qval: 0;
    aval: AR_GLOBE; lval: 3; cval: YELLOW; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_LAWFUL, EF_LIM_MTYPE;
    sval: WILL partial; xval: AD_SONI; pval: (PLUS_1PER1)d8;
    Level: PLUS_3PER1_ADD1;
    Desc: "This wand produces a sanity-rending blast of otherworldly
      music drawn from the Clockwork Nirvana of Mechanus -- the
      outer-planar home of absolute Law. This music inflicts 1d8
      points of sonic damage per plus the wand possesses, and
      hearing it also damages the sanity of thinking beings,
      inflicting 1d2 points of Intelligence damage. Chaotic
      creatures suffer double damage from both effects, but a
      successful Will saving throw halves the effects. The
      caster is immune to the sonic damage, but not to the
      Intelligence damage.";
    On Event 
      MSG_BLASTNAME 
        "otherworldly music",
      EV_CALC_EFFECT {
        if (GetHandle(EVictim))
          if (EVictim->isCreature())
            if (EVictim->isMType(MA_CHAOTIC))
              e.vDmg *= 2;
        return NOTHING;
        },
      EV_MAGIC_HIT {
        if (GetHandle(EActor) == GetHandle(EVictim))
          if (e.efNum == 0)
            return DONE;
        return NOTHING;
        };
  }
and EA_BLAST
  { xval: AD_DAIN; pval: (PLUS_1PER1)d2; }

/* We need a flag for bad items that isn't cursed, because
   not all bad items are cursed. This isn't cursed, and
   shouldn't show up as such to intuition, but it shouldn't
   be generated as a "guaranteed good" item either. */
AI_WAND Effect "cracked" : EA_BLAST
  {
    SC_EVO; Cost: 10; Purpose: EP_ATTACK; qval: 0;
    Level: PLUS_2PER1_ADD1;
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_NAMEFIRST;
    xval: AD_DACO; pval: (PLUS_1PER1)d4;
    Desc: "The attempt to manufacture magical wands involves
      channelling vast amounts of mystical energy into a very
      finite space -- and it isn't always successful. When
      wand creation fails, the result may be an instrument
      that contains a metaphysical fracture in its tapestry,
      causing a destructive flow of mana that can warp its
      wielder's body or mind if mistakenly fired. Sometimes
      careless gnomes leave such items abandoned in dungeons,
      not wanting to dispose of them safely; other times,
      kobold mages use them as traps, hoping to trick others
      into trying to fire them.\n
      __This cracked wand inflicts 1d4 points of Constitution
      damage to its user per magical plus it has.";
  }
    
    

/* Attack Wands (15):

   Wand of Disruption (AD_SONI + AD_MAGC)
   Wand of Colours (Prismatic Spray effect)
   Wand of Mana Theft



   Wand of Ball Lightning (electricity bolt) "crackling globe of lightning"
   
   Tentacle Wand (1 tentacle per plus, so +1 == 1 effect, +2 == 2 effects, etc.
   
     +1 -- damage
     +2 -- auto-grapple
     +3 -- disease
     +4 -- blood-sucking
     +5 -- death crush
   
   
   Wands by DType
     Fire       Fire Bolts, Frostfire, Hellstorm
     Cold       Ice, Frostfire, the Void
     Lightning  Thunderbolts, Ball Lightning, Surtension
     Acid       Acid, Scouring, 
     Sonic      Sound Bursts, Disruption, 
     Necro      Life Stealing, the Void
   
   
   Other New Wands
   Wand of Transposition
   Wand of Apportation
   Wand of Matter Phasing
   Wand of Animation
   Wand of Dispelling
   Wand of Poison
   Wand of Mana Theft
   Wand of Viscid Globs
   Wand of Death
   Wand of Disintigration
   Wand of Abjuration (sends outsiders home, teleports others)
   Wand of Rust
   
   
   Tabled Wands (too hard for now!):
   Wand of Magnetism
   Wand of Animation
   Wand of 
*/

#if 0
        

AI_WAND Effect "Lightning;wand" : EA_BLAST
  { SC_EVO; Cost: 3; xval: AD_ELEC; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BOLT; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID; Purpose: EP_ATTACK; 
    cval: SKYBLUE; On Event MSG_BLASTNAME "lightning bolt"; 
    Level: PLUS_2PER1_ADD1;
    Desc: "This wand produces a stroke of lightning that inflicts
      1d8 electrical damage per plus upon the target it strikes. A
      Reflex save for half damage is allowed, and an attack roll is
      required to hit."; }


AI_WAND Effect "Acid Bolts" : EA_BLAST
  { SC_EVO; Cost: 3; xval: AD_ACID; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BOLT; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID; Purpose: EP_ATTACK; 
    cval: GREEN; On Event MSG_BLASTNAME "gout of acid"; 
    Level: PLUS_2PER1_ADD1;
    Desc: "This wand produces a gout of acid that 
      strikes a target for 1d8 damage per plus. A
      Reflex save for half damage is allowed, and an attack
      roll is required to hit."; }

AI_WAND Effect "Sound" : EA_BLAST
  { SC_EVO; Cost: 3; xval: AD_SONI; pval: (PLUS_1PER1)d6;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BOLT; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID; Purpose: EP_ATTACK; 
    cval: YELLOW; On Event MSG_BLASTNAME "burst of sound"; 
    Level: PLUS_2PER1_ADD1; 
    Desc: "This wand produces a burt of sonic force that strikes a target
    for 1d6 damage per plus. A Reflex save for half damage is allowed, and
    an attack roll is required to hit."; } 

AI_WAND Effect "Life Stealing" : EA_BLAST
  { SC_NEC; Cost: 3; xval: AD_NECR; pval: (PLUS_1PER1)d6;
    qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BOLT; cval: SHADOW;
    Flags: EF_ATTACK, EF_NEEDS_PLUS, EF_STRIKEID; 
    On Event EV_MAGIC_HIT
      "You feel a deathly chill!" /
      "The <EVictim> withers!";
    Level: PLUS_2PER1_ADD1;
    Desc: "This wand produces a dark burst of negative energy that
      strikes one target and drains its life energy for 1d6 points of
      vampiric damage per plus. If successful, you are healed by an
      amount equal to the damage done. There is no saving throw against
      this damage."; 
    On Event EV_MAGIC_HIT {
      EActor->cHP = min(EActor->mHP,EActor->cHP + e.vDmg); 
      return NOTHING; 
    }; 
  }

/**************\
 * BALL WANDS *
\**************/
        
// ww: these wands have EF_CASTER_IMMUNE largely so that the enemy AI
// doesn't blow itself up using them ...
AI_WAND Effect "Ice Bursts" : EA_BLAST
  { SC_EVO; Cost: 5; xval: AD_COLD; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BALL; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_CASTER_IMMUNE; Purpose: EP_ATTACK; 
    cval: SKYBLUE; On Event MSG_BLASTNAME "ice burst";
    Level: PLUS_2PER1_ADD1; lval: 2;
    Desc: "This wand produces a chilling explosion that inflicts
      1d8 cold damage per plus upon all target it strikes. A
      Reflex save for half damage is allowed, and the blast has a
      diameter of five squres. The wand user is immune to the damage."; }

AI_WAND Effect "Lightning Balls;wand" : EA_BLAST
  { SC_EVO; Cost: 5; xval: AD_ELEC; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BALL; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_CASTER_IMMUNE; Purpose: EP_ATTACK; 
    cval: SKYBLUE; On Event MSG_BLASTNAME "lightning ball"; 
    Level: PLUS_2PER1_ADD1; lval: 2;
    Desc: "This wand produces a ball of lightning that inflicts
      1d8 electrical damage per plus upon the targets it strikes. A
      Reflex save for half damage is allowed, and the blast has a
      diameter of five squres. The wand user is immune to the damage."; } 

AI_WAND Effect "Fire Balls" : EA_BLAST
  { SC_EVO; Cost: 5; xval: AD_FIRE; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BALL; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_CASTER_IMMUNE; Purpose: EP_ATTACK; 
    cval: RED; On Event MSG_BLASTNAME "fire ball"; 
    Level: PLUS_2PER1_ADD1; lval: 2;
    Desc: "This wand produces a flaming sphere that strikes a
      multiple target for 1d8 electrical damage per plus. A
      Reflex save for half damage is allowed, and the blast has
      a diameter of five squares. The wand user is immune to the damage."; }

AI_WAND Effect "Acid Balls" : EA_BLAST
  { SC_EVO; Cost: 5; xval: AD_ACID; pval: (PLUS_1PER1)d8;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BALL; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_CASTER_IMMUNE; Purpose: EP_ATTACK; 
    cval: GREEN; On Event MSG_BLASTNAME "blob of acid"; 
    Level: PLUS_2PER1_ADD1; lval: 2;
    Desc: "This wand produces a blob of acid that 
      strikes multiple targets for 1d8 damage per plus. A
      Reflex save for half damage is allowed, and the blast has
      a diameter of five squares. The wand user is immune to the damage."; } 

AI_WAND Effect "Sound Bursts" : EA_BLAST
  { SC_EVO; Cost: 5; xval: AD_SONI; pval: (PLUS_1PER1)d6;
    sval: REF Partial; qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BALL; 
    Flags: EF_NEEDS_PLUS, EF_AUTOID, EF_CASTER_IMMUNE; Purpose: EP_ATTACK; 
    cval: YELLOW; On Event MSG_BLASTNAME "sound burst"; 
    Level: PLUS_2PER1_ADD1; lval: 2;
    Desc: "This wand produces a ball of sonic force that strikes 
    multiple targets for 1d6 damage per plus. A Reflex save for half damage
    is allowed, and the blast has a diameter of five squares. The wand user
    is immune to the damage."; } 

AI_WAND Effect "the Void" : EA_BLAST
  { SC_NEC; Cost: 5; xval: AD_NECR; pval: (PLUS_1PER1)d8;
    qval: Q_DIR | Q_TAR | Q_LOC; aval: AR_BALL; cval: SHADOW;
    Flags: EF_ATTACK, EF_NEEDS_PLUS, EF_STRIKEID, EF_CASTER_IMMUNE; 
    Level: PLUS_2PER1_ADD1; lval: 2;
    On Event EV_MAGIC_HIT
      "You feel a deathly chill!" /
      "The <EVictim> withers!";
    Desc: "This wand produces a dark ball of negative energy
      that strikes multiple target and drains their life energy for 
      1d8 points of necromantic damage per plus. There is no
      saving throw against this damage, and the blast has a diameter
      of five squares. The wand user is immune to the damage."; }

#endif

/*****************\
 * SPECIAL WANDS *
\*****************/

AI_WAND Effect "Negation" : EA_INFLICT
  { SC_THA; Cost: 12; Level: PLUS_3PER1; qval: Q_TAR;
    xval: NEGATED; lval: PLUS_ADD3; aval: AR_BEAM; cval: GREEN;
    Flags: EF_NEEDS_PLUS, EF_HARDSAVE4, EF_PERSISTANT;  
    Purpose: EP_CURSE; sval: FORT;
    Desc: "When the beam from this baleful wand strikes a
      creature, all the magic inherent to that creature is
      suppressed for a day unless they succeed in a Fortitude
      save. This includes innate spell-like abilities, special
      powers like a lantern archon's light ray or a vrock's
      screech, the breath weapons of dragons and other creatures,
      and most special damage forms, such as the life energy-sapping
      touch of many undead."; }

AI_WAND Effect "Dispelling" : EA_GENERIC
  { SC_ABJ; Cost: 12; Level: PLUS_2PER1; qval: Q_LOC;
    lval: PLUS_ADD3; aval: AR_RAY; cval: RED;
    Flags: EF_NEEDS_PLUS; Purpose: EP_CURSE | EP_DISPEL; 
    Desc: "This wand produces a ray of shimmering crimson
      light that disperses any standing magical effect it
      strikes, duplicating the effect of a <9>dispel magic<7>
      spell with a caster level of 3 + thrice its magical
      plus.";    
    On Event EV_MAGIC_HIT {
      e.vCasterLev = 3 + EItem->GetPlus()*3;
      return RedirectEff(e,$"dispel magic");
      };
  }

AI_WAND Effect "Curing;wand" : EA_HEALING
  { SC_THE; Cost: 0; Level: PLUS_3PER1; qval: Q_NEAR|Q_TAR;
    xval: HEAL_HP; pval: (PLUS_2PER1)d8; yval: 10; 
    Flags: EF_NEEDS_PLUS; 
    Purpose: EP_FIX_TROUBLE (TROUBLE_INJURY);
    Desc: "This wand heals a nearby target of 2d8 hit points of 
      damage per magical plus."; 
  }

// ww: currently Polymorph, Paralysis, Terror, Forced Sleep, Lethargy and
// Alacrity are all so amazingly suboptimal that I'm disappointed whenever
// I receive one ... time to comment these guys out until they can be
// balanced ...
// fjm: save DC's now harder, otherwise buffed -- these guys should be
//      good to go.

AI_WAND Effect "Polymorph" : EA_POLYMORPH
  { SC_THA; Cost: 6; sval: FORT; qval: Q_DIR | Q_TAR | Q_LOC; 
    aval: AR_BEAM; cval: GREEN; Level: PLUS_2PER1_ADD1;
    Flags: EF_STRIKEID, EF_HARDSAVE4, EF_NEEDS_PLUS; 
    Purpose: EP_ATTACK | EP_CURSE;
    Desc: "This wand produces a beam that changes the shape of
      whatever it strikes into a different creature or object
      for a brief period. A Fortitude save negates."; }


AI_WAND Effect "Paralysis" : EA_INFLICT
  { SC_THA; Cost: 8; xval: PARALYSIS; Level: PLUS_3PER1_ADD1;
    sval: FORT; qval: Q_DIR | Q_TAR; aval: AR_BEAM; 
    cval: GREY; Purpose: EP_ATTACK; 
    Flags: EF_STRIKEID, EF_NEEDS_PLUS; 
    Desc: "This wand produces a beam which paralyzes
      and creature struck, provided that creature fails a
      Fortitude saving throw."; }

AI_WAND Effect "Terror" : EA_INFLICT
  { SC_ENC; Cost: 2; xval: AFRAID; Level: PLUS_2PER1;
    Flags: EF_STRIKEID, EF_NEEDS_PLUS, EF_HARDSAVE4; 
    sval: WILL; qval: Q_DIR | Q_TAR; aval: AR_BEAM; 
    cval: BLUE; Purpose: EP_CURSE (VS_FEAR); 
    Desc: "This wand produces a callow blue light ray
      which causes any creature it strikes to flee in
      terror, assuming that creature fails a Will saving
      throw."; }

AI_WAND Effect "Sleep;wand" : EA_INFLICT
  { SC_ENC; Cost: 7; xval: SLEEPING; Level: PLUS_3PER1; 
    Flags: EF_STRIKEID, EF_NEEDS_PLUS;
    sval: WILL; qval: Q_DIR | Q_TAR; aval: AR_BEAM; 
    cval: AZURE; Purpose: EP_ATTACK; 
    Desc: "This wand emits a ray of blue light that causes
      creatures it strikes to fall into a deep slumber. A
      Will saving throw negates this effect."; }

AI_WAND Effect "Lethargy" : EA_INFLICT
  { SC_THA; Cost: 2; qval: Q_DIR | Q_TAR | Q_LOC; 
    sval: WILL; aval: AR_BEAM; lval: 6;
    cval: GREEN; Purpose: EP_CURSE | EP_FOIL_PURSUIT;
    Flags: EF_STRIKEID, EF_HARDSAVE4, EF_NEEDS_PLUS; 
    Level: PLUS_2PER1;
    On Event EV_MAGIC_HIT {
      return RedirectEff(e,$"slow");
      };
    Desc: "This wand induces intense lethargy in creatures struck
      by its beam, <9>slow<7>ing them as if by the spell of the
      same name on a failed Will save."; }

AI_WAND Effect "Fey Trapping;wand" : EA_INFLICT
  { SC_WEA; Cost: 6; xval: ANCHORED; Level: PLUS_2PER1;
    Flags: EF_NEEDS_PLUS, EF_HARDSAVE4; 
    sval: WILL; qval: Q_DIR | Q_TAR; aval: AR_BEAM; 
    cval: EMERALD; Purpose: EP_CURSE (VS_TELEPORT); 
    On Event EV_MAGIC_HIT
	    "You feel a strange wrenching sensation." /
	    "The <EVictim> suddenly seems more solid, somehow.";
	  Desc: "This wand produces a thin green beam that, when it strikes
      any creature, prevents them from teleporting or plane-shifting
      for an extended duration. Creatures already phased will be
      forced back to their natural plane. A Will save resists this
      effect."; }

AI_WAND Effect "Alacrity" : EA_INFLICT
  { SC_THA; Cost: 5; qval: Q_DIR | Q_TAR | Q_LOC; 
    sval: WILL; aval: AR_BEAM; lval: 6; Level: PLUS_2PER1_ADD2;
    cval: EMERALD; Purpose: EP_BUFF; 
    xval: ADJUST; yval: A_SPD; pval: 5d1+(PLUS_5PER1);
    Flags: EF_STRIKEID, EF_NOTBAD, EF_DLONG;
    On Event EV_REMOVED {
      EActor->LoseFatigue(2,false);
      EActor->Abuse(A_CON,3d10);
      return DONE;
      },
    PRE(EV_MAGIC_HIT) {
      VPrint(e, "You feel yourself start to move faster!",
                "The <EVictim> starts moving faster!");
      if (EVictim->HasEffStati(-1,$"slow"))
        {
          EVictim->RemoveEffStati($"slow");
          return DONE;
        }
      return NOTHING;
      };
    Desc: "This wand imbues creatures struck by its beam with a 
      preternatural speed, increasing their attack speed (in all
      categories) and movement rate by 25~ + 25~ per magical plus
      the wand possesses. When the effect wears off, the subject
      loses two points of Fatigue and is considered to have abused
      their Constitution.";
  }
and EA_INFLICT
  { xval: ADJUST; yval: A_MOV; pval: 5d1+(PLUS_5PER1); }
  
AI_WAND Effect "Dismissal;wand" : EA_GENERIC
  { SC_WEA; Cost: 2; qval: Q_DIR | Q_TAR | Q_LOC; 
    sval: WILL; aval: AR_BEAM; lval: 6;
    cval: WHITE; Purpose: EP_CURSE | EP_FOIL_PURSUIT;
    Flags: EF_STRIKEID, EF_HARDSAVE2, EF_NEEDS_PLUS; 
    Level: PLUS_2PER1_ADD1;
    On Event EV_MAGIC_HIT {
      e.vCasterLev = 0;
      return RedirectEff(e,$"dismissal",EV_MAGIC_HIT);
      };
    Desc: "This wand has a similar effect to the <9>dismissal<7> spell,
      casting creatures struck by its beam [4d12 x 10] away from their
      current location if they fail a Will save."; 
  }
      
AI_WAND Effect "Dragon Summoning" : EA_SUMMON
  { SC_WEA; Cost: 25; pval: PLUS_3PER1_ADD3; level: PLUS_4PER1_ADD3;
    Purpose: EP_SUMMON; Flags: EF_AUTOID, EF_NEEDS_PLUS;
    xval: MA_DRAGON; rval: $"generic summons";
    Desc: "This wand summons a dragon when fired. If the dragon's
      CR is too high in comparison to the user's level, or if the
      wand has nor been properly identified when fired, the dragon may
      arrive uncontrolled and hostile.";
  }


AI_WAND Effect "Animal Summoning" : EA_SUMMON
  { SC_WEA; Cost: 10; pval: PLUS_2PER1; level: PLUS_2PER1;
    Purpose: EP_SUMMON; Flags: EF_AUTOID, EF_NEEDS_PLUS;
    xval: MA_DRAGON; rval: $"generic summons";
    Desc: "This wand summons an animal when fired. If the animal's
      CR is too high in comparison to the user's level, or if the
      wand has nor been properly identified when fired, the animal may
      arrive uncontrolled and hostile.";
  }

AI_WAND Effect "Goblinoid Summoning" : EA_SUMMON
  { SC_WEA; Cost: 6; pval: PLUS_2PER1; level: PLUS_2PER1;
    Purpose: EP_SUMMON; Flags: EF_AUTOID, EF_NEEDS_PLUS;
    rval: $"summoned goblinoid";
    Desc: "This wand summons a goblinoid when fired. If the goblinoid's
      CR is too high in comparison to the user's level, or if the
      wand has not been properly identified when fired, the goblinoid may
      arrive uncontrolled and hostile.";
  }

AI_WAND Effect "Beast Summoning" : EA_SUMMON
  { SC_WEA; Cost: 15; pval: PLUS_3PER1; level: PLUS_3PER1;
    Purpose: EP_SUMMON; Flags: EF_AUTOID, EF_NEEDS_PLUS;
    xval: MA_BEAST; rval: $"generic summons";
    Desc: "This wand summons a beast when fired. If the beast's
      CR is too high in comparison to the user's level, or if the
      wand has nor been properly identified when fired, the beast may
      arrive uncontrolled and hostile.";
  }

AI_WAND Effect "Undead Summoning" : EA_SUMMON
  { SC_WEA; Cost: 20; pval: PLUS_3PER1; Level: PLUS_3PER1;
    Purpose: EP_SUMMON; Flags: EF_AUTOID, EF_NEEDS_PLUS; 
    xval: MA_UNDEAD; rval: $"generic summons";
    Desc: "This wand summons an undead when fired. If the undead's
      CR is too high in comparison to the user's level, or if the
      wand has nor been properly identified when fired, the undead may
      arrive uncontrolled and hostile.";
  }


AI_WAND Effect "Vermin Summoning" : EA_SUMMON
  { SC_WEA; Cost: 10; pval: PLUS_2PER1; level: PLUS_2PER1;
    Purpose: EP_SUMMON; Flags: EF_AUTOID, EF_NEEDS_PLUS;
    xval: MA_VERMIN; rval: $"generic summons";
    Desc: "This wand summons vermin when fired. If the vermin's
      CR is too high in comparison to the user's level, or if the
      wand has nor been properly identified when fired, the vermin may
      arrive uncontrolled and hostile.";
  }

AI_WAND Spell "Identify;wand" : EA_GENERIC
  { SC_DIV; Level: 1; qval: Q_INV; Cost: 8;
  // ww: we want Identify wands to be *easy* to use! 
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY;
    Desc: "This wand identifies the basic magical nature of one chosen
      item when fired."; Purpose: EP_PLAYER_ONLY;
    On Event 
      EV_EFFECT {
        EActor->IdentByTrial(EItem);
        return NOTHING;
        },
      EV_RATETARG {
        if (EItem->isKnown(KN_IDENTIFIED) || EItem->isType(T_LIGHT) ||
            EItem->isType(T_FOOD))
          return ABORT;
        return NOTHING;
        },
      EV_MAGIC_HIT {
        ETarget->MakeKnown(0xFF);
        EActor->IPrint("That is an <hObj>.",ETarget);
        return DONE;
      },
      EV_BIRTH {
        EItem->SetCharges(10+1d10);
        return NOTHING;
        };
    Lists:
      * ITEM_COST 4000;
  }
  
AI_WAND Effect "Opening" : EA_GENERIC
  { SC_ARC; Level: 3; Cost: 5; qval: Q_LOC; cval: WHITE;
    aval: AR_BEAM; lval: 8;
    Desc: "This wand creates a beam when fired which opens any locked 
      or sealed object it strikes.";
    On Event EV_MAGIC_XY {
      hObj h; int16 fx, fy;
      for (h=EMap->FItemAt(e.EXVal,e.EYVal);h;h=EMap->NItemAt(e.EXVal,e.EYVal)) 
        if (h->isType(T_CHEST) && h->HasStati(LOCKED))
          {
            h->RemoveStati(LOCKED);
            APrint(e,"The <hObj> clicks.",h);
          }      
      /* Wand beams don't reach into door squares, so check for doors
         extrapolating one square further along the beam's path than 
         the current square is. */
      fx = e.EXVal + DirX(EActor->DirToXY(e.EXVal,e.EYVal));
      fy = e.EYVal + DirY(EActor->DirToXY(e.EXVal,e.EYVal));
      for (h=EMap->FFeatureAt(fx,fy);h;h=EMap->NFeatureAt(fx,fy)) 
        if (h->isType(T_DOOR) && (!(h->DoorFlags & (DF_OPEN|DF_SECRET)))) {
          h->DoorFlags &= ~DF_LOCKED;
          h->DoorFlags |= DF_OPEN;
          h->SetImage();
          e.isSomething = true;
          DPrint(e,"The <hObj> opens.",NULL,h);
          } 
      };
  }
        
#if 0

AI_WAND Effect "Wonder" : EA_GENERIC
  { qval: Q_TAR; Flags: EF_AUTOID, EF_NEEDS_PLUS;
    int16 n, repeat;
    On Event EV_EFFECT {
      int16 i, n, repeat; hObj h;
      
      if (GetHandle(ETarget) && ETarget->isFriendlyTo(EActor))
        n = 1d30 - EActor->Mod(A_LUC);
      else
        n = 1d30 + EActor->Mod(A_LUC);
      
      if (n > 35)
        {
          repeat = n - 35;
          n = 35;
        }
      else if (n < -3)
        {
          repeat = n + 3;
          n = -3;
        }
      else
        repeat = 0;
        
      do
        {
             
          switch (n2)
            {
              case -3:
                /* Your Inventory Vanishes */
                h = EActor->RandInv();
                if (!h)
                  {
                    repeat += 2;
                    break;
                  }
                EActor->IPrint("Your <hObj> dissolves in a spray of bubbles!", h);
                h->Remove(true);
               break; 
              case -2:
                /* Target is Healed */
                RedirectEff(e,$"heal;spell");
               break; 
              case -1:
                /* Target is Hasted */
                RedirectEff(e,$"haste");
               break; 
              case -0:
                /* Curse Equipment */
                for (i=0;i!=3;i++)
                  {
                    h = EActor->RandInv();
                    if (!h)
                      {
                        repeat += 2;
                        break;
                      }
                    if (!h->isCursed())
                      {
                        IDPrint(e, "Your <hObj> glows black!",
                                   "The <EActor>'s <hObj> glows black!", h);
                        h->IFlags |= IF_CURSED;
                        h->ReApply();
                      }
                  }
               break;              
              case 1:
                /* You are ravaged! */
                IDPrint(e, "Your are ravaged!",
                           "The <EActor> is wracked by strange magics!", h);
                ThrowDmg(EV_DAMAGE,AD_DAST,1d6, "a Wand of Wonder",EActor,EActor,EItem);
              case 1:
                /* You are enveloped in flames */
              case 1:
                /* You descend 1d3 levels */
              case 2:
                /* You are paralyzed for 1d6+1 turns */
              case 3:
                /* You shrink 3 categories */
              case 4:
                /* Enemy Turns Invisible */
              case 5:
                /* Globe of Darkness */
              case 6:
                /* Cloud of butterflies */
              case 7:
                /* You turn blue, purple or orange */
              case 8:
                /* You are polymorphed */
              case 9:
                /* Grease sprays area */
              case 10:
                /* Giant mushrooms grow around you */
              case 11:
                /* Rock to Mud */
              case 12:
                /* Target is polymorphed */
              case 13:

              case 19:
                /* Targed Limbed in Faerie Fire */
              case 20:
                /* You turn invisible */
              case 21:
                /* Summon rhino/elephant/mouse */
              case 22:
                /* Gust of Wind */
              case 23: case 31:
                /* Enemy is teleported away */
              case 24: case 32: case 39:
                /* Fireball */
              case 25: case 33: case 40:
                /* Lightning Bolt */
              case 26: case 34: case 41:
                /* Cone of Cold */
              case 27: case 35:
                /* You are healed */
              case 28: case 36:
                /* Enemy is ravaged (2d6 Str/Dex/Con, 8d8 necro) */
              case 29: case 37:
                /* Enemy cast down 1d3 levels */
              case 30: case 38:
                /* Enemy is paralyzed 1d6+2 turns */


#endif

/* More Wands
   * Viscous Globs (ball of STUCK)
   * Frostfire (1/2 fire, 1/2 ice)
   * Bloodflame (1/2 fire, 1/2 normal)
   * Darkness
   * Mana Bolts
   * Tunnelling
   * Wand of Negation (beam)
     -- grants NEGATED stati
     -- creatures cannot use: spell-like powers,
          gaze attacks, breath weapons, touch
          attacks, life drain, etc.
   * Wand of Abjuration (beam sends outsiders home) 
   * Wand of Dehydration (injures creatures with water,
                          removes water squares)
   * Wand of Light (like searing light, somewhat)
   * Wand of Death (save or die! fatigue cost, necromantic)
   * Wand of Disintigration (as above, not necromantic, other limits)
   * Wand of Disruption (magic damage + negation)
   * Wand of Duplication (creates another creature it hits)
   * Wand of Rust
   * Wand of Striking (like force bolt)
   * Wand of Colours (Prismatic Effect)

   * Rod of Earth Authority
   * Rod of Ruin
   * Rod of 
*/


// #undef Q_TAR
// #define Q_TAR 0x0004


/************************************************************************\
 *                                 STAVES                               *
\************************************************************************/

/* Artificially jacking the level on this so it doesn't get
   item spammed due to probability wierdness! */

AI_STAFF Effect "Size Alteration" : EA_GRANT
  { xval: STAFF_SPELLS; Level: 5; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + 255,1,10))
        return NOTHING;
      return DONE;
      };
    Lists:
      * STAFF_SPELL_LIST $"enlarge" $"reduce"; }

AI_STAFF Effect "Fellowship" : EA_GRANT
  { xval: STAFF_SPELLS; Level: 5; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (!EActor->ItemPrereq(CLEV_VAL + 255,2,10))
        return DONE;
      if (!EActor->ItemPrereq(MTYPE_VAL + MA_GOOD,2,10))
        return DONE;
      return NOTHING;
      };
    Lists:
      * STAFF_SPELL_LIST
          $"calm emotions"
          $"shield other"
          $"call companions"
          $"heroism"; 
    Desc: "This ivory staff is a symbolic represetation of
      alliance and loyalty; many priesthoods create them
      to reward adventuring groups or other heroic bands who
      have done great service for the clergy. In the hands of
      a good-aligned 2nd-level spellcaster of any type, the 
      staff can produce the spells <9>calm emotions<7>, 
      <9>shield other<7>, <9>call companions<7> and
      <9>heroism<7>.";
  }


AI_STAFF Effect "Healing;staff" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 7; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + SP_DIVINE + SP_PRIMAL,1,10))
        return NOTHING;
      return DONE;
      };
    Lists:
      * STAFF_SPELL_LIST 
          $"cure critical wounds" $"restoration"
          $"cure disease" $"neutralize poison";
  }
  
AI_STAFF Effect "the Spider" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 5; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (!EActor->ItemPrereq(CLEV_VAL + 255,3,10))
        return DONE;
      if (e.efNum >= 2 && !EActor->ItemPrereq(MTYPE_VAL + MA_DROW,0,20))
        return DONE;
      return NOTHING;
      };
    Lists:
      * STAFF_SPELL_LIST 
          $"spider climb" $"summon swarm"
          $"serpent tongue" $"web";
    Desc: "A solid adamant rod adorned with carvings of spiders,
      these staves are frequently created by drow sorcerors eager
      to earn the favour of their demonic Spider Queen.\n
      __In the hands of a spellcaster of 3rd level or higher,
      a staff of the spider allows access to the spells <9>spider
      climb<7>, <9>serpent tongue<7>, <9>web<7> and <9>summon
      swarm<7>; it also sustains its wielder's Dexterity. If its
      wielder meets the above requirement and is also a drow, it
      grants a +2 bonus to Poison Use and a +2 bonus to saving
      throws against poison, as well as making spiders inherently
      friendly to the wielder.";
  }
and EA_GRANT
  { xval: SUSTAIN; yval: A_DEX; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_POISON_USE; pval: +2; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: +2; }
and EA_GRANT
  { xval: ALLY_TO; yval: (MA_SPIDER+(MA_ANIMAL*256)); } 
  
AI_STAFF Effect "the Goblin Queen" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 6; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (!EActor->ItemPrereq(CLEV_VAL + 255,3,10))
        return DONE;
      if (!EActor->ItemPrereq(MTYPE_VAL + MA_GOBLINOID,0,20))
        return DONE;
      return NOTHING;
      };
    Lists:
      * STAFF_SPELL_LIST 
          $"dancing lights" $"improved phantasmal force"
          $"summon swarm" $"spook" $"gust of wind"
          $"shocking grasp" $"grease" $"visage of death"
          $"caustic vitae" $"expeditious retreat" $"reduce"
          $"shatter" $"pyrotechnics";
    Desc: "Crafted by goblin witch doctors, these staves eminate
      malice and insanity. They are carved with hundreds of eerie, 
      leering inhuman faces, the gemstones set into each face's
      eyesockets glittering even in darkness. A staff of the goblin
      queen holds within it thirteen potent charms that can be used
      by any goblinoid spellcaster of 1st level or above: <9>dancing 
      lights<7>, <9>improved phantasmal force<7>, <9>summon swarm<7>, 
      <9>spook<7>, <9>gust of wind<7>, <9>shocking grasp<7>, <9>grease<7>, 
      <9>visage of death<7>, <9>caustic vitae<7>, <9>expeditious
      retreat<7>, <9>reduce<7>, <9>shatter<7> and <9>pyrotechnics<7>.
      Wielders of the staff also gain a +4 bonus to the Handle Device
      and Bluff skills.\n
      __This power (and diversity!) comes with a price. Wielders of
      the staff constantly hear a giddy, high-pitched laughter that
      gives them a -4 penalty to Spot, Listen and Concentration skills.
      Over time, their behaviour is said to become erratic as they
      become prone to paranoia, mischief, pyromania and generally
      psychotic behaviour.\n
      __Goblins would normally be friendly to the wielder of such an
      item, but in the Goblin Caves the authority of Murgash is
      greater still, and they remain resolute.";
  }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_HANDLE_DEV; pval: +4; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_BLUFF; pval: +4; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_SPOT; pval: -4; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_LISTEN; pval: -4; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_CONCENTRATION; pval: -4; }

AI_STAFF Effect "Exorcism" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 6; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (!EActor->ItemPrereq(CLEV_VAL + SP_DIVINE + SP_ARCANE,3,10))
        return DONE;
      if (!EActor->ItemPrereq(ALIGN_VAL + MA_GOOD,0,20))
        return DONE;
      return NOTHING;
      };
    Lists:
      * STAFF_SPELL_LIST
          $"aura of abjuration"
          $"bless"
          $"detect evil"
          $"dispel evil"
          $"dispel magic"
          $"magic circle vs. evil"
          $"remove curse"
          $"spiritwrack";
    Desc: "Frequently crafted by priests of the church of Immotian,
      these staves are solid and heavy, carved from ivory and clad
      with a ruby at the tip. They allow an accomplished (caster level
      3+) mage or priest of good alignment access to the spells <9>aura 
      of abjuration<7>, <9>bless<7>, <9>detect evil<7>, <9>dispel
      evil<7>, <9>dispel magic<7>, <9>remove curse<7> and
      <9>spiritwrack<7>. Worthy bearers also receive a +2 sacred
      bonus to all their saving throws.";
  }
and EA_GRANT
  { xval: ADJUST_SAC; yval: A_SAV; pval: +2; }

AI_STAFF Effect "Abjuration" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 10; pval: 3;
    Desc: "This staff is specially attuned to the magical school 
      of Abjuration, and is carved with sacred words and protective
      glyphs. If the hands of any character with three or more
      arcane casting levels, it grants the a +2 magic bonus to saving
      throws when grasped, and allows access to the spells
      <9>banishment<7>, <9>dismissal<7>, <9>dispel magic<7>,
      <9>energy buffer<7>, <9>magic circle vs. evil<7> and
      <9>minor globe of invulnerability<7>.";
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + SP_DIVINE + SP_ARCANE,3,20))
        return NOTHING;
      return DONE;
      };
    Lists:
      * STAFF_SPELL_LIST
          $"magic circle vs. evil" $"dismissal"
          $"dispel magic" $"banishment"
          $"minor globe of invulnerability"
          $"energy buffer";
  }
and EA_GRANT
  { xval: ADJUST; yval: A_SAV; pval: +2; }

AI_STAFF Effect "Illusion" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 10; pval: 3;
    Desc: "This staff is carved from a milky, nearly translucent
      marble, and has a swirling, colourful design painted on its
      surface. In the hands of any character with three or more
      levels as an arcane caster, or a gnome, it grants a +4 bonus to the
      Illusioncraft skill and access to the following spells:
      <9>chromatic orb<7>, <9>spectral force<7>, <9>mirror image<2>,
      <9>displacement<2>, <9>phantasmal killer<7> and
      <9>hypnotic pattern<7>.";
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + SP_ARCANE,3,20) ||
          EActor->ItemPrereq(MTYPE_VAL + MA_GNOME,1,20))
        return NOTHING;
      return DONE;
      };
    Lists:
      * STAFF_SPELL_LIST
          $"chromatic orb" $"spectral force" 
          $"mirror image" $"displacement" 
          $"phantasmal killer" $"hypnotic pattern";
  }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_ILLUSION; pval: +4; }

AI_STAFF Effect "Divination" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 10; pval: 3;
    Desc: "This staff formed of gnarled oak and engraved with
      an eye motif. In the hands of any character with three or more
      levels as an arcane caster, it grants a +1 bonus to all
      Knowledge skills and access to the following spells:
      <9>detect monsters<7>, <9>Mord's lucubration<7>,
      <9>wizard sight<7>, <9>premonition<7>, <9>identify<7> and
      <9>true sight<7>.";
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + SP_ARCANE + SP_SORCERY,3,20))
        return NOTHING;
      return DONE;
      };
    Lists:
      * STAFF_SPELL_LIST
          $"detect monsters" $"mord's lucubration"
          $"wizard sight" $"premonition" $"identify"
          $"true seeing";
  }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_MAGIC; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_GEO; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_INF; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_MYTH; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_NATURE; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_OCEANS; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_PLANES; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_UNDEAD; pval: +1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_KNOW_THEO; pval: +1; }

AI_STAFF Effect "Earth and Stone" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 7; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      switch(e.efNum)
        {
          case 0:  
            if (EActor->ItemPrereq(CLEV_VAL + SP_ARCANE + 
                  SP_DIVINE + SP_PRIMAL + SP_SORCERY,3,15))
              return NOTHING;
            return DONE;
          case 1: case 2:
            if ( EActor->ItemPrereq(MTYPE_VAL + MA_ELF,1,20) || 
                 EActor->ItemPrereq(MTYPE_VAL + MA_DWARF,1,20) )
              return NOTHING;
            return DONE;
          case 3:
            if (EActor->ItemPrereq(MTYPE_VAL + MA_ELF,1,20))
              return NOTHING;
            return DONE;
          case 4:
            if (EActor->ItemPrereq(MTYPE_VAL + MA_DWARF,1,20))
              return NOTHING;
            return DONE;
        } 
      };
    Lists:
      * STAFF_SPELL_LIST 
          $"Earthmaw" $"Wall of Stone"
          $"Meld into Stone" $"Transmute Rock to Mud"
          $"Rooting";
    Desc: "Carved out of fine white marble with deep green streaks,
      and topped with a large emerald, mythlore claims that these
      staves are the work of high dwarven clerics working in conjunct
      with ancient grey elf wizards. This rare cooperation has produced
      items of great power and greater artistic value still, celebrating
      the beauty of the element of Earth in both the underground world
      of the dwarves and the life-giving fae glens of elvenkind. Carved
      into the base of the staff are the words <14>Long May Good Causes
      Foster Great Alliances<7> in elven and dwarven script.\n
      __In the hands of a character with three or more levels as a 
      spellcaster, they grant access to the following spells: 
      <9>earthmaw<7>, <9>wall of stone<7>, <9>meld into stone<7>,
      <9>transmute rock to mud<7> and <9>rooting<7>.\n
      __In the hands of an elf or dwarf, the staff also sustains
      Dexterity and Constitution. It grants an elf a +2
      magic bonus to Constitution and a dwarf a +2 bonus to
      Dexterity.";
  }
and EA_GRANT
  { xval: SUSTAIN; yval: A_DEX; }
and EA_GRANT
  { xval: SUSTAIN; yval: A_CON; }
and EA_GRANT
  { xval: ADJUST;  yval: A_CON; pval: +2; }
and EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: +2; }
  
/* In case it seems a little obscure why an elemental staff
   should grant a luck bonus... "wind and water" is a referance
   to the Chinese art of /feng shui/, the manipulation of
   elements and geometry to attain good luck. */
AI_STAFF Effect "Wind and Water" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 7; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + 255,3,20))
        return NOTHING;
      return DONE;
      };
    Lists:
      * STAFF_SPELL_LIST 
          $"Gust of Wind" $"Gaseous Form" 
          $"Wall of Fog" $"Waterspout"
          $"Air Walk" $"Solid Fog";
    Desc: "This staff initially appear to be nothing more than
      a gnarled old cudgel, and in fact that it what most of
      them began their existance as -- the walking sticks of
      a powerful, wise and ancient water spirit that walks the
      lands of Theyra in the guise of an elderly, eccentric
      hermit, giving advice and magical tokens freely to those
      he finds worthy. Nowadays, sadly, they are more likely 
      to show up in the hands of mage guilds or black markets
      than in any pseudohistorical water spirit's hands. Still,
      many mages and priests view these items quite reverantly,
      and pay all due respects to their legendary creator,
      wherever he might be.\n
      __In the hands of a character with three or more levels
      as a spellcaster, this staff grants a +2 enhancement
      bonus to Luck, and also allows access to the spells
      <9>gust of wind<7>, <9>gaseous form<7>, <9>wall of fog<7>,
      <9>waterspout<7>, <9>air walk<7> and <9>solid fog<7>.";
  }    
and EA_GRANT
  { xval: ADJUST_CIRC; yval: A_LUC; pval: +2; }

AI_STAFF Effect "the Fiery Citadel" : EA_GRANT
  {
    xval: STAFF_SPELLS; Level: 7; pval: 3;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      /* For a non-caster, skip the STAFF_SPELLS bit and go
         straight on to the other parts. */
      if (e.isWield && e.efNum == 0)
        if (!EActor->ItemPrereq(CLEV_VAL + 255,3,20))
          return DONE;
      return NOTHING;
      };
    Lists:
      * STAFF_SPELL_LIST 
          $"Burning Hands" $"Produce Flame"
          $"Wall of Fire" $"Flame Blade"
          $"Flaming Sphere" $"Fire Shield";
    Desc: "Forged from brass and set with shiny black
      gemstones of unidentifyable quality, this staff
      is said to give a spellcaster authority over the
      power of flame itself. When anyone grasps it,
      they receive the benefit of the Endurance feat
      and a Cold Resistance of 5. If the bearer is also
      a spellcaster with three or more caster levels,
      she gains access to the spells of <9>burning
      hands<7>, <9>produce flame<7>, <9>wall of fire<7>,
      <9>flame blade<7>, <9>flaming sphere<7> and
      <9>fire shield<7>.";
  }    
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_ENDURANCE; }
and EA_GRANT
  { xval: RESIST; yval: AD_COLD; pval: 5; }
 
AI_STAFF Effect "Winter" : EA_GRANT
  {
    xval: STAFF_SPELLS; yval: 8; pval: 3; Level: 7; 
    Flags: EF_EVIL, EF_HIDEQUAL;
    On Event EV_MAGIC_HIT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + 255,3,20))
        return NOTHING;
      return DONE;
      };
    Constants:
      * INITIAL_PLUS +2;
    Lists:
      * STAFF_SPELL_LIST 
          $"Ice Storm" $"Chill Touch"
          $"Wall of Ice" $"Cone of Cold"
          $"Creeping Cold" $"Blight Plants";
      * ITEM_QUALITIES WQ_NUMBING;
    Desc: "Carved from a beautiful aquamarine crystal and
      adorned with a valuable gemstone of a piercing, clear
      blue hue at each end, the witch who created these
      staves was renowned for her vanity, cruelty and
      haughty disposition. A Staff of Winter acts as a 
      <14>+2 quarterstaff of weakening<7>, and also allows
      anyone with a caster level of three or higher who
      grasps it access to the spells <9>blight plants<7>,
      <9>chill touch<7>, <9>cone of cold<7>, <9>creeping 
      cold<7>, <9>ice storm<7>, and <9>wall of ice<7>.\n
      __The staff also grants such a worthy wielder a +2
      enhancement bonus to Charisma and a +4 enhancement
      bonus to Intimidate, but numbs her ability to 
      understand the feelings of others, granting a -6
      penalty to the Appraise skill.\n
      __These staves are Lawful Evil in temperment, and
      using them is an evil act.";
  }
  
AI_STAFF Effect "the Abyss" : EA_GRANT
  { SC_THA; SC_ENC; Level: 12; xval: STAFF_SPELLS;  
    Flags: EF_EVIL, EF_3PERDAY, EF_ACTIVATE2, EF_DLONG, EF_HIDEQUAL;
    On Event PRE(EV_MAGIC_HIT) {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(CLEV_VAL + SP_ARCANE + SP_DIVINE,5,20))
        return NOTHING;
      return DONE;
      };
    Lists:
      * STAFF_SPELL_LIST
          $"bestow curse" $"burning blood" $"contagion"
          /*$"death knell"*/ $"deeper darkness" $"desecrate"
          $"dire charm" $"enervation" $"unholy blight"
          $"wall of fire" /* $"cacodemon" $"ensnarement" */ ;
    Desc: "There is no academically credible mortal origin
      for these staves, despite several forged manuscripts 
      claiming to be an ancient wizard's account of inventing
      them. All extant accounts of the creation of these
      blasphemous items -- there are only perhaps a dozen
      in total -- refer to reverse engineering of prior
      principles based on research or observation of an older
      Staff of the Abyss. What is commonly said about these
      items among demonologists is that they are a genius
      triumph of human will over supernatural evil, giving 
      mortal men power over the Abyss itself. But considering
      their conspicious lack of history, holy men wise in the
      ways of demons say the opposite: that the first such
      staff was forged in the Abyss, by the Demon Lords, and 
      that its intent in the long run was not to give men
      power over demons -- but the exact opposite. Demons, 
      after all, understand the ways of men all too well.\n
      __A staff of the Abyss is an inert stick in the hands of
      any good character, or any character with less than five
      levels as an arcane or divine spellcaster -- druids lack
      the abstract ethos to grasp the staff's function. In the
      hands of a non-good caster, however, it grants access to
      the following spells: <9>bestow curse<7>, <9>burning blood<7>,
      <9>cacodaemon<7>, <9>contagion<7>, <9>death knell<7>, 
      <9>deeper darkness<7>, <9>desecrate<7>, <9>dire charm<7>,
      <9>enervation<7>, <9>ensnarement<7>, <9>unholy blight<7>
      and <9>wall of fire<7>.\n
      __Its spells, however, are not nearly its most potent
      ability. It strikes in combat as a <11>+2 vampiric quarterstaff
      of terror<7>, and three times per day its wielder can
      activate it, commanding it to change into a vrock -- an
      inhuman demon that will (seem to) serve him as a loyal
      follower for the duration of the effect if he succeeds
      in an opposed Charisma check with it. If he fails, however,
      the vrock is uncontrolled, and will likely attack the former
      staff-bearer. It is this dangerous ability that has destroyed
      dozens of mages, and even if the caster can dominate the
      demon's personality, another issue remains: if the vrock is
      slain in combat, the staff will consume the very life-essence
      of its bearer in order to re-create the creature, costing him
      7500 experience points permanently.\n
      __Despite these incredible risks, these staves continue to
      turn a brisk trade in the assassins markets and the dark
      circles of necromancers and diabolists."; }
and EA_GENERIC  
  { On Event EV_MAGIC_HIT {
      hObj hVrock; 
      if (e.isActivation)
        {
          EMap->thEnGenMonSummXY($"exact monster", $"vrock", 
            EN_SINGLE, 36, 0, EActor, e.EXVal, e.EYVal);
          hVrock = EMap->GetEncounterCreature(0);
          hVrock->GainTempStati(TRANSFORMED,EItem,e.vDuration,
            SS_ENCH,0,0,$"the Abyss",e.vCasterLev);   
          hVrock->GainPermStati(TRAP_EVENT,EItem,SS_MISC,
            EVICTIM(EV_DEATH),0,$"the Abyss",0);       
          EItem->Remove(false);
          DPrint(e, "Your staff transforms into a terrible vulture-demon!",
                    "The <EActor>'s staff transforms into a terrible vulture-demon!");
          EActor->IdentByTrial(EItem);
          return DONE;
        }
      return NOTHING;
      },
    META(EVICTIM(EV_DEATH))
      {
        hObj hCreator;
        hCreator = EActor->GetEffStatiObj(
          TRAP_EVENT,$"the Abyss");
        
        hCreator->IPrint("Your Staff of the Abyss devours part of your
          soul to replace the destroyed vrock!");
        if (hCreator->isCharacter())
          hCreator->LoseXP(7500);
        return NOTHING;
      };
    Constants:
      * INITIAL_PLUS +2;
    Lists:
      * ITEM_QUALITIES WQ_VAMPIRIC WQ_TERROR;
  }


/************************************************************************\
 *                                 BOOTS                                *
\************************************************************************/

// ww: these are very strong -- let's up their level by just a bit, 
// and give them a gradient
AI_BOOTS Effect "Striding and Springing" : EA_GRANT
  { Flags: EF_NEEDS_PLUS;
    SC_THA; xval: ADJUST; yval: A_MOV; pval: PLUS_4PER1; Level: PLUS_2PER1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_JUMP; pval: PLUS_2PER1; 
    Desc: "When worn, these boots grant a 20~ bonus to your
      movement rate and a +2 magic bonus to your Jump skill per magical
      plus they possess."; }

AI_BOOTS Effect "Evasive Footwork" : EA_GRANT
  { SC_THA; xval: EXTRA_FEAT; yval: FT_MOBILITY; Level: 3; }
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_DODGE; 
    Desc: "When worn, these boots grant you the benefit of the Dodge and
      Mobility feats."; } 

// ww: Kicking was very weak before, and somewhat annoying since the
// bonuses don't show up on the character sheet -- now that riding
// is important, it's nice to have an item that improves it
AI_BOOTS Effect "the Spur" : EA_GRANT
  { SC_ENC; xval: TRAP_EVENT; yval: EV_STRIKE; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS;  Level: PLUS_2PER1;
    On Event META(EV_STRIKE) {
      hObj hBoots; int16 bonus;
      if (e.AType == A_KICK && e.DType == AD_BLUNT) {
        /* Note Val and Mag reversed for TRAP_EVENT */
        bonus = EActor->GetEffStatiVal(TRAP_EVENT,$"the Spur");
        e.vHit += bonus;
        e.vDmg += bonus*2;
        hBoots = EActor->GetEffStatiObj(TRAP_EVENT,$"the Spur");
        if (GetHandle(hBoots) != NULL_OBJ && hBoots->isKnown(KN_PLUS))
          {
            e.strHit += Format(" %+d spur",bonus);
            e.strDmg += Format(" %+d spur",bonus*2);
          }              
        }
      return NOTHING;
      };
    Desc: "When kicking while wearing these boots, you receive a
      magic bonus to the attack roll equal to the boots' magic
      plus, and a magic bonus to the kick's damage equal to twice
      their plus. In addition, they provide a magical bonus to your
      Ride skill equal to two times their plus. Finally, you enjoy the
      benefit of the Overrun feat while mounted.";
  }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_RIDE; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_OVERRUN; }

AI_BOOTS Effect "Elvenkind;boots" : EA_GRANT
  { SC_ILL; xval: SKILL_BONUS; yval: SK_MOVE_SIL;
    pval: PLUS_3PER1; Flags: EF_NEEDS_PLUS, WT_RACIAL; 
    Level: PLUS_2PER1; 
    Desc: "These boots grant you a magic bonus to your Move
      Silently skill rating equal to thrice their magical plus."; }

AI_BOOTS Effect "Thunder" : EA_INFLICT
  { SC_ARC; Level: 3;
    aval: AR_GLOBE; lval: 6; qval: Q_LOC;
    xval: PRONE; sval: REF; cval: BROWN;
    On Event EV_ISTARGET {
      if (!ETarget->isCreature())
        return -1;
      if (ETarget->HasMFlag(M_FLYER))
        return -1;
      if (ETarget->HasMFlag(M_MFLYER))
        return -1;
      if (ETarget->HasAbility(CA_FLIGHT))
        return -1;
      if (ETarget->HasStati(LEVITATION))
        return -1;
      return 0; },
    EV_EFFECT {
      if (!e.isWield && !e.isRemove) {
        DPrint(e, "You stomp your feet, and the floor shakes violently!", 
          "The <EActor> stomps <his:EActor> feet, and the floor shakes violently!");
        }
      return NOTHING;
      },
    EV_MAGIC_HIT 
      "The <EVictim> falls down." /
      "You fall down!" /
      "The <EVictim> falls down."; 
    Flags: EF_ACTIVATE; Purpose: EP_CURSE;
    Desc: "When these powerful magical boots are activated, they cause
      the floor to shake, making every bipedal creature within 60 feet
      of you that fails a Reflex saving throw fall down and become
      Prone."; }

AI_BOOTS Effect "Levitation;boots" : EA_GRANT
  { SC_ARC; xval: LEVITATION; yval: 2; pval: 2; 
    Flags: EF_AUTOID; Level: 3; }
and EA_GRANT
  { xval: ADJUST_CIRC; yval: A_HIT; pval: -2; }
and EA_GRANT
  { xval: ADJUST_CIRC; yval: A_MAG; pval: -3; }
and EA_GRANT
  { xval: ADJUST_CIRC; yval: A_MOV; pval: -10; 
    Desc: "These boots cause you to levitate when worn, duplicating
      the effects of the <9>Levitation<7> spell."; }

AI_BOOTS Effect "Phasing" : EA_GRANT
  { SC_WEA; Flags: EF_AUTOID; /* Required for now... */
    xval: EXTRA_ABILITY; yval: CA_PHASE; pval: 2;
    Level: 14;
    Desc: "These boots grant you the ability to phase in and out
      of the ethereal plane, which can be accessed with the Use
      Special Ability ('u') command."; 
    On Event EV_REMOVED, EV_ELAPSED {
      EActor->RemoveStati(PHASED);
      return NOTHING;
      };
  }

/* AI_BOOTS Effect "the Seven League Stride" : EA_GRANT */

AI_BOOTS Effect "Tripping and Stumbling" : EA_GRANT
  { SC_THA; Level: 6; Flags: EF_CURSED;
    xval: ADJUST; yval: A_MOV; pval: -10; }
and EA_GRANT
  { xval: TRAP_EVENT; yval: POST(EV_STRIKE); pval: 2;
    On Event META(POST(EV_STRIKE)) {
      if (random(10))
        return NOTHING;
      if (EActor->isFlatFooted())
        return NOTHING;
	  if (EActor->HasStati(PRONE))
	    return NOTHING;
      DPrint(e,"You trip and fall!",
               "The <EActor> trips and falls!");
      EActor->IdentByTrial(EActor->GetEffStatiObj(-1,$"Tripping and Stumbling"),0);
      EActor->GainPermStati(PRONE,NULL,SS_MISC);
      return DONE;
      };
    Desc: "These cursed boots reduce your movement rate by -50~, and
      cause you to trip (and thus become Prone) at random times when
      trying to attack in combat.";
  }

/************************************************************************\
 *                                BRACERS                               *
\************************************************************************/

/* We have AUTOID on the BoMissleDef and BoPhasing because we don't
   yet have the support code to avoid the character sheet making the
   nature of these items obvious (or just really confusing the
   player!) '*/

AI_BRACERS Effect "Archery" : EA_GRANT
   { SC_ENC; xval: ADJUST_COMP; yval: A_HIT_ARCHERY; pval: PLUS_1PER1; 
     Level: PLUS_ADD1; Flags: EF_NEEDS_PLUS; }
 and EA_GRANT
   { SC_ENC; xval: ADJUST_COMP; yval: A_DMG_ARCHERY; pval: PLUS_1PER1; 
     Desc: "This item gives you a competance bonus to hit and damage
       equal to its plus when firing a bow, crossbow or sling
       (or any other launcher that fires a missile, e.g. a blowpipe)."; }

AI_GAUNTLETS Effect "the Powerful Grip" : EA_GRANT
   { SC_THA; xval: EXTRA_FEAT; yval: FT_MONKEY_GRIP; Level: 3; } 
 and EA_GRANT
   { xval: EXTRA_FEAT; yval: FT_POWER_ATTACK; 
     Desc: "This item gives you supernaturally strong arms and wrists,
      granting you the benefits of the Monkey Grip and Power Attack
      feats."; } 

AI_BRACERS Effect "the Dervish" : EA_GRANT
   { SC_THA; xval: EXTRA_FEAT; yval: FT_TWO_WEAPON_STYLE; Level: 6; } 
 and EA_GRANT
   { SC_THA; xval: EXTRA_FEAT; yval: FT_AMBIDEXTERITY; } 
 and EA_GRANT
   { xval: EXTRA_FEAT; yval: FT_TWIN_WEAPON_STYLE; 
     Desc: "These bracers gives you supernaturally skilled arms, granting you the
     benefits of the Two-Weapon Style, Ambidexterity and Twin Weapon Style
     feats."; } 

// ww: let's give these a gradient
// ww: "boots of speed" were completely inferior to "bracers of blinding
// strike" *and* it was often confusing, since many people may assume
// that "boots of speed" make you walk faster ... -- let's simplify for now
AI_BRACERS Effect "Blinding Strikes" : EA_GRANT
  { SC_THA; Flags: EF_NEEDS_PLUS; 
    xval: ADJUST_CIRC; yval: A_SPD; pval: PLUS_2PER1_ADD1; 
    Level: PLUS_2PER1_ADD1; }
  and EA_GRANT
  { xval: ADJUST_CIRC; yval: A_HIT; pval: PLUS_2PER1; 
    Desc: "These powerful magical items give you a 5~ circumstance bonus to
      your attack speed, plus 10~ per plus they possess, as well as a +2
      circumstance bonus to all attack rolls you make per plus they
      possess."; }

AI_BRACERS Effect "Missile Deflection" : EA_GRANT
  { SC_ABJ; Flags: EF_AUTOID; /* Required for now... */
    xval: EXTRA_FEAT; yval: FT_DEFLECT_ARROWS; Level: 1; 
    Desc: "These bracers bestow upon you the benefit of the Deflect
      Arrows feat, even if you do not meet the prerequisites for
      gaining that feat normally."; }

AI_BRACERS Effect "Neutralization" : EA_GRANT
  { SC_ABJ; Level: 10;
    xval: IMMUNITY; yval: AD_ACID; 
    Desc: "These legendary bracers grant you a total immunity to
      damage from acid when worn."; }

AI_BRACERS Effect "Grounding" : EA_GRANT
  { SC_ABJ; Level: 10;
    xval: IMMUNITY; yval: AD_ELEC; 
    Desc: "These legendary bracers grant you a total immunity to
      damage from lightning or electricity when worn."; }

AI_BRACERS Effect "Defense" : EA_GRANT
  { SC_ABJ; Level: PLUS_2PER1; Flags: EF_NEEDS_PLUS;
    xval: ADJUST; yval: A_DEF; pval: PLUS_1PER1; 
    Desc: "These bracers improve your defense class and coverage with a magic
      bonus equal to the magical plus they possess."; } and EA_GRANT
  { xval: ADJUST; yval: A_COV; pval: PLUS_2PER1; } 

AI_BRACERS Effect "Killing Hands" : EA_GRANT
  { SC_THA; Level: PLUS_2PER1; Flags: EF_NEEDS_PLUS;
    xval: ADJUST; yval: A_HIT_BRAWL; pval: PLUS_1PER1; } and EA_GRANT
  { SC_THA; 
    xval: ADJUST; yval: A_DMG_BRAWL; pval: PLUS_1PER1; 
    Desc: "These increase your hit rolls and the damage you inflict when
    making unarmed attacks by two points per plus. In addition, your
    unarmed strikes count as magical weapons with a plus equal to this
    item's plus. This is a magic bonus.";
    } and EA_GRANT
  { SC_THA; xval: EXTRA_ABILITY; yval: CA_KI_STRIKE; pval: PLUS_1PER1; }

AI_BRACERS Effect "Vulnerability" : EA_GRANT
  { SC_ENC; xval: ADJUST; yval: A_DEF; pval: PLUS_2PER1;
    Flags: EF_CURSED, EF_NEEDS_PLUS; Level: PLUS_1PER1; 
    Desc: "These cursed bracers reduce your defense class by two
      points per magical plus they possess."; }

Item "springblade" : T_WEAPON
  { Image: gray GLYPH_SWORD; Group: WG_SBLADES;
    Mat:MAT_IRON; Size: SZ_SMALL; Weight: 30; 
    Cost: OPT_COST(31,9) GOLD; Parry: 4;
    SDmg:1d6; LDmg:1d6+1; Acc: +1; Crit: x2; Threat: 3; Spd: 130%;
    Flags: WT_SUPER_SNEAK, WT_SLASHING, WT_PIERCING, IT_NOGEN;
    On Event PRE(EV_HIT) {
      if (EItem->HasEffStati(COUNTER,$"Springblade Bracers"))
        { e.isFlatFoot = true;
          EActor->IPrint("Springblade effect!"); 
          EItem->RemoveEffStati($"Springblade Bracers"); }
      return NOTHING;
      };
  }

AI_BRACERS Effect "Springblade Bracers" : EA_GENERIC
  { SC_ARC; SC_ENC; Level: 3; 
    Flags: EF_NAMEONLY, EF_ACTIVATE, EF_CANCEL, EF_MUNDANE;
    Desc: "These crafty mechanical bracers are favoured by gnomes
      and assassins. Mounted carefully inside them are two spring-loaded
      telescoping mithril blades, that when fully extended are not
      unlike those of a short sword. Activating the bracers causes
      the blades to snap out; this takes no time, but does require
      a Handle Device check (DC 15). The blades can be retracted
      by using the Cancel Standing Power ('x') command. Rogues use
      these weapons because they often allow them to get in a
      second sneak attack after a fight has begun -- the first
      attack made with a springblade within a single round of their
      deployment automatically treats a foe as off-guard.\n
      __This particular set of springblade bracers contains a pair
      of <11>+2 keen springblades<7>.";
    On Event EV_MAGIC_HIT {
      hObj hBlade1, hBlade2; int16 count;
      EActor->Timeout = 0;
      if (EActor->HasStati(ALT_ITEM))
        {
          EActor->IPrint("You're already loaded!");
          return DONE;
        }
        
      hBlade1 = EItem->GetEffStatiObj(EFF_FLAG1,
                   $"Springblade Bracers");
      hBlade2 = EItem->GetEffStatiObj(EFF_FLAG2,
                   $"Springblade Bracers");
        
      if (!(hBlade1 || hBlade2))
        {
          EActor->IPrint("Both the blades in these bracers have been
            destroyed. They're useless now.");
          return DONE;
        }
      
      count = 0;
      if (hBlade1)
        {
          EActor->GainTempStati(ALT_ITEM,hBlade1,-2,
            SS_MISC,SL_WEAPON,0, $"Springblade Bracers");
          hBlade1->RemoveStati(COUNTER);
          hBlade1->GainTempStati(COUNTER,NULL,2,
            SS_MISC,0,0, $"Springblade Bracers");
          count++;
        }
      
      if (hBlade2 && (EActor->HasFeat(FT_TWO_WEAPON_STYLE) ||
                      !hBlade1))
        {
          EActor->GainTempStati(ALT_ITEM,hBlade2,-2,
            SS_MISC,SL_READY,0, $"Springblade Bracers");
          hBlade2->RemoveStati(COUNTER);
          hBlade2->GainTempStati(COUNTER,NULL,2,
            SS_MISC,0,0, $"Springblade Bracers");
          count++;
        }
        
      if (count == 2)
        DPrint(e,"Gleaming blades snap out of your bracers!",
                 "Gleaming blades snap out of the <EActor>'s wrists!");
      else
        DPrint(e,"A gleaming blade snaps out of one of your bracers!",
                 "A gleaming blade snaps out of the <EActor>'s wrist!");
      return DONE;
      },
    EV_REMOVE {
      EActor->RemoveEffStati($"Springblade Bracers");
      return NOTHING;
      },
    EV_BIRTH {
      hObj nhBlade1, nhBlade2; int16 type;
      
      nhBlade1 = CreateItem($"springblade");
      nhBlade2 = CreateItem($"springblade");
      type = 1d6;
      
      switch (type)
        {
          case 1:
            nhBlade1->SetInherentPlus(2);
            nhBlade1->AddQuality(WQ_KEEN);      
            nhBlade2->SetInherentPlus(1);
            nhBlade2->AddQuality(WQ_KEEN);
           break;
          case 2:
            nhBlade1->SetInherentPlus(3);
            nhBlade2->SetInherentPlus(3);
           break;
          case 3:
            nhBlade1->SetInherentPlus(2);
            nhBlade1->AddQuality(WQ_FLAMING);      
            nhBlade2->SetInherentPlus(2);
            nhBlade2->AddQuality(WQ_FROST);
           break;
          case 4:
            nhBlade1->SetInherentPlus(2);
            nhBlade1->AddQuality(WQ_SHOCKING);      
            nhBlade2->SetInherentPlus(1);
            nhBlade2->AddQuality(WQ_PAIN);
           break;
          case 5:
            nhBlade1->SetInherentPlus(1);
            nhBlade1->AddQuality(WQ_VENOM);   
            nhBlade1->GainPermStati(POISONED,NULL,SS_MISC,
                         0,0, $"lich dust");   
            nhBlade2->SetInherentPlus(3);
           break;
          case 6:
            nhBlade1->SetInherentPlus(1);
            nhBlade1->AddQuality(WQ_WEAKENING);      
            nhBlade2->SetInherentPlus(1);
            nhBlade2->AddQuality(WQ_NUMBING);
           break;
        }      
      EActor->GainPermStati(EFF_FLAG1,nhBlade1,SS_MISC, type, 0, $"Springblade Bracers");
      EActor->GainPermStati(EFF_FLAG2,nhBlade2,SS_MISC, type, 0, $"Springblade Bracers");
      return NOTHING;
      },
    EV_GETNAME {
      switch(EActor->GetEffStatiVal(-1,$"Springblade Bracers"))
        {
          case 1:  e.nAppend += " (+2 keen/+1 keen)"; break;
          case 2:  e.nAppend += " (+3/+3)"; break;
          case 3:  e.nAppend += " (+3 flame/+2 frost)"; break;
          case 4:  e.nAppend += " (+2 shock/+1 pain)"; break;
          case 5:  e.nAppend += " (+1 venom/+3)"; break;
          case 6:  e.nAppend += " (+1 weakening/+1 numbing)"; break;
          default: e.nAppend += " (broken)"; break;
        }
      return NOTHING;
      };
  }

/************************************************************************\
 *                               GAUNTLETS                              *
\************************************************************************/

AI_GAUNTLETS Effect "Fumbling" : EA_GRANT
  { SC_THA; xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1;
    Flags: EF_CURSED, EF_NEEDS_PLUS; Level: PLUS_1PER1; 
    Desc: "These cursed gauntlets apply their magical plus as a 
      penalty to your Dexterity score."; }

AI_GAUNTLETS Effect "Rust;gauntlet" : EA_GRANT
  { SC_ABJ; Level: 2; xval: IMMUNITY; yval: AD_RUST; }
  and EA_GRANT
  { SC_ABJ; Level: 2; xval: IMMUNITY; yval: AD_DCAY; }
  and EA_GRANT
  { xval: IMMUNITY; yval: AD_SOAK; 
    Desc: "This magical item grants you total immunity to rust
    attacks (such as those from a Rust Monster or rust trap), water
    splashes (such as those from a Water Elemental or deep water) and
    organic decay attacks (such as those from a Brown Pudding or a decay
    trap).  They can also be used as a rusting grasp up to three times
	per day."; }
  and EA_GENERIC
  { aval: AR_TOUCH;
    xval: AD_RUST; pval: 8d6; Purpose: EP_ATTACK;
    cval: PURPLE; Flags: EF_BLIND_PROMPT, EF_ACTIVATE2,
    EF_3PERDAY;
    /* The monster AI uses this, to avoid the case of an NPC
       druid casting Rusting Grasp on, say, a yellow mold. */
    On Event EV_ISTARGET {
      hObj h;
      if (h = ETarget->InSlot(SL_WEAPON))
        if (h->Material() == MAT_IRON)
          return 1;
      if (h = ETarget->InSlot(SL_ARMOUR))
        if (h->Material() == MAT_IRON)
          return 1;
      if (h = ETarget->InSlot(SL_GAUNTLETS))
        if (h->Material() == MAT_IRON)
          return 1;
      if (h = ETarget->InSlot(SL_BRACERS))
        if (h->Material() == MAT_IRON)
          return 1;
      return -1;
      },
    MSG_CAST
      "Your gauntlets glow with a russet aura!" /
      "The <EActor>'s gauntlets glow with a russet aura!";
  }

AI_GAUNTLETS Effect "Lightning;gauntlets" : EA_GRANT
  { SC_EVO; xval: TRAP_EVENT; yval: POST(EV_HIT); 
    Level: PLUS_2PER1; Flags: EF_NEEDS_PLUS;
    On Event META(POST(EV_HIT)) {
      hObj gl; gl = EActor->InSlot(SL_GAUNTLETS);
      if (!is_standard_attk(e.AType) || (!gl))
        return NOTHING;
      EActor->IDPrint("Your gauntlets crackle!",
                      "The <hObj>'s gauntlets crackle!",EActor);
      ThrowDmg(EV_DAMAGE,AD_ELEC,(gl->GetInherentPlus())d4,"lightning gauntlets",EActor,EVictim);
      EActor->IdentByTrial(gl);
      }; 
    Desc: "When you make a natural attack (e.g., a punch, a kick, a claw
    attack) against a creature, these inflict 1d4 points of bonus
    electrical damage on the victim per magical plus they possess.";
  }

AI_GAUNTLETS Effect "Legerdemain" : EA_GRANT
  { SC_THA; xval: EXTRA_FEAT; yval: FT_FASTER_THAN_THE_EYE; Level: 2; 
    Desc: "This magical item grants its wearer the benefits of the Faster
    Than The Eye feat, allowing for rapid item shuffling and looting. In 
    addition, it allows its wearer to detect all chests within 300 feet 
    (30 squares)."; } 
  and EA_GRANT { xval: DETECTING_TYPE; yval: T_CHEST; pval: 30; } 

AI_GAUNTLETS Effect "Nimble Fingers" : EA_GRANT
  { SC_ARC; xval: SKILL_BONUS; yval: SK_PICK_POCKET;
    pval: PLUS_2PER1; Flags: EF_NEEDS_PLUS; 
    Level: PLUS_2PER1; 
    Constants:
      * BASE_ITEM $"gloves";
    Desc: "These fine black gloves improve your Handle Devices, Lockpicking 
      and Pick Pockets skill with a magic bonus equal to twice their plus."; }
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_LOCKPICKING; pval: PLUS_2PER1; } 
  and EA_GRANT { xval: SKILL_BONUS; yval: SK_HANDLE_DEV; pval: PLUS_2PER1; } 

/************************************************************************\
 *                                 RINGS                                *
\************************************************************************/

AI_RING Spell "Identify;ring" : EA_GENERIC
  { SC_DIV; Level: 1; qval: Q_INV; Purpose: EP_PLAYER_ONLY;
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY, EF_STAPLE, EF_3PERDAY,
           EF_ACTIVATE;
    Desc: "This ring identifies the basic magical nature of one chosen
      item when activated; it can be used thus three times per day."; 
    On Event 
      EV_WIELD {
        EActor->IPrint("The ring self-identifies!");
        EActor->IdentByTrial(EItem);
        return NOTHING;
        },
      EV_RATETARG {
        if (EItem->isKnown(KN_IDENTIFIED) || EItem->isType(T_LIGHT) ||
            EItem->isType(T_FOOD))
          return ABORT;
        return NOTHING;
        },
      EV_MAGIC_HIT {
        ETarget->MakeKnown(0xFF);
        EActor->IPrint("That is an <hObj>.",ETarget);
        return DONE;
      };
    Lists:
      * ITEM_COST 2500;  
  }

AI_RING Spell "Greater Ring of Identify" : EA_GENERIC
  { SC_DIV; Level: 5; qval: Q_INV; Purpose: EP_PLAYER_ONLY;
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY, EF_STAPLE, EF_7PERDAY,
           EF_NAMEONLY, EF_ACTIVATE;
    Desc: "This ring identifies the basic magical nature of one chosen
      item when activated; it can be used thus seven times per day."; 
    On Event 
      EV_WIELD {
        EActor->IPrint("The ring self-identifies!");
        EActor->IdentByTrial(EItem);
        return NOTHING;
        },
      EV_RATETARG {
        if (EItem->isKnown(KN_IDENTIFIED) || EItem->isType(T_LIGHT) ||
            EItem->isType(T_FOOD))
          return ABORT;
        return NOTHING;
        },
      EV_MAGIC_HIT {
        ETarget->MakeKnown(0xFF);
        EActor->IPrint("That is an <hObj>.",ETarget);
        return DONE;
      };
    Lists:
      * ITEM_COST 8000;
  }

AI_RING Effect "Evasion" : EA_GRANT
  { SC_THA; xval: EXTRA_ABILITY; yval: CA_EVASION; pval: +4; 
    Level: 5; 
    Desc: "This ring grants you four levels of the Evasion ability (as
      the rogue and monk class feature), or improves any existing Evasion 
      ability you may have by four levels. Evasion allows you to dodge
      spell blasts if you are wearing light armour or no armour and you
      make a successful Reflex save. If you dodge a spell that allows a
      saving throw you take no damage. If the spell does not normally
      allow a saving throw, you take half damage."; }
    
AI_RING Effect "Infravision;ring" : EA_GRANT
  { SC_THA; xval: EXTRA_ABILITY; yval: CA_INFRAVISION; pval: +6; 
    Level: 1;
    Desc: "This ring grants you Infravision to a range of 60 feet, or
      improves the range of your existing Infravision by 60 feet."; }

/* Later, remember to add EV_REMOVE for both of these, so that
   if you take the ring off, you lose the summoned creature
   right away. These are good enough for their level that they
   should use up a slot. */

AI_RING Effect "the Imp" : EA_SUMMON
  { SC_WEA; rval: $"true imp"; pval: 2; Level: 1; Purpose: EP_SUMMON;
    Flags: EF_ACTIVATE, EF_XSUMMON, EF_EVIL, EF_LAWFUL, EF_DLONG,
           EF_3PERDAY;
    Desc: "This elegant, sharp-edged ring serves as a planar prison
      for an imp, holding the creature within it until its wearer
      summons it by activating the ring. The service of the imp is
      truly eternal -- if it is slain, it reforms after a day's 
      rest inside the ring, and it heals fully when resting inside 
      the ring.";
    On Event MSG_XSUMMON
      "The imp isn't currently in the ring.",
    EV_ELAPSED
      "The imp returns to the ring.",
    POST(EV_MAGIC_HIT) {
      hObj hImp;
      hImp = EMap->GetEncounterCreature(0);
      if (hImp != NULL)
        hImp->GainPermStati(TRAP_EVENT,EItem,SS_MISC,
          POST(EVICTIM(EV_DEATH)), 0, $"the Imp", e.vCasterLev);
      return NOTHING;
      },
    PRE(EV_EFFECT) {
      if (EItem->HasEffStati(SPEC_TIMEOUT,$"the Imp"))
        {
          EActor->IPrint("The imp is still recovering after being killed.");
          return ABORT;
        }
      return NOTHING;
      },
    META(POST(EVICTIM(EV_DEATH))) {
      hObj hRing;
      if (!EVictim->isDead())
        return NOTHING;
      hRing = EVictim->GetEffStatiObj(TRAP_EVENT,$"the Imp");
      hRing->GainTempStati(SPEC_TIMEOUT,NULL,-1,SS_MISC, 0, 0, $"the Imp");
      return NOTHING;
      };
  }

AI_RING Effect "Ring, Djinn Prison" : EA_SUMMON
  { SC_WEA; rval: $"djinni"; pval: 8; Level: 7; Purpose: EP_SUMMON;
    Flags: EF_ACTIVATE, EF_XSUMMON, EF_DLONG, EF_3PERDAY, EF_NAMEONLY;
    Desc: "This finely crafted Arabic ring serves as a planar prison
      for djinn, holding the creature within it until its wearer
      summons it by activating the ring. The service of the djinni is
      truly eternal -- if it is slain, it reforms after a day's 
      rest inside the ring, and it heals fully when resting inside 
      the ring.";
    On Event MSG_XSUMMON
      "The djinni isn't currently in the ring.",
    EV_ELAPSED
      "The djinni returns to the ring.",
    POST(EV_MAGIC_HIT) {
      hObj hImp;
      hImp = EMap->GetEncounterCreature(0);
      if (hImp != NULL)
        hImp->GainPermStati(TRAP_EVENT,EItem,SS_MISC,
          POST(EVICTIM(EV_DEATH)), 0, $"Ring, Djinn Prison", e.vCasterLev);
      return NOTHING;
      },
    PRE(EV_EFFECT) {
      if (EItem->HasEffStati(SPEC_TIMEOUT,$"Ring, Djinn Prison"))
        {
          EActor->IPrint("The djinni is still recovering after being killed.");
          return ABORT;
        }
      return NOTHING;
      },
    META(POST(EVICTIM(EV_DEATH))) {
      hObj hRing;
      if (!EVictim->isDead())
        return NOTHING;
      hRing = EVictim->GetEffStatiObj(TRAP_EVENT,$"Ring, Djinn Prison");
      hRing->GainTempStati(SPEC_TIMEOUT,NULL,-1,SS_MISC, 0, 0, $"Ring, Djinn Prison");
      return NOTHING;
      };
  }
                        

AI_RING Effect "Mind Shielding" : EA_GRANT
  { SC_ABJ; xval: ADJUST; yval: A_SAV_WILL; pval: PLUS_2PER1; 
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This ring shields you from unnatural mental influences, giving
      you a magic bonus to your Will saving throw equal in magnitude to
      twice times its plus. In addition, it sustains the wearer's
      Intelligence and Wisdom. Finally, the wearer cannot be sensed by
      telepathy."; } and EA_GRANT
  { xval: SUSTAIN; yval: A_INT; pval: PLUS_2PER1; } and EA_GRANT
  { xval: SUSTAIN; yval: A_WIS; pval: PLUS_2PER1; } and EA_GRANT
  { xval: NONDETECTION; yval: PER_TELE; }

AI_RING Effect "Water Walking;ring" : EA_GRANT
  { SC_ILL; xval: WATER_WALKING; pval: 1; Level: 4; 
    Desc: "This ring allows you to walk upon water as if it were a
      solid surface when worn, avoiding the effects of getting wet
      or drowning."; }

AI_RING Effect "Climbing" : EA_GRANT
  { SC_THA; xval: SKILL_BONUS; yval: SK_CLIMB; pval: PLUS_3PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "When worn, this ring grants you a magic bonus to your
      Climbing skill equal to three times its plus."; }

AI_RING Effect "the Chameleon" : EA_GRANT
  { SC_THA; xval: SKILL_BONUS; yval: SK_HIDE; pval: PLUS_3PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This ring causes your image to shift colour to match the
      surroundings, giving you a magic bonus to your Hide skill equal
      to thrice its level of enchantment. In addition, it may be
      used to dominate any one nearby reptile three times per day."; }
      and EA_GRANT
  { SC_ENC; xval: CHARMED; yval: CH_DOMINATE; Level: PLUS_3PER1;
    tval: MA_REPTILE; aval: AR_GLOBE; qval: Q_TAR; 
    Flags: EF_ACTIVATE2, EF_LIM_MTYPE, EF_DLONG, EF_STRIKEID, EF_3PERDAY;
    sval: WILL; }

AI_RING Effect "Animal Kinship" : EA_GRANT
  { SC_THA; xval: SKILL_BONUS; yval: SK_ANIMAL_EMP; pval: PLUS_2PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This ring bestows a supernatural kinship to animals,
      improving your Animal Empathy skill by twice its level of
      enchantment. At +3 or higher, it will allow you to use the
      skill even if you have no ranks in it. In addition, true
      animals will always be initially neutral to you."; } 
  and EA_GRANT
  { xval: NEUTRAL_TO; yval: MA_ANIMAL; }

AI_RING Effect "Jumping" : EA_GRANT
  { SC_THA; xval: SKILL_BONUS; yval: SK_JUMP; pval: PLUS_3PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "When worn, this ring grants you a magic bonus to your
      Jumping skill equal to three times its plus."; }

AI_RING Effect "Invisibility;ring" : EA_INFLICT
  { SC_ILL; xval: INVIS; yval: INV_NORMAL; pval: PLUS_4PER1;
    Flags: EF_DLONG, EF_ACTIVATE, EF_3PERDAY; Level: 7; 
    Desc: "This ring renders the wearer invisible for a brief period
      when it is activated, subject to the same limitations as the
      <9>invisibility<7> spell. It can be used in this manner three 
      times per day."; }

/*
AI_RING Effect "Sustenance" : EA_GRANT
  { SC_THA; xval: TRAP_EVENT; yval: EV_TURN; Level: 5;
    On Event META(EV_TURN) {
      if (!EActor->HasStati(HUNGER))
        return NOTHING;
      if (EActor->GetStatiDur(HUNGER) < (CONTENT+100))
        EActor->SetStatiDur(HUNGER,-1,NULL,CONTENT+200);
      return NOTHING; 
      },
    PRE(EV_WIELD) {
      if (!EActor->HasStati(HUNGER))
        return NOTHING;
      EItem->RemoveEffStati(EFF_FLAG1,$"Sustenance");
      EItem->GainPermStati(EFF_FLAG1,EActor,SS_MISC,
        EActor->Get
    Desc: "As long as this ring is worn, the wearer will suffer no
      ill effects from hunger and will remain perpetually content.
      However";
  }
*/  

/* From the goofily-named OGL "Ring of X-Ray Vision" */
AI_RING / AI_EYES Effect "Penetrating Sight" : EA_GRANT
  { SC_DIV; xval: PERCEPTION; yval: 1; pval: PLUS_2PER1; 
    Level: PLUS_2PER1_ADD7; Flags: EF_NEEDS_PLUS; 
    Desc: "This item allows its wearer to see through solid matter,
      perceiving all things within 20 feet per magical plus it
      possesses, even if they would normally be obstructed by a
      wall or other barrier."; }

AI_RING / AI_STONE Effect "Channeling" : EA_GRANT
  { SC_WEA; xval: ADJUST; yval: A_MAN; pval: PLUS_4PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This item augments a character's natural reserve of magical
      energy, increasing the size of her mana pool by 20 points per
      plus it possesses."; }

AI_AMULET / AI_EYES Effect "See Invisible" : EA_GRANT
  { SC_DIV; xval: SEE_INVIS; Level: 1; 
    Desc: "Wearing this allows a character to see invisible creatures
      and objects clearly, as if they were not invisible."; }

AI_RING Effect "Regeneration" : EA_GRANT
  { SC_THA; xval: EXTRA_ABILITY; yval: CA_REGEN; pval: PLUS_2PER1; 
    Level: PLUS_2PER1_ADD7; Flags: EF_NEEDS_PLUS;
    Desc: "This item causes a character to constantly and rapidly heal
      any wounds they suffer, with the rate at which hit points are
      recovered being determined by the ring's magical plus."; }

AI_RING Effect "the Ram" : EA_BLAST
  { SC_EVO; Cost: 5; xval: AD_BLUNT; pval:(PLUS_1PER1)d10; cval: WHITE;
    aval: AR_BOLT; qval:Q_DIR | Q_TAR; sval: REF Partial; Flags: EF_ACTIVATE; 
    Purpose: EP_ATTACK; Level: PLUS_2PER1; Flags: EF_NEEDS_PLUS, EF_3PERDAY;
    Desc: "This ring can project a blast of concussive force shaped vaguely
      like a ghostly ram's head when activated, inflicting 1d10 points of
      blunt damage per magical plus. The bolt may also knock its victim
      back, and if the victim fails a Reflex save for half damage, it is
      also stunned. This effect can be used three times per day.";  }
  and EA_BLAST
  { xval: AD_KNOC; pval: (PLUS_1PER1)d2; sval: REF partial; aval: AR_BOLT; }
  and EA_INFLICT
  { xval: STUNNED; sval: REF; Flags: EF_D1ROUND; aval: AR_BOLT; 
    On Event MSG_BLASTNAME "ram-shaped force construct"; }

AI_RING Effect "Polymorphing" : EA_POLYMORPH
  { SC_THA; lval: 50; Flags: EF_PERIODIC; Level: 3;
    Flags: EF_HALF_CURSED; 
    Desc: "When worn, this ring causes a wearer to randomly shapeshift 
      into a different type of creature at regular intervals."; }

AI_RING Effect "Spell Disruption" : EA_GRANT
  { SC_ENC; xval: ADJUST; yval: A_MAG; pval: -10; Flags: EF_CURSED; 
    Level: 3; 
    Desc: "This accursed ring inhibits spellcasting, inflicting a
      -50~ penalty to all spell success chances."; }

AI_RING Effect "Weakness;ring" : EA_GRANT
  { SC_THA; xval: ADJUST; yval: A_STR; pval: -6; Flags: EF_CURSED; 
    Level: 0; 
    Desc: "This cursed ring weakens its wearer, granting a -6 magic
      penalty to her Strength."; }

AI_RING Effect "Ignorance" : EA_GRANT
  { SC_ENC; xval: ADJUST; yval: A_INT; pval: -6; Flags: EF_CURSED; 
    Level: 0;
    Desc: "This cursed ring stunts its wearer's intellect, granting
      a -6 magic penalty to her Intelligence."; }


AI_RING Effect "Free Action;ring" : EA_GRANT
  { SC_ABJ; xval: IMMUNITY; yval: AD_PLYS; Level: 3;
    Desc: "This item grants its wearer supernatural freedom of movement, rendering 
      her immune to paralysis, petrification, slowing, entangling and similar 
      impediments."; }
  and EA_GRANT { xval: IMMUNITY; yval: AD_STUK; }
  and EA_GRANT { xval: IMMUNITY; yval: AD_SLOW; }
  and EA_GRANT { xval: IMMUNITY; yval: AD_STON; } 

AI_RING Effect "Aggravate Monster" : EA_GRANT
  { SC_ENC; xval: ENEMY_TO; yval: -1; Flags: EF_CURSED; Level: 0; 
    Desc: "This cursed item causes all monsters to be hostile to the wearer
    by default."; 
  }
  
AI_RING Effect "Elemental Command (Air)" : EA_GRANT
  { SC_EVO; SC_WEA; SC_ARC; Level: 14;
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE);
    Desc: "Legends claim that D'Salyn, the mouth of the Elder
      Elemental Eye and the one of the eldest of the 13 mage-kings,
      crafted four rings to give to his most senior warlords, each
      of which offered unearthly power in the form of near-absolute
      domination over one of the four basic elements: earth, air,
      fire and water.\n
      __The air ring was given to...\n
      __The Ring of Elemental Command (Air) carries several benefits.
      Air elementals cannot attack the wearer unless they succeed at
      a Will saving throw (DC 10 + 1/2 the wearer's level + the wearer's
      Charisma modifier). All creatures with ties to the elemental plane
      of air (including elementals who make the save) attack the ring
      bearer at a -2 penalty. The wearer gains the ability to command air
      creatures as an Air priest of 12th level, or augments their existing
      ability by +6 -- whichever is superior. The ring also duplicates the
      effects of a Ring of Feather Falling.\n
      __The bearer of the ring of air does suffer a minor curse among all
      the benefits, however, suffering a -4 penalty to saving throws
      versus knockdown or knockback.\n
      __Finally, the bearer is granted access to several staff-spells
      related to elemental air: <9>wind column<7>, <9>gust of wind<7>,
      <9>wind wall<7>, <9>air walk<7>, <9>cloudkill<7> and <9>chain
      lightning<7>. The wearer of the ring may make use of these spells
      even if she has no spellcasting ability of her own, per the normal
      rules and restrictions of staff-spells.";
    On Event META(EVICTIM(EV_STRIKE)) {
      hObj hRing;
      if (!EActor->isMType(MA_AIR))
        return NOTHING;
      
      e.strHit += " -2 EC(Air)";
      e.vHit -= 2;
      
      if (!EActor->isMType(MA_ELEMENTAL))
        return NOTHING;
        
      if (EActor->SavingThrow(WILL, 10 + EVictim->ChallengeRating() / 2 +
            EVictim->Mod(A_CHA),SA_MAGIC|SA_SPELLS))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return ABORT;
      /* Later: Seeing an opportunity, you find yourself... */
      DPrint(e,"You find yourself unable to strike!",
               "The <EActor> hesitates.");
      return DONE;
      },
    EV_MAGIC_HIT {
      int16 clev;
      if (e.isWield && e.efNum == 0)
        {
          clev = EVictim->GetStatiMag(COMMAND_ABILITY,MA_AIR);
          EVictim->GainPermStati(COMMAND_ABILITY,EItem,SS_ITEM, MA_AIR,
            max(10,clev+5), $"Elemental Command (Air)", e.vCasterLev);
        }
      return NOTHING;
      };
  }
and EA_GRANT
  { xval: STAFF_SPELLS;
    Lists:
      * STAFF_SPELL_LIST
          $"gaseous form" $"gust of wind" $"wind wall"
          $"air walk" $"cloudkill"
          $"chain lightning";
  }
and EA_GRANT
  { xval: EXTRA_ABILITY; yval: CA_SLOW_FALL; pval: 1; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_KNOCKDOWN; pval: -4; }

AI_RING Effect "Elemental Command (Earth)" : EA_GRANT
  { SC_EVO; SC_WEA; SC_ARC; Level: 14;
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE);
    Desc: "Legends claim that D'Salyn, the mouth of the Elder
      Elemental Eye and the one of the eldest of the 13 mage-kings,
      crafted four rings to give to his most senior warlords, each
      of which offered unearthly power in the form of near-absolute
      domination over one of the four basic elements: earth, air,
      fire and water.\n
      __The earth ring was given to...\n
      __The Ring of Elemental Command (Earth) carries several benefits.
      Earth elementals cannot attack the wearer unless they succeed at
      a Will saving throw (DC 10 + 1/2 the wearer's level + the wearer's
      Charisma modifier). All creatures with ties to the elemental plane
      of earth (including elementals who make the save) attack the ring
      bearer at a -2 penalty. The wearer gains the ability to command earth
      creatures as an Earth priest of 12th level, or augments their existing
      ability by +6 -- whichever is superior. The ring also sustains its
      wearer's Strength and Constitution.\n
      __The bearer of the ring of air does suffer a minor curse among all
      the benefits, however, suffering a -4 penalty to saving throws
      versus petrification.\n
      __Finally, the bearer is granted access to several staff-spells
      related to elemental earth: <9>soften stone<7>, <9>stone tell<7>,
      <9>stoneskin<7>, <9>meld into stone<7>, <9>wall of stone<7> and 
      <9>tremor<7>. The wearer of the ring may make use of these spells
      even if she has no spellcasting ability of her own, per the normal
      rules and restrictions of staff-spells.";
    On Event META(EVICTIM(EV_STRIKE)) {
      hObj hRing;
      if (!EActor->isMType(MA_EARTH))
        return NOTHING;
      
      e.strHit += " -2 EC(Earth)";
      e.vHit -= 2;
      
      if (!EActor->isMType(MA_ELEMENTAL))
        return NOTHING;
        
      if (EActor->SavingThrow(WILL, 10 + EVictim->ChallengeRating() / 2 +
            EVictim->Mod(A_CHA),SA_MAGIC|SA_SPELLS))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return ABORT;
      /* Later: Seeing an opportunity, you find yourself... */
      DPrint(e,"You find yourself unable to strike!",
               "The <EActor> hesitates.");
      return DONE;
      },
    EV_MAGIC_HIT {
      int16 clev;
      if (e.isWield && e.efNum == 0)
        {
          clev = EVictim->GetStatiMag(COMMAND_ABILITY,MA_EARTH);
          EVictim->GainPermStati(COMMAND_ABILITY,EItem,SS_ITEM, MA_EARTH,
            max(10,clev+5), $"Elemental Command (Earth)", e.vCasterLev);
        }
      return NOTHING;
      };
  }
and EA_GRANT
  { xval: STAFF_SPELLS;
    Lists:
      * STAFF_SPELL_LIST
          $"meld into stone" $"stoneskin" $"soften stone"
          $"tremor" $"wall of stone" $"stone tell";
  }
and EA_GRANT
  { xval: SUSTAIN; yval: A_STR; pval: 10; }
and EA_GRANT
  { xval: SUSTAIN; yval: A_CON; pval: 10; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_PETRI; pval: -4; }

AI_RING Effect "Elemental Command (Fire)" : EA_GRANT
  { SC_EVO; SC_WEA; SC_ARC; Level: 14;
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE);
    Desc: "Legends claim that D'Salyn, the mouth of the Elder
      Elemental Eye and the one of the eldest of the 13 mage-kings,
      crafted four rings to give to his most senior warlords, each
      of which offered unearthly power in the form of near-absolute
      domination over one of the four basic elements: earth, air,
      fire and water.\n
      __The fire ring was given to...\n
      __The Ring of Elemental Command (Fire) carries several benefits.
      Fire elementals cannot attack the wearer unless they succeed at
      a Will saving throw (DC 10 + 1/2 the wearer's level + the wearer's
      Charisma modifier). All creatures with ties to the elemental plane
      of fire (including elementals who make the save) attack the ring
      bearer at a -2 penalty. The wearer gains the ability to command fire
      creatures as a Fire priest of 12th level, or augments their existing
      ability by +6 -- whichever is superior. The ring also grants its
      wearer a Fire Resistance of 10.\n
      __The bearer of the ring of fire does suffer a minor curse among all
      the benefits, however, suffering 150~ damage from all cold-based
      attacks (before resistance).\n
      __Finally, the bearer is granted access to several staff-spells
      related to elemental fire: <9>burning hands<7>, <9>flaming sphere<7>,
      <9>pyrotechnics<7>, <9>wall of fire<7>, <9>flame strike<7> and 
      <9>flame blade<7>. The wearer of the ring may make use of these spells
      even if she has no spellcasting ability of her own, per the normal
      rules and restrictions of staff-spells.";
    On Event META(EVICTIM(EV_STRIKE)) {
      hObj hRing;
      if (!EActor->isMType(MA_FIRE))
        return NOTHING;
      
      e.strHit += " -2 EC(Fire)";
      e.vHit -= 2;
      
      if (!EActor->isMType(MA_ELEMENTAL))
        return NOTHING;
        
      if (EActor->SavingThrow(WILL, 10 + EVictim->ChallengeRating() / 2 +
            EVictim->Mod(A_CHA),SA_MAGIC|SA_SPELLS))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return ABORT;
      /* Later: Seeing an opportunity, you find yourself... */
      DPrint(e,"You find yourself unable to strike!",
               "The <EActor> hesitates.");
      return DONE;
      },
    EV_MAGIC_HIT {
      int16 clev;
      if (e.isWield && e.efNum == 0)
        {
          clev = EVictim->GetStatiMag(COMMAND_ABILITY,MA_FIRE);
          EVictim->GainPermStati(COMMAND_ABILITY,EItem,SS_ITEM, MA_FIRE,
            max(10,clev+5), $"Elemental Command (Fire)", e.vCasterLev);
        }
      return NOTHING;
      };
  }
and EA_GRANT
  { xval: STAFF_SPELLS;
    Lists:
      * STAFF_SPELL_LIST
          $"burning hands" $"flaming sphere" $"pyrotechnics"
          $"wall of fire" $"flame blade" 
          $"flame strike";
  }
and EA_GRANT
  { xval: RESIST; yval: AD_FIRE; pval: 12; }
and EA_GRANT
  { xval: TRAP_EVENT; yval: EVICTIM(EV_DAMAGE);
    On Event META(EVICTIM(EV_DAMAGE)) {
      if (e.DType = AD_COLD)
        e.vDmg = (e.vDmg * 3) / 2;
      return NOTHING;
      };      
  }

AI_RING Effect "Elemental Command (Water)" : EA_GRANT
  { SC_EVO; SC_WEA; SC_ARC; Level: 14;
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE);
    Desc: "Legends claim that D'Salyn, the mouth of the Elder
      Elemental Eye and the one of the eldest of the 13 mage-kings,
      crafted four rings to give to his most senior warlords, each
      of which offered unearthly power in the form of near-absolute
      domination over one of the four basic elements: earth, air,
      fire and water.\n
      __The water ring was given to...\n
      __The Ring of Elemental Command (Water) carries several benefits.
      Water elementals cannot attack the wearer unless they succeed at
      a Will saving throw (DC 10 + 1/2 the wearer's level + the wearer's
      Charisma modifier). All creatures with ties to the elemental plane
      of water (including elementals who make the save) attack the ring
      bearer at a -2 penalty. The wearer gains the ability to command water
      creatures as a Water priest of 12th level, or augments their existing
      ability by +6 -- whichever is superior. The ring also grants its
      wearer the ability to breath water.\n
      __The bearer of the ring of water does suffer a minor curse among all
      the benefits, however -- suffering a -4 penalty to saving throws
      against poison.\n
      __Finally, the bearer is granted access to several staff-spells
      related to elemental fire: <9>water walking<7>, <9>part water<7>,
      <9>wall of ice<7>, <9>ice storm<7>, <9>create water<7> and 
      <9>waterspout<7>. The wearer of the ring may make use of these spells
      even if she has no spellcasting ability of her own, per the normal
      rules and restrictions of staff-spells.";
    On Event META(EVICTIM(EV_STRIKE)) {
      hObj hRing;
      if (!EActor->isMType(MA_WATER))
        return NOTHING;
      
      e.strHit += " -2 EC(Water)";
      e.vHit -= 2;
      
      if (!EActor->isMType(MA_ELEMENTAL))
        return NOTHING;
        
      if (EActor->SavingThrow(WILL, 10 + EVictim->ChallengeRating() / 2 +
            EVictim->Mod(A_CHA),SA_MAGIC|SA_SPELLS))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return ABORT;
      /* Later: Seeing an opportunity, you find yourself... */
      DPrint(e,"You find yourself unable to strike!",
               "The <EActor> hesitates.");
      return DONE;
      },
    EV_MAGIC_HIT {
      int16 clev;
      if (e.isWield && e.efNum == 0)
        {
          clev = EVictim->GetStatiMag(COMMAND_ABILITY,MA_WATER);
          EVictim->GainPermStati(COMMAND_ABILITY,EItem,SS_ITEM, MA_FIRE,
            max(10,clev+5), $"Elemental Command (Water)", e.vCasterLev);
        }
      return NOTHING;
      };
  }
and EA_GRANT
  { xval: STAFF_SPELLS;
    Lists:
      * STAFF_SPELL_LIST
          $"create water" $"water walking" $"waterspout"
          $"wall of ice" $"ice storm" $"part water";
  }
and EA_GRANT
  { xval: WATER_BREATHING; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: -4; }

/* This is really important to the balance of the Pick Pockets
   skill. We want player characters to be able to get items from
   NPCs in a variety of ways other than just murder, and we want
   murder to be sub-optimal (even ignoring alignment). This gets
   around the typical roguelike problem of inexplicably invincible
   shop-keepers, and makes Pick Pockets a truly valuable skill as
   a source of items PC's without it simply can't get. That's the
   desired behaviour. For the record, these are the obvious ways
   to get items from NPCs:
     * murder and loot -- the ring prevents this
     * paralyze and loot -- how to handle this? ring for now.
     * barter to buy -- this works, but costs gold. NPCs that don't
         want to barter can be made to barter with a really good
         Diplomacy check or a /charm person/ spell, but NPCs won't
         give away items for free when CHARMED. 
     * /dominate person/ -- high enough level to make it inaccessable
         in the early-to-mid game, and it can be made more difficult
         by giving truly powerful or wealthy shop-keepers a Ring of
         Mind Shielding. Even that can be overcome, but it makes sense
         that twinked-out Enchanters should be really good at theft,
         so this is a feature, not a bug.
   
   The "ideal" merchant's kit is something like this:
     * Ring of Item Preservation
     * Ring of Mind Shielding
     * something giving Free Action, bonus versus paralysis
     * offensive wand of weapon of some kind
     * something to boost Spot, but *not* so high that a skilled
         Rogue of a balanced level doesn't have a chance. 

   As always, Bluff can be used to cancel hostility after a failed pick
     pockets attempt, but the DC goes up drastically (+10) the second,
     third, etc. time.

   Stores in towns and cities open into seperate maps that contain a
     merchant NPC; the PC talks to him and the barter screen comes up,
     or he can try to Pick Pockets.
*/
AI_RING Effect "Item Preservation" : EA_GRANT
  { SC_ENC; SC_WEA; Level: 2; Purpose: EP_BUFF;
    xval: TRAP_EVENT; yval: POST(EVICTIM(EV_DEATH));
#if 0
    On Event META(POST(EVICTIM(EV_DEATH))) {
      if (EVictim->isDead())
        while(EVictim->FirstInv())
          {
            APrint(e,"The <EVictim>'s <hObj> vanishes!",
              EVictim->FirstInv());
            EVictim->FirstInv()->Remove(true);
          }
      return NOTHING;
      };
#endif
    Desc: "These rings are highly valued by merchants, especially
      those who sell valuable magical items. Their enchantment is
      simple -- upon the death of the wearer, or if the wearer is
      rendered unconscious or paralyzed, they transport any items 
      the wearer carries into a specially prepared extradimensional 
      space. These items can later be retrieved by the merchant guild 
      or family the merchant works for using powerful magical rituals.
      Thus, they serve as powerful deterrants to those who would
      murder merchants and shop-keepers in order to loot the goods
      from their bodies.\n
      __Powerful NPC adventurers also sometimes wear these rings as
      deterrants against theft-by-murder, and to preserve their
      items for their (hopeful) resurrection. However, they aren't as
      useful to player characters, who typically don't belong to 
      the powerful guilds that have the means to recover the items
      sequestered by the ring's magic.";
  }

  
#if 0

AI_RING Effect "Conflict" : EA_GENERIC
  { SC_ENC; rval: FI_CONFLICT; lval: 8; cval: RED; aval: AR_MFIELD; 
    Level: 7; }

AI_RING Effect "Aggravate Monster" : EA_GRANT
  { SC_ENC; xval: AGG_MON; Flags: EF_CURSED; Level: 3; }

AI_RING Effect "Sustain Strength" : EA_GRANT
  { xval: SUSTAIN; yval: A_STR; pval: 6; }

AI_RING Effect "Hold Life" : EA_GRANT
  { xval: SUSTAIN; yval: A_AID; pval: 6; }

AI_RING Effect "Spell Storing" : EA_GENERIC
  { SC_WEA; Level: PLUS_3PER1; Flags: EF_ACTIVATE, EF_NEEDS_PLUS;
    On Event EV_ACTIVATE {
      int16 i; String s;
      if (!isPlayer())
        return ABORT;
      if (!EActor->HasEffStati(-1,$"Spell Storing"))
        ETerm->LOption("Store a Spell",-2);
      for(i=0;EActor->StatiNExists(i);i++)
        if (StatiNNature(i) == GENERIC1)
          {
            s = "Cast " + NAME(StatiNeID(i));
            s += "(Caster Level " + NumPrefix(StatiNCLev(i));
            s += XPrint(", DC <Num>)", StatiNVal(i));
           ETerm->LOption(s, i);
          }

      i = EActor->LMenu("Ring of Spell Storing:");
      if (i == -1)
        return ABORT;
      if (i == -2)
        {
          EActor->GainTempStati(TRAP_EVENT,-1,SS_MISC,EItem,EV_EFFECT);
          EActor->IPrint("The next spell you cast will be stored in the ring.");
          return DONE;
        }
      e.eID = StatiNeID(i);
      e.vCasterLev = StatiNCLev(i);
      e.SaveDC = StatiNVal(i);
      return ReThrow(EV_EFFECT, e);
    },
  META(EV_EFFECT) {
    hObj hRingSS; int16 levs;
    if (e.isSpell)
      {
        hRingSS = EActor->GetEffStatiObj($"Spell Storing");
        if (!hRingSS)
          return NOTHING;
        if (hRingSS->SumStatiMag(GENERIC1) + e.eID->Level >
              abs(hRingSS->GetPlus()) * 3)
          {
            EActor->IPrint("Your <hObj> tries to absorb the spell you
              cast, but it is beyond its capacity.",EItem);
            return NOTHING;
          }

        hRingSS->GainPermStati(GENERIC1,NULL,SS_MISC,e.SaveDC,
                                 e.eID->Level,e.eID,e.vCasterLev);
        EActor->IPrint("Your <hObj> absorbs the spell you cast.",hRingSS);
        EActor->RemoveEffStati($"Spell Storing");
        return DONE;
      }
    return NOTHING;
    },
  EV_BIRTH {
    int16 levs; rID sID;
    levs = abs(EItem->GetPlus()) * 3;
    if (EActor->SumStatiMag(GENERIC1) >= levs)
      return DONE;
    do {
      sID = theGame->GetEffectID(PUR_DUNGEON,1,levs,
              AI_WIZARDRY|AI_DRUIDIC|AI_THEURGY);
      if (!sID) {
        Error("Cannot find spell for Ring of Spell Storing!");
        return DONE;
        }
      levs -= sID->Level;
      EActor->GainPermStati(GENERIC1,NULL,SS_MISC,
                              12 + sID->Level + random(7), sID->Level,
                              sID, sID->Level*2 + random(5) );
      }
    while (levs > 0);
    return DONE;
    },
  EV_DIP {
    if (GetHandle(EItem) && EItem->ieID == $"Spell Storing")
      if (GetHandle(ETarget) && ETarget->isFeature() && ETarget->fID == $"fountain")
        {
          if (!EItem->isKnown(KN_MAGIC))
            return NOTHING;
          DPrint(e, "You dip the <EItem> in the fountain.",
                    "The <EActor> dips <his:EActor> <EItem> in the fountain.");
          if (ETarget->GetStatiMag(GENERIC1))
            {
              APrint("The <EItem> glows violet!");
              Throw(EV_BIRTH,EItem,EItem,EItem);
              return DONE;
            }
          APrint("Nothing happens.");
          return DONE;
        }
    return NOTHING;
    };
  Desc: "This ring stores 3 levels of spells within itself per magical
    plus it possesses. Spells can be placed in the ring by activating
    it, then casting the spell, and these spell effects can then later
    be called upon by again activating the ring.";
  }

#endif

/************************************************************************\
 *                                AMULETS                               *
\************************************************************************/

AI_AMULET Effect "Natural Armour" : EA_GRANT
  { xval: ADJUST_NAT; yval: A_ARM; pval: PLUS_2PER1; 
    Flags: EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This amulet grants its wearer a natural armour rating of
      twice its magical plus against slashing, piercing and blunt
      damage."; }

AI_AMULET Effect "Strangulation" : EA_GRANT
  { SC_ARC; xval: TRAP_EVENT; yval: EV_TURN; tval: MA_LIVING;
    Flags: EF_CURSED, EF_AUTOID; Level: 0;
    On Event META(EV_TURN) {
      ThrowDmg(EV_DAMAGE,AD_NORM,1d8,"strangulation",EActor,EActor);
      return NOTHING;
      };
    On Event EV_MAGIC_STRIKE
      "The amulet's cord tightens around your neck!" /
      "The amulet's cord tightens around the <EVictim>'s neck!";
    Desc: "This twisted amulet begins to strangle its wearer as soon
      as it is put on, inflicting 1d8 points of damage per turn until
      it is removed.";
  }

AI_AMULET Effect "Radiance" : EA_GENERIC
  { SC_EVO; Flags: EF_AUTOID | EF_NEEDS_PLUS; 
    lval: PLUS_ADD5; 
    Level: PLUS_ADD3;
    aval: AR_MFIELD; rval: FI_LIGHT; cval: YELLOW; 
    On Event EV_MAGIC_STRIKE
      "The amulet emits a great radiance!" /
      "The <EActor>'s amulet emits a great radiance!"; 
    Desc: "This amulet emits a brilliant aura of golden light, illuminating
      an area 50 feet (5 squares) in radius around its wearer, plus 10 feet
      (1 square) per magical plus."; }

AI_AMULET Effect "Life Protection" : EA_GRANT
  { xval: RESIST; yval: AD_NECR; pval: PLUS_4PER1; Flags: EF_NEEDS_PLUS; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_DEATH; pval: PLUS_2PER1; Level: PLUS_2PER1;
    Desc: "This item shields its wearer from negative energy, granting
      four levels of necromantic damage resistance and a +2 bonus to save
      versus death effects per magical plus it is imbued with."; }

AI_AMULET Effect "Amulet versus Undead" : EA_GRANT
  { xval: TURN_ABILITY; yval: MA_UNDEAD; pval: PLUS_2PER1; 
    On Event EV_MAGIC_HIT {
      e.vDmg = max(e.vDmg,EActor->HighStatiMag(
        TURN_ABILITY,MA_UNDEAD) + EItem->GetPlus());
      };
      // ww: currently you need your holy symbol to turn undead, so
      // the add condition (which doesn't look like it will work anyway)
      // doesn't happen
    Desc: "This sacred amulet grants you the power to turn undead
      as a priest of a level equal to twice its plus, or adds its
      plus to your existing priest level for turning purposes --
      whichever grants a greater benefit.";
    Level: PLUS_2PER1_ADD3;	Flags: EF_NAMEONLY;
  }

AI_AMULET Effect "Periapt of Wound Closure" : EA_GRANT
  { xval: TRAP_EVENT; yval: POST(EV_REST); 
    On Event META(POST(EV_REST)) {
      EActor->cHP = EActor->mHP + EActor->GetAttr(A_THP);
      return NOTHING;
      },
    META(POST(EVICTIM(EV_HIT))) {
      EVictim->RemoveStati(BLEEDING); 
      return NOTHING;
      };
    Desc: "This powerful item stops bleeding, removes infections and
      speeds healing, such that all of your wounds heal fully over
      the course of a single night's rest.";
    Level: 6; Flags: EF_NAMEONLY;
  }
and EA_GRANT
  { xval: TRAP_EVENT; yval: EVICTIM(POST(EV_HIT)); }

AI_AMULET Effect "Medallion of ESP" : EA_GRANT
  { SC_DIV; xval: EXTRA_ABILITY; yval: CA_TELEPATHY; pval: 3d1+PLUS_3PER1; 
    Level: PLUS_ADD3; Flags: EF_NAMEONLY | EF_NEEDS_PLUS; 
    Desc: "This amulet grants its wearer telepathic awareness, gifting
      her with the ability to sense all creatures with minds within
      30 feet (3 squares), plus 30 feet per magic plus, of her."; }

AI_AMULET Effect "Medallion of Mental Domination" : EA_INFLICT
  { xval: CHARMED; yval: CH_DOMINATE; sval: WILL; qval: Q_TAR;
    Flags: EF_NEEDS_PLUS, EF_ACTIVATE, EF_BLIND_PROMPT,
	  EF_NAMEONLY, EF_DLONG, EF_CASTER_IMMUNE, EF_7PERDAY; 
	  Level: PLUS_2PER1_ADD5;
    On Event EV_ISTARGET {
      if (!EVictim->isCreature())
        return -1;
      if (!EVictim->isMType(MA_LIVING))
        return -1;
	  if (EVictim->isPlayer())
	    return -1;
      return 1;
      },
	EV_MAGIC_STRIKE {
      if (EVictim->ChallengeRating() > EItem->GetPlus()*2)
        {
		  e.Immune = true;
		  return DONE;
		}
	  return NOTHING;
	  };
    Desc: "This amulet allows its owner to psychically control creatures
      of challenge ratings equal to twice its bonus, provided they fail
      a Will saving throw.";
	On Event EV_MAGIC_HIT
	  "You sieze control of the <EVictim>'s mind!" /
	  "The <EActor> siezes control of your mind!" / "",
	EV_ELAPSED
	  "You shake off the effect of the domination." /
	  "The <EActor> shakes off the effect of the domination.";

  }

AI_AMULET Effect "Periapt of Health" : EA_GRANT
  { xval: IMMUNITY; yval: AD_DISE; Level: 5;
    Desc: "This polished ivory periapt renders its wearer completely
      immune to diseases of all types."; Flags: EF_NAMEONLY; }

/************************************************************************\
 *                                GIRDLES                               *
\************************************************************************/

/* Each "racial" girdle gives:
 *
 * 1 cool ability (stonework sense, evasion, scent, arcane will, ...)
 * 1 immunity or resistance (e.g., poison, fatigue regen)
 * 2 points of attribute bonuses
 */


AI_GIRDLE Effect "Dwarvenkind" : EA_GRANT
  { xval: SKILL_BONUS; yval: SK_MINING; pval: PLUS_2PER1; }
and EA_GRANT
  { SC_ENC; xval: EXTRA_ABILITY; yval: CA_STONEWORK_SENSE; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_CON; pval: PLUS_2PER1; 
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This sturdy item conveys or augments many of the inborn talents
    of the dwarven people to the wearer: a sense for stonework, skill with
    mining and a superior bodily constitution."; }

AI_RING Effect "the Kobolds" : EA_GRANT
  { SC_ENC; xval: EXTRA_ABILITY; yval: CA_EVASION; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_INT; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: PLUS_1PER1; 
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This twisty ring conveys or augments many of the inborn talents
    of the kobold race to the wearer: evasion, a bonus to save vs. poison 
    and a crafty, slippery nature."; }

AI_RING Effect "the Gnomes" : EA_GRANT
  { xval: SKILL_BONUS; yval: SK_USE_MAGIC; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_MINING; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_INT; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: EXTRA_ABILITY; yval: CA_SCENT; pval: PLUS_1PER1; 
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This tinkered item conveys or augments many of the inborn talents
    of the gnomish race to the wearer: an eager mind, a sensitive nose and
    a knack for mining and magical devices."; } 

AI_RING Effect "Elvenkind;ring" : EA_GRANT
  { SC_ENC; xval: EXTRA_ABILITY; yval: CA_SHARP_SENSES; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_WIS; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: IMMUNITY; yval: AD_SLEE; pval: PLUS_1PER1; }
and EA_GRANT 
  { xval: EXTRA_ABILITY; yval: CA_REVERIE; // ww: otherwise you can't sleep
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This graceful item conveys or augments many of the inborn talents
    of the elven people to the wearer: grace and foresight, probing eyes
    and an immunity to sleep magics." ; } 

AI_EYES Effect "Drow Kinship" : EA_GRANT
  { xval: ADJUST; yval: A_MR; pval: PLUS_5PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_INT; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: EXTRA_ABILITY; yval: CA_INFRAVISION; pval: PLUS_2PER1; 
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This graceful set of lenses conveys or augments many of the inborn talents
    of the drow people to the wearer: grace and cunning, a resistance to
    magic and unparalled infravision." ; } 

AI_CLOAK Effect "the Hin" : EA_GRANT
  { xval: SKILL_BONUS; yval: SK_TUMBLE; pval: PLUS_2PER1; }
and EA_GRANT
  { SC_ENC; xval: EXTRA_ABILITY; yval: CA_STRONG_SOUL; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_DEX; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_LUC; pval: PLUS_1PER1; 
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This comfortable item conveys or augments many of the inborn
    talents of the halflings to the wearer: agility, luck and a resistance 
    to ability damage." ; } 

AI_GIRDLE Effect "the Lizardfolk" : EA_GRANT
  { SC_ENC; xval: EXTRA_ABILITY; yval: CA_ANCESTRAL_MEMORY; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_STR; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_CON; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: RESIST; yval: AD_FIRE; pval: PLUS_5PER1; 
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This scaled belt conveys or augments many of the inborn talents
    of the lizardfolk to the wearer: a racial memory, resistance
    to fire and a bit of power and endurance."; } 

AI_HELM Effect "Orcsblood" : EA_GRANT
  { xval: ADJUST; yval: A_STR; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_WIS; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_TOUGHNESS; 
    Flags: EF_AUTOID | EF_NEEDS_PLUS; Level: PLUS_3PER1; 
    Desc: "This ugly item conveys or augments many of the inborn talents
    of the orcish race to the wearer: superior strength, additional willpower
    and legendary Toughness."; }

AI_GIRDLE Effect "Fortification" : EA_GRANT
  { SC_THA; xval: EXTRA_FEAT; yval: FT_HARDINESS; Level: 2; }
and EA_GRANT
  { xval: EXTRA_ABILITY; yval: CA_FATIGUE_REGEN; pval: +1; }
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_GREAT_FORTITUDE; 
    Desc: "This potent belt augments your resistance to fatigue and
    poisons: while it is worn you enjoy the benefits of the Hardiness and
    Great Fortitude feats as well as a bit of fatigue regeneration."; } 

/************************************************************************\
 *                                CLOAKS                                *
\************************************************************************/

/* 2 new cloaks:

   "anti-vermin" (named for dwarf? Usgau?)
   -- Acid Resistance 15
   -- Close-Quarters Fighting
   -- Invis. to Vermin, 3/dau
   
   Cloak of the Wayfarer
   -- Fire Resistance 7
   -- Cold Resistance 7
   -- +25% Movement Rate
   -- +4 fatigue
   -- +2 enhancement to Luck
   
*/


AI_CLOAK Effect "Quietus" : EA_GENERIC
  { // 40' silence should be as powerful as 4 points of strength
    SC_ARC; Flags: EF_AUTOID | EF_NEEDS_PLUS; 
    lval: PLUS_1PER1; Level: PLUS_ADD3; 
    aval: AR_MFIELD; rval: FI_SILENCE; 
    Purpose: EP_STEALTH; Flags: EF_HALF_CURSED;
    Desc: "This item creates a field of supernatural silence. Inside the
    field spellcasters cannot produce verbal components for spells, items
    cannot be activated, attacks and actions do not make noise, and Listen
    checks always fail. The field extends out 10 feet (1 square) per
    magical plus."; 
  } 

AI_CLOAK Effect "Displacement;cloak" : EA_GRANT
  { SC_ILL; xval: MISS_CHANCE; yval: MISS_FULL; pval: 50;
    Flags: EF_AUTOID; Level: 5; On Event EV_MAGIC_STRIKE
      "Your image shifts two feet away from your location." /
      "The <EActor>'s image shifts two feet.",
    EV_REMOVED
      "Your image shifts back to your true position." /
      "The <EActor>'s image shifts two feet.";
		Desc: "This cloak creates a clever illusion causing the wearer
		  to appear about two feet distant from where he actually is,
			giving attacks against him a 50~ miss chance.";
 }

AI_CLOAK Effect "Resistance" : EA_GRANT
  { SC_ENC; xval: ADJUST; yval: A_SAV; pval: PLUS_1PER1;
    Flags: EF_NEEDS_PLUS; Level: PLUS_3PER1;
    Desc: "This cloak wards away harm, giving the wearer a resistance
            bonus to all his saving throws equal to its magical bonus."; }

AI_CLOAK Effect "Shadow Shifting" : EA_TRAVEL
  { SC_WEA; pval: 2d12+12; Purpose: EP_ESCAPE; 
    xval: TRAVEL_ANYWHERE; Flags: EF_ACTIVATE, EF_7PERDAY; Level: 4;
	/* TODO: Limit to darkened areas. */
	On Event EV_MAGIC_STRIKE
	  "You merge with the shadows, moving without walking." /
	  "The <EActor> vanishes in a puff of shadow.";
	Desc: "This cloak allows the wearer to step into one shadow and out
	  of another when it is activated, teleporting around at will in
		darkened areas."; }

AI_CLOAK Effect "the Bat" : EA_GRANT
  { SC_ILL; xval: SKILL_BONUS; yval: SK_LISTEN; pval: PLUS_1PER1; }
and EA_POLYMORPH
  { SC_THA; rval: $"bat"; xval: 1; Flags: EF_ACTIVATE2, EF_CANCEL; }
and EA_GRANT 
  { xval: ADJUST_DEFL; yval: A_DEF; pval: PLUS_1PER1; }
and EA_GRANT 
  { xval: EXTRA_ABILITY; yval: CA_BLINDSIGHT; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: NEUTRAL_TO; yval: MA_BAT; 
    Level: PLUS_3PER1;  Flags: EF_NEEDS_PLUS; 
    Desc: "This powerful item conveys a number of abilities associated
            with bats: a +1 Listen skill bonus and +1 deflection bonus
            to defense per magical plus, as well as Blindsight out to 10
            feet (1 square) per magical plus. The wearer can polymorph into
            a bat and bats are neutral to the wearer."; } 


AI_CLOAK Effect "Arachnida" : EA_TERRAFORM
  { SC_ARC; aval: AR_BALL; Flags: EF_ACTIVATE; lval: 2;
    xval: TERRA_FLOOR; rval: $"webbing"; qval: Q_LOC|Q_TAR|Q_DIR;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: +4; }
and EA_GRANT
  { xval: SPECIES_AFFINITY; yval: MA_SPIDER; pval: +10; }
and EA_GRANT  { xval: NEUTRAL_TO; yval: MA_SPIDER; }
and EA_GRANT { xval: IMMUNITY; yval: AD_STUK; } 
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_CLIMB; pval: +10; 
    Level: 6; 
    Desc: "This spider-silk cloak has a number of functions. It conveys an
        empathic affinity for arachnids similar to a gnome's affinity for
        burrowing mammals, and conjures a mass of sticky webbing to entrap
        foes when activated. It also conveys a +4 bonus to saving throws
        versus poison, a +10 competance bonus to the Climb skill, and prevents
        the wearer from becoming stuck in webs and weblike effects."; }

AI_CLOAK Effect "Elvenkind;cloak" : EA_GRANT
  { SC_ILL; xval: SKILL_BONUS; yval: SK_HIDE;
    pval: PLUS_3PER1; Flags: EF_NEEDS_PLUS; 
    Flags: WT_RACIAL; 
    Level: PLUS_2PER1; 
		Desc: "This cloak enhances the ability of a wearer to conceal
		  their presence, granting a bonus to his Hide skill equal to 
			thrice its magical plus."; }

AI_CLOAK Effect "Mantle of Magic Resistance" : EA_GRANT
  { SC_WEA; xval: ADJUST; yval: A_MR; pval: PLUS_15PER1; 
    Level: PLUS_3PER1_ADD2;
    Flags: EF_NEEDS_PLUS, EF_NAMEONLY;
    Desc: "This powerful garment imbues its wearer with a 
      Magic Resistance bonus equal to fifteen times is magical plus."; }

AI_CLOAK Effect "Frostbite" : EA_GRANT
  { SC_ENC; xval: TRAP_EVENT; yval: EVICTIM(EV_DAMAGE);
    Flags: EF_CURSED; Level: 0;
    On Event EVICTIM(EV_DAMAGE) {
      if (e.DType == AD_COLD)
        e.vDmg = (e.vDmg * 150) / 100;
      return NOTHING;
      };
		Desc: "This accursed cloak increases the damage its wearer
		  suffers from cold by 50~.";
  }

AI_CLOAK Effect "Fireburn" : EA_GRANT
  { SC_ENC; xval: TRAP_EVENT; yval: EVICTIM(EV_DAMAGE);
    Flags: EF_CURSED; Level: 0;
    On Event EVICTIM(EV_DAMAGE) {
      if (e.DType == AD_FIRE)
        e.vDmg = (e.vDmg * 125) / 100;
      return NOTHING;
      };
		Desc: "This accursed cloak increases the damage its wearer
		  suffers from fire by 25~.";
  }

AI_CLOAK Effect "Mana Bleeding" : EA_GRANT
  { SC_ENC; xval: TRAP_EVENT; yval: EV_REST;
    Flags: EF_CURSED; Level: 7;
    On Event META(EV_REST) {
      e.EParam |= REST_NOMANA;
      return NOTHING;
      };
		Desc: "This twisted cloak weakens its bearer's link to the supernatural
		  tapestry of creation, causing her not to recover mana when resting the
			way that she normally would.";
  }

/************************************************************************\
 *                                 HELMS                                *
\************************************************************************/

AI_HELM Effect "Telepathy" : EA_GRANT
  { SC_DIV; xval: EXTRA_ABILITY; yval: CA_TELEPATHY; pval: PLUS_ADD5; 
    Level: PLUS_2PER1_ADD1; Flags: EF_NEEDS_PLUS; 
    Desc: "This helm conveys telepathic awareness when worn, causing the
        wearer to sense the presence of all minds within 60 feet of him."; 
        }

AI_HELM Effect "Teleportation" : EA_TRAVEL
  { SC_WEA; pval: 2d12+12; xval: TRAVEL_KNOWN;
    Flags: EF_ACTIVATE, EF_7PERDAY; Level: 7; 
Desc: "This helm can be activated to teleport the wearer randomly
        with a range of 2d12+12 squares, seven times per day."; }
    
   
AI_HELM Effect "Comprehending Languages and Reading Magic" : EA_GRANT
  { SC_ENC; xval: SKILL_BONUS; yval: SK_DECIPHER; pval: 10; Level: 3;
	  Desc: "This helm grants the wearer a +10 competance bonus to his
		  Decipher Script skill rating."; }

AI_HELM Effect "Lesser Helm of Brilliance" : EA_GENERIC
  { SC_EVO; Flags: EF_ACTIVATE, EF_NAMEONLY; Level: 8;
    On Event EV_GETNAME {
      if (EActor->isType(T_ITEM))
        if (EActor->isKnown(KN_MAGIC))
          {
            e.nAppend = " (";

            if (EActor->GetStatiMag(COUNTER,1) == 1)
              e.nAppend += "1 topaz, ";
            else if (EActor->GetStatiMag(COUNTER,1) > 1)
              e.nAppend += Format("%d topazes, ",
                EActor->GetStatiMag(COUNTER,1));

            if (EActor->GetStatiMag(COUNTER,2) == 1)
              e.nAppend += "1 ruby, ";
            else if (EActor->GetStatiMag(COUNTER,2) > 1)
              e.nAppend += Format("%d rubies, ",
                EActor->GetStatiMag(COUNTER,2));

            if (EActor->GetStatiMag(COUNTER,3) == 1)
              e.nAppend += "1 fire opal, ";
            else if (EActor->GetStatiMag(COUNTER,3) > 1)
              e.nAppend += Format("%d fire opals, ",
                EActor->GetStatiMag(COUNTER,3));

            if (EActor->GetStatiMag(COUNTER,4) == 1)
              e.nAppend += "1 diamond, ";
            else if (EActor->GetStatiMag(COUNTER,4) > 1)
              e.nAppend += Format("%d diamonds, ",
                EActor->GetStatiMag(COUNTER,4));

            if (e.nAppend.GetLength() <= 2)
              e.nAppend += "no gems remaining)";
            else
              e.nAppend = Left(e.nAppend, e.nAppend.GetLength() - 2) + ")";
          }
      return NOTHING;
    },
  EV_EFFECT {
    bool found; int16 choice; rID neID;
    if (!EItem->HasStati(COUNTER))
      {
        EActor->IPrint("There are no gems left to throw.");        
        return ABORT;
      }
    if (!EActor->isPlayer())
      return ABORT;
    if (EItem->GetStatiMag(COUNTER,1))
      { found = true;
        ETerm->LOption(XPrint("Throw topaz (<9>call light<7>)"),1); }
    if (EItem->GetStatiMag(COUNTER,2))
      { found = true;
        ETerm->LOption(XPrint("Throw ruby (<9>fireball<7>)"),2); }
    if (EItem->GetStatiMag(COUNTER,3))
      { found = true;
        ETerm->LOption(XPrint("Throw fire opal (<9>colour burst<7>)"),3); }
    if (EItem->GetStatiMag(COUNTER,4))
      { found = true;
        ETerm->LOption(XPrint("Throw diamond (<9>searing light<7>)"),4); }
    choice = ETerm->LMenu(0,"Helm of Brilliance");
    switch (choice)
      {
        case -1:
          return ABORT;
        case 1:
          neID = $"call light";
         break;
        case 2:
          neID = $"fireball";
         break;
        case 3:
          neID = $"colour burst";
         break;
        case 4:
          neID = $"searing light";
         break;
      }
    e.eID = neID;
    if (!ETerm->EffectPrompt(e,Q_LOC|Q_TAR,false,"Choose a target:"))
      return ABORT;
    RedirectEff(e,neID);
    if (EItem->GetStatiMag(COUNTER,choice) == 1)
      EItem->RemoveStati(COUNTER,choice);
    else
      EItem->SetStatiMag(COUNTER,choice,NULL,
        EItem->GetStatiMag(COUNTER,choice) - 1 );
    return DONE;
    },
  EV_BIRTH {
    ETarget->GainPermStati(COUNTER,NULL,SS_MISC,1,40+random(10));
    ETarget->GainPermStati(COUNTER,NULL,SS_MISC,2,10+random(5));
    ETarget->GainPermStati(COUNTER,NULL,SS_MISC,3,10+random(5));
    ETarget->GainPermStati(COUNTER,NULL,SS_MISC,4,20+random(10));
    return NOTHING;
    };
  }


AI_HEADBAND Effect "Circlet of Blasting" : EA_BLAST
  { SC_EVO; qval: Q_DIR|Q_TAR; Level: PLUS_3PER1;	cval: YELLOW;
    xval: AD_SUNL; pval: 5d8; tval: MA_LIVING;
    Flags: EF_ATTACK, EF_LIM_MTYPE, EF_ACTIVATE, EF_ACTIVATE2,
      EF_ACTIVATE3, EF_NAMEONLY, EF_7PERDAY; aval: AR_BEAM; }
and EA_BLAST
  { xval: AD_SUNL; pval: 10d6; tval: MA_UNDEAD;
    aval: AR_BEAM; }
and EA_BLAST
  { xval: AD_SUNL; pval: 5d6; tval: MA_CONSTRUCT;
    aval: AR_BEAM; 
    Desc: "The circlet of blasting projects a destructive beam of
        radiance when activated that inflicts 10d6 damage to undead,
      5d6 damage to constructs and 5d8 damage to everything else."; }

AI_HEADBAND Effect "Tactical Combat" : EA_GRANT 
  { SC_THA; xval: EXTRA_FEAT; yval: FT_EXPERTISE; Level: 3; 
    Desc: "This headband grants you a superior insight into tactical
    combat. You enjoy the benefits of the Expertise, Tactical Withdrawl
    and Expert Tactician feats while it is worn."; 
  } and EA_GRANT { xval: EXTRA_FEAT; yval: FT_TACTICAL_WITHDRAWL; } 
    and EA_GRANT { xval: EXTRA_FEAT; yval: FT_EXPERT_TACTICIAN; } 


AI_HEADBAND Effect "Crown of the Magi" : EA_GRANT
  { SC_WEA; xval: ADJUST; yval: A_MAG; pval: PLUS_1PER1; 
    Flags: EF_NAMEONLY, EF_NEEDS_PLUS; Level: PLUS_2PER1; 
    Desc: "This powerful crown increases the chance of spellcasting
        success by +5~ for every magical plus that it possesses."; }

AI_HEADBAND Effect "Circlet of Spellbreaking" : EA_GRANT
  { SC_ABJ; xval: SAVE_BONUS; yval: SN_SPELLS; 
    pval: PLUS_1PER1; Flags: EF_NAMEONLY, EF_NEEDS_PLUS; 
    Level: PLUS_2PER1;
    Desc: "This empowered headband grants a bonus to saving throws
            against all spells equal to its own magical bonus."; }

AI_HEADBAND Effect "Cowl of Warding" : EA_GRANT
  { SC_ABJ; xval: IMMUNITY; yval: AD_MIND; Level: PLUS_3PER1_ADD7; 
    Flags: EF_NAMEONLY | EF_NEEDS_PLUS; }
and EA_GRANT
  { xval: IMMUNITY; yval: AD_PLYS; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_SPELLS; pval: PLUS_ADD3; }
and EA_GRANT
  { xval: ADJUST_LUCK; yval: A_ARM; pval: PLUS_ADD5; }
and EA_GRANT
  { xval: IMMUNITY; yval: AD_NECR;
    Desc: "This powerful defensive garment conveys five distinct protective
      effects: immunity to mind magic, charms, paralysis, a +4 bonus
            to save versus spells, a +6 luck bonus to armour and immunity to
            life draining and necromantic damage."; }

/************************************************************************\
 *                                 RODS                                 *
\************************************************************************/

AI_ROD Effect "the Python" : EA_GRANT
  { SC_ABJ; SC_THA; Level: PLUS_3PER1; Flags: EF_NEEDS_PLUS;
    xval: SAVE_BONUS; yval: SN_POISON; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_CON; pval: PLUS_1PER1; }
and EA_GENERIC
  { Flags: EF_ACTIVATE2, EF_3PERDAY, EF_DLONG; qval: Q_LOC;
    On Event EV_MAGIC_HIT {
      hObj hPython; 
      if (e.isActivation)
        {
          EMap->thEnGenMonSummXY($"exact monster", $"boa constrictor", 
            EN_SINGLE, 36, 0, EActor, e.EXVal, e.EYVal);
          hPython = EMap->GetEncounterCreature(0);
          switch (EItem->GetPlus())
            {
              case 1:
               break;
              case 2:
                hPython->AddTemplate($"Companion;2");
               break;
              case 3:
                hPython->AddTemplate($"Companion;4");
               break;
              case 4:
                hPython->AddTemplate($"Companion;6");
               break;
              case 5:
                hPython->AddTemplate($"Companion;8");
               break;
            }
          hPython->GainTempStati(TRANSFORMED,EItem,e.vDuration,
            SS_ENCH,0,0,$"the Python",e.vCasterLev);          
          EItem->Remove(false);
          /* Avoid "You Rod of the Python transforms into a mighty python!" */
          if (!EItem->isKnown(KN_MAGIC))
            DPrint(e, "Your <EItem> transforms into a mighty python!",
                      "The <EActor>'s <EItem> transforms into a mighty python!");
          else
            DPrint(e, "Your rod transforms into a mighty python!",
                      "The <EActor>'s rod transforms into a mighty python!");
          EActor->IdentByTrial(EItem);
          return DONE;
        }
      return NOTHING;
    };
  }

AI_ROD Effect "Rod of Lordly Might" : EA_GENERIC
  {
    Level: 7; Flags: EF_GOOD, EF_ACTIVATE, EF_NAMEONLY, EF_HIDEQUAL;
    On Event EV_MAGIC_HIT {
      int16 choice; hObj hDoor, hHorse;
      if (EActor->isPlayer())
        {
          if (EItem->GetEffStatiMag(COUNTER,$"Rod of Lordly Might") < 3)
            {
              ETerm->LOption("Use paralyzing touch attack",1,
                "This spell-like function of the rod grants the wielder a
                   touch attack -- by lightly touching a victim with the
                   tip of the rod, the bearer can cause them to be paralyzed.
                   A Fortitude save (DC 12 + twice the wielder's Charisma
                   modifier) negates the effect. Once active, this effect
                   lasts for three touches. The three spell-like functions
                   of the rod can be used three times a day in total, in
                   any combination.");
              ETerm->LOption("Invoke fear in all who see the rod",2,
                "This spell-like function of the rod causes all creatures
                   within 80 feet of the wielder who can see the rod to be
                   overwhelmed with fear as he holds it in the air defiantly.
                   A Will save (DC 12 + twice the wielder's Charisma modifier)
                   negates the effect. The three spell-like functions
                   of the rod can be used three times a day in total, in
                   any combination.");
              ETerm->LOption("Use life transfer touch attack", 3,
                "This spell-like function of the rod grants the bearer a
                   touch attack using the rod which drains 3d6 hit points
                   from the victim and transfers any successfully drained
                   (some creatures resist necromantic damage) to the bearer,
                   healing him up to his normal maximum. A Fortitude save 
                   (DC 12 + twice the wielder's Charisma modifier) negates 
                   the effect. Once active, this effect lasts for seven 
                   touches. The three spell-like functions of the rod can 
                   be used three times a day in total, in any combination.");
            }
          if (EItem->iID != $"rod")
            ETerm->LOption("Change back into a plain rod", 4,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can change it back into its natural form as a
                 magical rod.");
          if (EItem->iID != $"light mace")
            ETerm->LOption(XPrint("Change into a <15>+2 light mace<7>"), 5,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can change it into the form selected.");
          if (EItem->iID != $"long sword")
            ETerm->LOption(XPrint("Change into a <15>+1 flaming long sword<7>"),6,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can change it into the form selected.");
          if (EItem->iID != $"battleaxe")
            ETerm->LOption(XPrint("Change into a <15>+4 battleaxe<7>"),7,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can change it into the form selected.");
          if (EItem->iID != $"shortspear")
            ETerm->LOption(XPrint("Change into a <15>+3 shortspear<7>"), 8,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can change it into the form selected.");
          if (EItem->iID != $"longspear")
            ETerm->LOption(XPrint("Change into a <15>+3 longspear<7>"), 9,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can change it into the form selected.");
          ETerm->LOption("Change into a climbing pole", 10,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can change it into a magical climbing pole
                 that grants a +10 circumstance bonus to climb checks when
                 wielded.");
          ETerm->LOption("Use the rod to force a door", 11,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can cause it to extend in the form a a powerful
                 telescoping rod, using the leverage and force this provides to
                 force open a door.");
          ETerm->LOption("Change into a light warhorse", 12,
              "By pressing one of the buttons carefully concealed in the rod's 
                 hilt, the bearer can cause it to magically change into a fully
                 healthy warhorse ready to be ridden (or a warpony, for a Small
                 bearer).");
          choice = ETerm->LMenu(MENU_BORDER|MENU_ESC|MENU_DESC, 
                      "Rod of Lordly Might",WIN_MENUBOX);
          if (choice == -1)
            {
              EActor->Timeout = 0;
              return ABORT;
            }
        }
      else
        {
          /* Fix for the monster AI later */
          EActor->Timeout = 0;
          return ABORT;
        }
      
      if (choice == 1 || choice == 2 || choice == 3)
        EItem->IncEffStatiMag(COUNTER,$"Rod of Lordly Might",SS_MISC,NULL,1);
      
      switch (choice)
        {
          case 1:
            EActor->RemoveStati(TOUCH_ATTACK);
            EActor->GainTempStati(TOUCH_ATTACK,EItem,30,SS_ENCH,
                      0,7,$"paralysis;RoLM",e.vCasterLev);
            EActor->Timeout = 0;
           break;
          case 2:
            e.eID = $"fear;RoLM";
            ReThrow(EV_EFFECT,e);
            e.eID = $"Rod of Lordly Might";
           break;
          case 3:
            EActor->RemoveStati(TOUCH_ATTACK);
            EActor->GainTempStati(TOUCH_ATTACK,EItem,30,SS_ENCH,
                      0,7,$"life drain;RoLM",e.vCasterLev);
            EActor->Timeout = 0;
           break;      
          case 4:
            EActor->RemoveEffStati($"climbing pole;RoLM");
            EItem->ChangeIID($"rod");
            EItem->PurgeAllQualities();
            EItem->SetInherentPlus(1);
            EActor->CalcValues();
           break;
          case 5:
            EActor->RemoveEffStati($"climbing pole;RoLM");
            EItem->ChangeIID($"light mace");
            EItem->PurgeAllQualities();
            EItem->SetInherentPlus(2);
            EActor->CalcValues();
           break;
          case 6:
            EActor->RemoveEffStati($"climbing pole;RoLM");
            EItem->ChangeIID($"long sword");
            EItem->PurgeAllQualities();
            EItem->AddQuality(WQ_FLAMING);
            EItem->SetInherentPlus(2);
            EActor->CalcValues();
           break;
          case 7:
            EActor->RemoveEffStati($"climbing pole;RoLM");
            EItem->ChangeIID($"battleaxe");
            EItem->PurgeAllQualities();
            EItem->SetInherentPlus(4);
            EActor->CalcValues();
           break;
          case 8:
            EActor->RemoveEffStati($"climbing pole;RoLM");
            EItem->ChangeIID($"shortspear");
            EItem->PurgeAllQualities();
            EItem->SetInherentPlus(3);
            EActor->CalcValues();
           break;          
          case 9:
            EActor->RemoveEffStati($"climbing pole;RoLM");
            EItem->ChangeIID($"longspear");
            EItem->PurgeAllQualities();
            EItem->SetInherentPlus(3);
            EActor->CalcValues();
           break;                
          case 10:
            EItem->ChangeIID($"climbing pole;RoLM");
            EItem->PurgeAllQualities();
            EItem->SetInherentPlus(0);
            EActor->GainPermStati(SKILL_BONUS,EItem,SS_MISC,SK_CLIMB,10,
               $"climbing pole;RoLM",12);           
            EActor->CalcValues();
           break;                
          case 11:
            ETerm->EffectPrompt(e,Q_DIR,false,"Select a door:");
            hDoor = EMap->FDoorAt(EActor->x+DirX(e.EDir),EActor->y+DirY(e.EDir));
            if (hDoor == NULL)
              {
                EActor->IPrint("There's no door to force there.");
                EActor->Timeout = 0;
                return ABORT;
              }
            ThrowDmg(EV_DAMAGE,AD_BLUNT,12d6,"a Rod of Lordly Might",
                       EActor, hDoor, EItem);
           break;
          case 12:
            EMap->thEnGenMonSummXY($"exact monster", 
              EActor->isSmallRace() ? $"warpony" : $"warhorse", 
              EN_CREATOR|EN_SINGLE, 36, 0, EActor, e.EXVal, e.EYVal);
            hHorse = EMap->GetEncounterCreature(0);
            hHorse->GainTempStati(TRANSFORMED,EItem,e.vDuration*10,
              SS_ENCH,0,0,$"Rod of Lordly Might",e.vCasterLev);          
            EItem->Remove(false);
            DPrint(e, "Your rod transforms into a noble steed!",
                      "The <EActor>'s rod transforms into a noble steed!");
            EActor->IdentByTrial(EItem);
           break; 
        }
      return DONE;
      },
    EV_REST {
      EItem->RemoveStati(COUNTER);
      return NOTHING;
      },
    EV_BIRTH {
      EItem->ChangeIID($"rod");
      return DONE;
      },
    EV_GETNAME {
      switch (EItem->iID)
        {
          case $"light mace":
            e.nBase += " [+2 light mace]";
            e.nPlus = "";
           break;
          case $"long sword":
            e.nBase += " [+1 flaming long sword]";
            e.nPlus = "";
           break;
          case $"battleaxe":
            e.nBase += " [+4 battleaxe]";
            e.nPlus = "";
           break;
          case $"longspear":
            e.nBase += " [+3 longspear]";
            e.nPlus = "";
           break;             
          case $"shortspear":
            e.nBase += " [+3 shortspear]";
            e.nPlus = "";
           break;            
          default:
            e.nPlus = "";
           break; 
        }
      };
    Constants:
      * INITIAL_PLUS +1, 
      * BASE_ITEM $"light mace";
  }
  
NOTHING Effect "paralysis;RoLM" : EA_INFLICT
  { SC_THA; aval: AR_TOUCH; sval: FORT; Flags: EF_NAMEONLY, EF_NOGEN;
    xval: PARALYSIS; yval: PARA_HELD;
    On Event EV_CALC_EFFECT {
      e.saveDC = 12 + EActor->Mod(A_CHA) * 2;
      };
  }

Effect "life drain;RoLM" : EA_BLAST
  { SC_NEC; aval: AR_TOUCH; sval: FORT; Flags: EF_NAMEONLY, EF_NOGEN;
    xval: AD_NECR; pval: 3d6;
    On Event EV_MAGIC_HIT {
      EActor->cHP = min(EActor->mHP+EActor->GetAttr(A_THP),EActor->cHP + e.vDmg); 
      return NOTHING; 
      };
    On Event EV_CALC_EFFECT {
      e.saveDC = 12 + EActor->Mod(A_CHA) * 2;
      };
  }
  
Effect "fear;RoLM" : EA_INFLICT
  { aval: AR_GLOBE; sval: WILL; lval: 8; cval: SHADOW;
    xval: AFRAID; yval: FEAR_MAGIC;
    Flags: EF_NAMEONLY, EF_NOGEN, EF_FEAR, EF_CASTER_IMMUNE;
    On Event EV_ISTARGET {
      if (EVictim->Perceives(EActor))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      };
    On Event EV_CALC_EFFECT {
      e.saveDC = 12 + EActor->Mod(A_CHA) * 2;
      };
  }
    
Item "climbing pole;RoLM" : T_TOOL
  { Image: cyan GLYPH_TOOL; Group: WG_STAVES; Mat:MAT_IRON; 
    Size: SZ_MEDIUM; Weight: 5; Parry: 2; SDmg: 1d4; LDmg: 1d2;
    Acc: -3; Crit: x2; Threat: 1; Spd: 70%; 
    Flags: IT_NOGEN, WT_BLUNT; 
    Desc: "This special telescoping pole is a form taken by the
      Rod of Lordly Might. It can seperate into sections connected
      by an impossibly strong rope, which can be stretched out to
      a length of up to 30 feet, then magically retracted back into
      the climbing pole as if by a powerful winch, allowing the
      bearer to pull himself up a significant distance by the
      retraction of the rope. In game terms, wielding this item
      gives the bearer a +10 circumstance bonus to Climb checks.";
    On Event EV_WIELD {
      EActor->GainPermStati(SKILL_BONUS,EItem,SS_MISC,SK_CLIMB,10,
        $"climbing pole;RoLM",12);
      },
    EV_REMOVE {
      EActor->RemoveEffStati($"climbing pole;RoLM");
	};
  }

    
/************************************************************************\
 *                                 HORNS                                *
\************************************************************************/

// ww: this name used to conflict with the terrain feature Fog, creating
// very strange effects (e.g., for the wall of fog spell)!
AI_HORN Effect "Fog;horn effect" : EA_GENERIC
  { SC_ARC; lval: 12; Level: 1;
    rval: FI_FOG; cval: GREY; Purpose: EP_STEALTH; aval: AR_FIELD;
    Flags: EF_DXLONG, EF_GLYPH_FOG, EF_AUTOID, EF_ACTIVATE, EF_SOUND;
		Desc: "When blown (activated), this horn creates a large field of fog
		  obscuring sight within a 120 foot radius."; }

AI_HORN Effect "Goodness" : EA_INFLICT
  { SC_ABJ; aval: AR_GLOBE; lval: 6; tval: MA_EVIL; sval: WILL;
    xval: AFRAID; Flags: EF_ACTIVATE, EF_LIM_MTYPE, EF_AUTOID, EF_SOUND;
    Level: 3; On Event EV_EFFECT {
      EMap->NewField(FI_BLOCKER|FI_MODIFIER,EActor->x,EActor->y,
        2,GLYPH_VALUE(GLYPH_FLOOR2, WHITE),10,$"Magic Circle vs. Evil",EActor);
      };
		Desc: "When blown (activated), this horn creates a protective field
		  against evil creatures and influences (similar to Magic Circle
			vs. Evil) 60 feet in radius.";
  }

AI_HORN Effect "Valhalla" : EA_SUMMON
  { SC_WEA; rval: $"horde of valhalla"; pval: 8; Level: PLUS_ADD3;
    Flags: EF_ACTIVATE, EF_GROUP, EF_DLONG, EF_AUTOID, EF_SOUND,
           EF_3PERDAY, EF_NEEDS_PLUS; 
		Desc: "When blown (activated), this horn summons berzerk warriors 
		  to fight on the hornblower's behalf."; 

  }

/* So one day, it occured to me that the kobold swarm ability
   is completely useless to a kobold PC. Let's fix that. */
AI_HORN Effect "the Kobolds;horn" : EA_SUMMON
  { SC_WEA; xval: MA_KOBOLD; rval: $"mass summons"; Level: PLUS_2PER1; 
    pval:  PLUS_2PER1; Purpose: EP_SUMMON;
    Flags: EF_ACTIVATE, EF_DLONG, EF_AUTOID, EF_SOUND,
           EF_3PERDAY, EF_NEEDS_PLUS; 
    Desc: "When blown by a kobold, this horn summons a group of
      her fellows to fight on her behalf with a CR equal to twice 
      its magical plus. In the hands of a member of any other
      race, however, the kobolds will be hostile."; 
  }
  
AI_HORN Effect "Madness" : EA_DRAIN
  { SC_ENC; Level: PLUS_2PER1; sval: WILL;
    xval: AD_DAWI; pval: (PLUS_1PER1)d4;
    aval: AR_GLOBE; cval: MAGENTA; lval: 6; }
and EA_INFLICT
  { xval: STUNNED; aval: AR_GLOBE; lval: 6;
    Desc: "This baleful horn is carved with ancient horrors from
      the earliest days of Theyra. When it is blown, its strange,
      uluating tone shatters the minds of all who listen to it,
      causing them to become Stunned and to suffer 1d4 points of
      Intelligence damage per magical plus the horn possesses. Its
      user is immune to the effect, provided that the item is
      identified and activated with a full understanding of what
      it is going to do."; }

AI_HORN Effect "Ordered Defense" : EA_SUMMON
  { SC_WEA; xval: MA_LOUTSIDER; rval: $"mass summons"; Level: PLUS_2PER1; 
    pval: (PLUS_2PER1)d(1); Purpose: EP_SUMMON;
    Flags: EF_ACTIVATE, EF_DLONG, EF_AUTOID, EF_SOUND,
           EF_3PERDAY, EF_NEEDS_PLUS; 
    Desc: "When blown (activated), this horn summons a Lawful creature of
        CR equal to twice its magical plus to fight on the user's behalf."; 
  }

AI_HORN Effect "the Frenzied Hunt" : EA_SUMMON
  { SC_WEA; xval: MA_COUTSIDER; rval: $"mass summons"; Level: PLUS_2PER1; 
    pval: (PLUS_2PER1)d(1); Purpose: EP_SUMMON;
    Flags: EF_ACTIVATE, EF_MULTIPLE, EF_DLONG, EF_AUTOID, EF_SOUND,
           EF_3PERDAY, EF_NEEDS_PLUS; 
    Desc: "When blown (activated), this horn summons Chaotic creatures of
        CR equal to twice its magical plus to fight on the user's behalf."; 
  }

AI_HORN Effect "the Sewers" : EA_SUMMON
  { SC_WEA; rval: $"pack of rats"; Level: PLUS_2PER1; 
    pval: (PLUS_2PER1)d(1); Purpose: EP_SUMMON;
    Flags: EF_ACTIVATE, EF_MULTIPLE, EF_DLONG, EF_AUTOID, EF_SOUND,
           EF_3PERDAY, EF_NEEDS_PLUS; 
    Desc: "When blown (activated), this horn summons rodents with CR 
      equal to its magical plus to fight on the user's behalf."; 
  }

AI_HORN Effect "the Tritons" : EA_SUMMON
  { SC_WEA; xval: MA_AQUATIC; rval: $"mass summons"; Level: PLUS_2PER1; 
    pval: (PLUS_2PER1)d(1); Purpose: EP_SUMMON;
    Flags: EF_ACTIVATE, EF_MULTIPLE, EF_DLONG, EF_AUTOID, EF_SOUND,
           EF_3PERDAY, EF_NEEDS_PLUS; 
    Desc: "When blown (activated), this horn summons Aquatic creatures of
        CR equal to twice its magical plus to fight on the user's behalf."; 
  }

AI_HORN Effect "Panic" : EA_INFLICT
  { SC_NEC; Level: 4; sval: WILL;
    xval: AFRAID; aval: AR_BALL; lval: 9; cval: CYAN;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE; qval: 0;
    Flags: EF_MENTAL , EF_CASTER_IMMUNE, EF_SOUND;
    Desc: "Causes all other creatures within 90 feet of the user
      to become afraid, if they fail a Will saving throw.";
  }

AI_HORN Effect "Blasting" : EA_BLAST
  { SC_EVO; xval: AD_SONI; pval: (PLUS_1PER1)d12; qval: Q_EQU; 
    Level: PLUS_2PER1;
    aval: AR_BEAM; cval: WHITE; lval: 8; Purpose: EP_ATTACK;
    Flags: EF_AFFECTS_ITEMS, EF_ACTIVATE, 
           EF_NEEDS_PLUS, EF_AUTOID, EF_SOUND, EF_7PERDAY;
    qval: Q_DIR|Q_TAR; 
    On Event MSG_BLASTNAME "cone of deafening sound"; }
and EA_INFLICT
  { xval: STUNNED; sval: FORT; aval: AR_BEAM; 
    Desc: "When blown (activated), this horn created a destructive
            blast of sound that inflicts 1d12 points of sonic damage per
            magical plus to everything it strikes, potentially stunning
            victims as well. The horn may be sounded 7 times a day."; }

AI_HORN Effect "Plenty" : EA_CREATION
  { SC_WEA; rval: $"pile of fresh food"; pval: 8; Level: 4;
    Flags: EF_ACTIVATE, EF_AUTOID, EF_SOUND, EF_3PERDAY; 
    xval: CREA_DROP;
    Desc: "When blown, at the cost of fatiguing its bearer, this horn
      creates a rich pile of fresh fruits and vegetables ready to 
      eat.";
    On Event EV_EFFECT {
      EActor->LoseFatigue(4,false);
      return NOTHING;
      },
    EV_MAGIC_STRIKE
      "Fruits and produce appear at your feet!" /
      "Fruits and produce appear at the <EActor>'s feet!";
		Desc: "When blown (activated), this horn conjures a pile of
		  fresh food at the blower's feet.";
  }

/* Of course, this should be too heavy to stockpile and carry around
   the dungeon, and it should also decay too quickly. */
Item "pile of fresh food" : T_FOOD
  {
    Image: pink '%';
    Mat: MAT_VEGGY; Weight: 20;
    Nutrition: 100; Flags: IT_NOGEN;
  }

AI_STONE Effect "Hearthstone of Onanda" : EA_GENERIC
  {
    SC_ENC; Level: 4; Flags: EF_NAMEONLY, EF_ACTIVATE;
    Desc: "In legend, these blackened stones were taken
      from the hearth of Onanda, the halfling goddess
      safety, family and happy returns. If the stone is
      crumbled to ash and sprinkled around the area of
      a campsite (i.e., activated), it will bring peace
      and good rest to its user -- in game terms
      preventing any encounters and allowing the recovery
      of full hit points and mana.\n
        Beware, however, for their enchantment will be
      wasted if the bearer does not rest very shortly
      after they are activated.";
    On Event EV_MAGIC_HIT {
      hObj hStone;
      EActor->IPrint("You crumble a hearthstone and prepare
        to break camp, secure in Onanda's blessing.");
      ThrowVal(EV_REST,REST_DUNGEON|REST_SAFE|REST_FULL,
                EActor,EActor);
      hStone = EItem->TakeOne();
      hStone->Remove(true);
      return DONE;
      };  
    Constants:
      * BASE_ITEM $"stone;light";
  }

/************************************************************************\
 *                             SPECIFIC WEAPONS                         *
\************************************************************************/

AI_WEAPON Effect "Luckblade" : EA_GRANT
  { SC_ENC; Level: 8; Flags: EF_NAMEONLY, EF_ACTIVATE3;
    xval: ADJUST; yval: A_LUC; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST_LUCK; yval: A_SAV; pval: PLUS_1PER1; }
and EA_GENERIC
  { On Event EV_MAGIC_HIT {
      if (!e.isActivation)
        return NOTHING;
      if (EItem->GetInherentPlus() <= 0)
        {
          EActor->IPrint("There are no wishes left.");
          return DONE;
        }
     
      /* Consume one Plus permanently. */
      EItem->SetInherentPlus(EItem->GetInherentPlus() - 1);
      
      /* Awkward kludge so the plus goes down without having to wield
         and unwield the damn sword. */
      EActor->SetEffStatiMag(ADJUST,$"Luckblade",EItem->GetPlus());
      EActor->SetEffStatiMag(ADJUST_LUCK,$"Luckblade",EItem->GetPlus());
      EActor->CalcValues();
      
      /* ... and grant a wish. */
      //e.eID = $"wish";
      //ReThrow(EV_EFFECT,e);
      //e.eID = $"Luckblade";
      EActor->IPrint("Wishes aren't implemented yet; sorry.");
      return DONE;
      };
    Constants:
      * BASE_ITEM $"short sword",
      * INITIAL_PLUS +3;
    Lists:
      * ITEM_QUALITIES WQ_KEEN;
    Desc: "The Luckblade is a powerful and rare treasure often favoured
      by adventurers and followers of Semirath, who are the best known
      for creating these valuable relics. It is a <11>+3 keen short sword<7>,
      and it adds its magical plus as a magic bonus to the wearer's Luck
      score and as a luck bonus to the wearer's saving throws. Additionally,
      it can be activated to grant the wearer a wish, but doing so
      permanently depletes the sword of one of its magical plusses, and
      this lost enchantment cannot be restored in any manner.";
  }
  
AI_WEAPON Effect "Holy Avenger" : EA_GRANT
  { SC_ABJ; Level: 5; Flags: EF_POSTFIX, EF_HIDEQUAL;
    xval: ADJUST; yval: A_MR; pval: 50;
    On Event EV_EFFECT {
      if (e.isRemove)
        return NOTHING;
      if ( EActor->ItemPrereq($"paladin",4,30) &&
           EActor->ItemPrereq(MTYPE_VAL + MA_LAWFUL,1,30) &&
           EActor->ItemPrereq(MTYPE_VAL + MA_GOOD,1,30) )
        {
          EItem->SetInherentPlus(5);
          EItem->PurgeAllQualities();
          EItem->AddQuality(WQ_HOLY);
          EItem->AddQuality(WQ_SMITING);
          EItem->AddQuality(WQ_BANE);
          EItem->AddQuality(IQ_ADAMANT);
          // do the adjust.
          return NOTHING;
        }
      else
        {
          EItem->SetInherentPlus(2);
          EItem->PurgeAllQualities();
          EItem->AddQuality(WQ_HOLY);
          EItem->AddQuality(IQ_ADAMANT);
          // prevent the ADJUST being granted.
          return DONE;        
        }
      },
    EITEM(POST(EV_HIT)) {
      /* Paranoia */
      if (!(GetHandle(EItem) && /*EItem->isItem() &&*/ 
             EItem->ieID == $"Holy Avenger"))
        return NOTHING;
      
      /* Dispel only in a paladin's hands. */
      if (EItem->GetInherentPlus() < 5)
        return NOTHING;
      
      /* Don't dispel corpses. */
      if (EVictim->isDead())
        return NOTHING;
        
      /* e.vCasterLev = LEVEL_AS($"paladin",20); */
      e.vCasterLev = 12;
      e.eID = $"dispel magic";
      ReThrow(EV_MAGIC_HIT,e);
      e.vCasterLev = 0;
      e.eID = NULL_ID;
      return NOTHING;
      };
    Constants: 
      * BASE_ITEM $"long sword",
      * INITIAL_PLUS +2;
    Lists:
      * ITEM_QUALITIES IQ_ADAMANT WQ_HOLY,
      * BANE_LIST MA_DEMON MA_DEVIL MA_UNDEAD;
    Desc: "The architypical sacred sword, in the hands of a paladin of
      4th level or higher, a Holy Avenger is a <11>+5 holy smiting adamant 
      long sword<7> with bane properties against demons, devils and the 
      undead. Wielding it grants the paladin a 50% magic resistance,
      and on a successful hit it enacts a <9>dispel magic<7> effect
      with a caster level equivalent to the wielder's paladin levels.\n
      __In the hands of any other character, the Holy Avenger remains a
      <11>+2 holy adamant long sword<7>.";
  }

Item "short sword;sunblade" : T_WEAPON
  { Image: gray GLYPH_SWORD; Group: WG_SBLADES;
    Mat:MAT_IRON; Size: SZ_SMALL; Weight: 30; 
    Cost: OPT_COST(31,9) GOLD; Parry: 4;
    SDmg:1d10; LDmg:1d12; Acc: +3; Crit: x3; Threat: 2; Spd: 140%;
    Flags: WT_SUPER_SNEAK, WT_SLASHING, WT_PIERCING, IT_NOGEN;
    Constants:
      * WIELD_AS $"short sword";
  }
  
AI_WEAPON Effect "Sunblade" : EA_GRANT
  { SC_EVO; Level: 8; Flags: EF_NAMEONLY, EF_ACTIVATE2, EF_3PERDAY;
    xval: RESIST; yval: AD_NECR; pval: PLUS_2PER1;
    Desc: "Though this weapon materially appears to be a bastard
      sword, and is such to all physical examination, when picked
      up and wielded it has the balance, weight and handling of a
      short sword. It can thus be handled as if it were a short
      sword by anyone proficient with such.\n
      __Thus, the Sunblade is a <11>glowing holy keen ghost touch +2 short 
      sword<7> that inflicts damage (and has the accuracy modifier and 
      crit multiplier) of a bastard sword. Against creatures with ties
      to the Negative Material Plane, it inflicts double damage.
      Against creatures vulnerable to or penalized by light, it
      acts as a weapon of terror.\n
      __Wielding a Sunblade causes a character to be mildly resistant
      to cold and strongly resistant to life-draining.Finally, three 
      times a day, the wielder can activate the sunblade by spinning
      it vigorously in a wide arc above his head, producing a nearly
      blinding emination of golden light out to a range of 60 feet.
      This incurs all the normal penalties for light-average creatures.\n
      __<14>Terror:<7> On a critical hit, this weapon fills its target 
      with a mortal terror, causing the victim to flee for 3d6 rounds 
      if a Will save is failed.";
    On Event EITEM(PRE(EV_HIT)) {
      /* Paranoia */
      if (!(GetHandle(EItem) && /*EItem->isItem() &&*/ 
             EItem->ieID == $"Sunblade"))
        return NOTHING;
      
      if (EVictim->HasMFlag(M_LIGHT_AVERSE))
        EItem->AddQuality(WQ_TERROR);
      
      /* There should be a better way to find Negative Plane
         denizens than this, but ah well. */
      if (EVictim->isMType(MA_WRAITH))
        {
          // e.vMult++;
          e.xDmg += 5d6;
          e.strXDmg += " +5d6 sunblade";
        }
      return NOTHING;
      },
    EITEM(POST(EV_HIT)) {
      /* Paranoia */
      if (!(GetHandle(EItem) && /*EItem->isItem() &&*/ 
             EItem->ieID == $"Sunblade"))
        return NOTHING;
      EItem->RemoveQuality(WQ_TERROR);
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"short sword;sunblade",
      * INITIAL_PLUS +2;
    Lists:
      * ITEM_QUALITIES WQ_GLOWING WQ_KEEN WQ_HOLY IQ_GHOST_TOUCH;
  }
and EA_GENERIC
  {  aval: AR_FIELD; lval: 5; rval: FI_LIGHT; cval: yellow; } 

Item "small hornblade" : T_WEAPON
  { Image: purple GLYPH_WEAPON; Group: WG_SIMPLE;
    Mat: MAT_BONE; Size: SZ_SMALL; Weight: 30; 
    Parry: 2; Flags: WT_SLASHING, IT_NOGEN;
    SDmg: 1d6; LDmg: 1d3; Acc: +1; Crit: x2; Threat: 1; Spd: 110%;
    Desc: "This hornblade is about the size of a knife."; 
    Constants:
      * WIELD_AS $"sickle",
      * APPEAR_AS $"horn"; }
Item "medium hornblade" : T_WEAPON
  { Image: purple GLYPH_WEAPON; Group: WG_SIMPLE;
    Mat: MAT_BONE; Size: SZ_SMALL; Weight: 30; 
    Parry: 2; Flags: WT_SLASHING, IT_NOGEN;
    SDmg: 1d8; LDmg: 1d4; Acc: +1; Crit: x2; Threat: 1; Spd: 110%;
    Desc: "This hornblade is about the size of a dagger."; 
    Constants:
      * WIELD_AS $"sickle",
      * APPEAR_AS $"horn"; }
Item "large hornblade" : T_WEAPON
  { Image: purple GLYPH_WEAPON; Group: WG_SIMPLE;
    Mat: MAT_BONE; Size: SZ_MEDIUM; Weight: 30; 
    Parry: 2; Flags: WT_SLASHING, IT_NOGEN;
    SDmg: 1d8; LDmg: 1d6+1; Acc: +2; Crit: x2; Threat: 1; Spd: 110%;
    Desc: "This hornblade is about the size of a scimitar."; 
    Constants:
      * WIELD_AS $"sickle",
      * APPEAR_AS $"horn"; }

AI_WEAPON Effect "Hornblade" : EA_GENERIC
  { SC_ENC; Level: PLUS_ADD3; Flags: EF_NAMEONLY, EF_HIDEQUAL;
    On Event EV_BIRTH {
      switch (1d3) 
        {
          case 1:
            EItem->ChangeIID($"small hornblade");
            EItem->SetInherentPlus(1);
           break; 
          case 2:
            EItem->ChangeIID($"medium hornblade");
            EItem->SetInherentPlus(2);
           break; 
          case 3:
            EItem->ChangeIID($"large hornblade");
            EItem->SetInherentPlus(3);
           break; 
        }
      return NOTHING;
      },
    EITEM(PRE(EV_HIT)) {
      /* Paranoia */
      if (!(GetHandle(EItem) && /*EItem->isItem() &&*/ 
             EItem->ieID == $"Hornblade"))
        return NOTHING;

      if (!EVictim->HasEffStati(TRIED,$"Hornblade"))
        {
          e.isFlatFoot = true;
          EVictim->GainPermStati(TRIED,NULL_OBJ,SS_MISC,0,0,$"Hornblade");
        }
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"sickle",
      * INITIAL_PLUS 2;
    Lists:
      * ITEM_QUALITIES WQ_ROARING;
    Desc: "A very cleverly disguised weapon, a hornblade appears to
      all examination to be a piece of an animal's horn carved in an
      intricate manner. Only a proficient user knows how to wield it
      as a sickle-like slashing weapon. Because it is so difficult
      to visually recognize as a weapon, the first attack made with
      it against any given foe is considered to be a sneak attack.
      Rogues favour hornblades for this reason, and druids favour them
      because they are treated as sickles with no metal parts.";
  }    
  
AI_WEAPON Effect "Dwarven Thrower" : EA_GRANT
  {
    Level: 7; xval: SUSTAIN; yval: A_STR;
    Flags: EF_POSTFIX, EF_HIDEQUAL;
    On Event EV_EFFECT {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(MTYPE_VAL + MA_DWARF,1,25))
        {
          EItem->PurgeAllQualities();
          EItem->SetInherentPlus(4);
          /*EItem->AddQuality(WQ_THROWING);*/
          EItem->AddQuality(WQ_RETURNING);
          EItem->AddQuality(WQ_IMPACT);
          EItem->AddQuality(WQ_BANE);
        }
      else
        {
          EItem->PurgeAllQualities();
          EItem->SetInherentPlus(2);
          /*EItem->AddQuality(WQ_THROWING);*/
          EItem->AddQuality(WQ_BANE);
          return DONE;
        }
      return NOTHING;
      },
    EV_ISTARGET {
      return EActor->isMType(MA_DWARF) ?
        SHOULD_CAST_IT : CANNOT_CAST_IT;
      };
    Constants:
      * BASE_ITEM $"warhammer",
      * INITIAL_PLUS +2;
    Lists:
      * ITEM_QUALITIES /*WQ_THROWING*/ WQ_RETURNING WQ_BANE,
      * BANE_LIST MA_ORC MA_GIANT;
    Desc: "__Crafted by the dwarven elders of Thogorolain
      Citadel, these seven mighty hammers were created
      to aid the Dwarven people in their eternal
      struggle against their racial enemies.\n
      __A Dwarven Thrower is a <11>+4 throwing returning warhammer
      of impact<7>, and it possesses bane properties
      against orcs and giants, in the hands of a dwarf.
      Any other character who wields one finds that it
      acts merely as a <11>+2 warhammer<7>, with the
      above-mentioned banes.\n
      __When wielded by a dwarf, the hammer also sustains
      its wielder's Strength and allows him to use the
      Power Attack feat.";
  }
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_POWER_ATTACK; }

AI_WEAPON Effect "Nine Lives Stealer" : EA_GENERIC
  { Level: 7; Flags: EF_POSTFIX, EF_ACTIVATE, EF_CANCEL, EF_EVIL, 
      EF_HIDEQUAL;
    Desc: "This weapon's blade is made from a slick black iron alloy,
      difficult to identify clearly. It has the power to steal nine
      souls -- once nine souls are taken, the blade cannot steal 
      souls ever again. Thus, the wielder has the ability to turn on
      and off its soul-stealing power, using the Activate or Cancel
      commands.\n
      __If the weapon scores a critical hit while it is activated,
      its victim must make a Fortitude save (DC 20 + the bearer's
      Charisma modifier), or be struck dead instantly. (<9>Death 
      ward<7> and similar effects protect against this demise).
      When the sword slays a victim in this manner, the bearer
      gains the same benefits an orc would upon consuming the corpse
      of the victim. The sword can do this only nine times, and
      then its special power is expended.\n
      __Regardless of whether the blade has any lives left to
      steal, it remains a <11>+2 unholy keen long sword<7>.";
    On Event EITEM(PRE(EV_HIT)) {
      e.saveDC = 20 + EActor->Mod(A_CHA);
      if (e.isCrit)
        if (EActor->HasEffStati(EFF_FLAG1,$"Nine Lives Stealer"))
          if (EItem->GetEffStatiMag(COUNTER,$"Nine Lives Stealer") < 9)
			if (EVictim->ResistLevel(AD_NECR) != -1)
			  if (!EVictim->SavingThrow(FORT,e.saveDC,
					SA_DEATH|SA_NECRO|SA_MAGIC|SA_EVIL))
				{
					TPrint(e,"You snuff out the <EVictim>'s soul!",
							"The <EActor>'s sword snuffs out your life!",
							"The <EVictim>'s life is snuffed out instantly!");
					ThrowDmg(EV_DEATH,AD_NECR,0,"having <EVictim:his> soul snuffed out",
							EActor,EVictim,EItem);
				    if (EVictim->isDead())
		              EActor->DevourMonster(EVictim);
					EItem->IncEffStatiMag(COUNTER,$"Nine Lives Stealer",
					             SS_MISC, NULL, +1);
					return DONE;
				}
	    return NOTHING;  
	  },
    EV_MAGIC_HIT {
      if (e.isActivation)
        {
          if (EItem->GetEffStatiMag(COUNTER,$"Nine Lives Stealer") >= 9)
            {
              EActor->IPrint("That sword can no longer steal lives.");
              EActor->Timeout = 0;
              return ABORT;
            }
          if (EActor->HasEffStati(EFF_FLAG1,$"Nine Lives Stealer"))
            {
              EActor->IPrint("It's already activated.");
              EActor->Timeout = 0;
              return ABORT;
            }
          EActor->GainPermStati(EFF_FLAG1,EItem,SS_ENCH,0,0,
                           $"Nine Lives Stealer",e.vCasterLev);
          DPrint(e, "Your <EItem> glows a malignant crimson.",
                    "The <EActor>'s <EItem> glows a malignant crimson.");
          return DONE;
        }
      return NOTHING;
      },
    EV_REMOVED
      "Your Nine Lives Stealer stops glowing crimson." /
      "The <EActor>'s sword stops glowing crimson.",
    EV_GETNAME
      {
        if (EActor->isKnown(KN_MAGIC) && EActor->isKnown(KN_PLUS))
          e.nAppend += Format(" (%d thefts left)",
               9 - EActor->GetEffStatiMag(COUNTER,$"Nine Lives Stealer"));
               
        return NOTHING;
      };
    Constants:
      * BASE_ITEM $"long sword",
      * INITIAL_PLUS +2;
    Lists:
      * ITEM_QUALITIES WQ_UNHOLY WQ_KEEN;
  }
  
AI_WEAPON Effect "Bloodspear" : EA_GRANT
  { 
    Level: 10; Flags: EF_PROPER, EF_HIDEQUAL, EF_ACTIVATE2;
    xval: SAVE_BONUS; yval: SN_SPELLS; pval: +4;
    Desc: "This ancient, weathered spear was forged by primordial 
      orc shamans a half-dozen millenia ago, and its head was
      dipped in the hearts-blood of the greatest 'heroes'
      who sought the extermination of the orcish race. In
      the hands of a human, elf or similar such creature,
      it is a <11>+2 longspear<7>. In the hands of a kobold, goblin,
      lizardman, troll or other sometimes-ally to the orcs,
      it is a <11>+3 wounding longspear<7> with bane properties
      against humans, elves, dwarves, gnomes and halflings. It 
      is only in the hands of an orc (or a high-level Rogue with
      Trick Magic), however, that it's full powers are revealed.\n
      __Then, it is a <11>+4 keen wounding weakening longspear of 
      pain<7> with the aforementioned bane proerties, and it 
      possesses certain very potent special
      abilities as well. When it strikes a critical hit against
      a foe, it imbues its bearer with the ability to regenerate
      damage just like a <9>ring of regeneration<7> -- a number
      of hit points per turn equal to the foe's Challenge Rating.
      This effect lasts for 20 turns for every hit point of damage
      the critical hit inflicted, but every additional hit made
      while the wielder is already regenerating adds 5 turns per
      hit point inflicted. If a critical is inflicted while the
      wielder is already regenerating, the duration is augmented
      as normal and the rate of regeneration is increased if the
      foe has a higher CR.\n
      __When wielded by an orc, the Bloodspear also grants a +4
      bonus to saving throws versus spells.\n
      __Any wielder can activate the Bloodspear to cause it to
      transform from a longspear into a shortspear, or vice
      versa if already changed.";
    Constants:
      * BASE_ITEM $"longspear",
      * INITIAL_PLUS 2;
    Lists:
      * BANE_LIST MA_HUMAN MA_ELF MA_DWARF MA_HALFLING;
    On Event EITEM(EV_WIELD) {
      if (e.isRemove)
        return NOTHING;
      if (EActor->ItemPrereq(MTYPE_VAL + MA_ORC,1,25))
        {
          EItem->PurgeAllQualities();
          EItem->SetInherentPlus(+4);
          EItem->AddQuality(WQ_KEEN);
          EItem->AddQuality(WQ_WOUNDING);
          EItem->AddQuality(WQ_WEAKENING);
          EItem->AddQuality(WQ_BANE);
          EItem->AddQuality(WQ_PAIN);
        }
      else if (EActor->isMType(MA_GOBLINOID) || 
               EActor->isMType(MA_TROLL) ||
               EActor->isMType(MA_KOBOLD))
        {
          EItem->PurgeAllQualities();
          EItem->SetInherentPlus(+3);
          EItem->AddQuality(WQ_WOUNDING);
          EItem->AddQuality(WQ_BANE);
        }
      else
        {
          EItem->PurgeAllQualities();
          EItem->SetInherentPlus(+2);
        }
      return NOTHING;
      },
    EITEM(POST(EV_HIT)) {
      int16 amt, CR, Dur;
      if (EActor->isMType(MA_ORC))
        {
          CR = EVictim->ChallengeRating();
          amt = e.aDmg;
          Dur = EActor->GetEffStatiDur(REGEN,$"Bloodspear");
          
          if (e.isCrit) {
            if (EActor->GetEffStatiMag(REGEN,$"Bloodspear") < max(1,CR)*100)
              {
                if (EActor->HasEffStati(REGEN,$"Bloodspear"))
                  {
                    EActor->SetEffStatiMag(REGEN,$"Bloodspear",max(1,CR)*100);
                    EActor->SetEffStatiDur(REGEN,$"Bloodspear",
                               min(Dur+amt*5,1000));
                  }
                else {
                  EActor->GainTempStati(REGEN,EItem,min(amt*5,1000),SS_ENCH,
                    /* Regen Flags Later */ 0, max(1,CR)*100, $"Bloodspear", e.vCasterLev);
                  EActor->IPrint("<10>You feel your blood quicken...<7>");
                  }

                return NOTHING;
              }
            else
              {
                if (EActor->HasEffStati(REGEN,$"Bloodspear"))
                  EActor->SetEffStatiDur(REGEN,$"Bloodspear",min(Dur+amt,1000));
                return NOTHING;
              }
            }
          
          /* Any hit can extend the duration, but only a critical
             hit will actually START the regeneration. */
          if (!EActor->HasEffStati(REGEN,$"Bloodspear"))
            return NOTHING;
            
          EActor->SetEffStatiDur(REGEN, $"Bloodspear",Dur+amt*5);
          return NOTHING;
        }
      return NOTHING;
    };
  }
and EA_GENERIC
  { On Event EV_MAGIC_HIT {
      if (e.isActivation) {
        if (EItem->iID == $"longspear")
          EItem->ChangeIID($"shortspear");
        else
          EItem->ChangeIID($"longspear");
      
        EActor->CalcValues();
        DPrint(e,"The Bloodspear changes into a <Res>.",
                 "The <EActor>'s weapon changes into a <Res>.", EItem->iID);
        return DONE;
        }
      return NOTHING; };
  }
  
AI_WEAPON Effect "Sword of the Planes" : EA_GENERIC
  {
    Level: 7; Flags: EF_HIDEQUAL, EF_NAMEONLY;
    Desc: "This unusual weapon is forged from a special form of
      adamant mined on the plane of Concordant Opposition, the
      spiritual homeland of True Neutrality. It is among the
      most common of the unique weapons overall, favoured by
      adventurers who mount extraplanar expeditions and by the
      humans and other brave souls who fight against the harsh
      rigor of the Outer Planes. Swords of the Planes are not
      forged in hatred or judgement -- their bane properties
      are born of pragmatism, and the desperate need of humanity
      to level the playing field against the terrible power and
      innate magic possessed by many outsiders.\n
      __Under normal circumstances, a sword of the planes is a 
      <11>+1 adamant brilliant energy long sword of binding<7> with 
      bane properties against outsiders and elementals. However, 
      its enhancement bonus can increase circumstantially if the 
      user is on a plane other than the Prime Material, or if 
      fighting an outsider.\n
      __On an elemental plane, or when fighting elementalkin,
      the sword has a +2 bonus. Against denizens of the ethereal
      or astral planes, or when the wielder is in such a locale
      herself, the bonus is +3. On the outer planes, or against
      demons, devils or celestials, the sword has a bonus of +4."; 
    On Event EITEM(PRE(EV_WATTACK)) {
      int16 oldBonus, newBonus;
      oldBonus = EItem->GetInherentPlus();
      newBonus = 1;
      if (EVictim->isMType(MA_DEMON) ||
          EVictim->isMType(MA_DEVIL) ||
          EVictim->isMType(MA_CELESTIAL) )
        newBonus = 4;
      else if (EVictim->isMType(MA_ELEMENTALKIN))
        newBonus = 2;
      else if (EVictim->isMType(MA_OUTSIDER))
        newBonus = 3;
      else
        newBonus = 1;
      
      /* Right now, the only plane a player can get to is
         the ethereal plane. */
      if (EActor->HasStati(PHASED))
        newBonus = max(newBonus,3);
      
      if (newBonus != oldBonus)
        {
          /* This is a recalc EVERY SINGLE TIME you hit an
             outsider. I don't like that performance-wise,
             but it doesn't seem avoidable. */
          EItem->SetInherentPlus(newBonus);
          EActor->CalcValues();
        }
      return NOTHING;
      },
    EITEM(POST(EV_WATTACK)), EITEM(EV_WIELD), EITEM(EV_REMOVE) {
      int16 oldBonus2, newBonus2;
      oldBonus2 = EItem->GetInherentPlus();
      newBonus2 = 1;
      if (EActor->HasStati(PHASED))
        newBonus2 = max(newBonus2,3);
      if (oldBonus2 != newBonus2)
        {
          EItem->SetInherentPlus(newBonus2);
          EActor->CalcValues();
        }
      return NOTHING;
      };
    Constants:
      * INITIAL_PLUS +1,
      * BASE_ITEM $"long sword";
    Lists:
      * ITEM_QUALITIES IQ_ADAMANT WQ_ENERGY WQ_BINDING WQ_BANE,
      * BANE_LIST MA_OUTSIDER MA_ELEMENTAL;
  }
    
AI_WEAPON Effect "flame tongue" : EA_GRANT
  { Level: 7; xval: EXTRA_FEAT; yval: FT_ENDURANCE; }
and EA_GRANT
  { xval: SUSTAIN; yval: A_CON; 
    Flags: EF_ACTIVATE3, EF_3PERDAY EF_HIDEQUAL, EF_POSTFIX;
    Desc: "Seven of these powerful blades are believed to exist.
      Revered as holy by the priesthood of Immotian, scholars
      believe they have an older, and more primal, origin than
      the clergy of purity. In fact, many obscure sources link
      them to the efreeti, and some sages claim that a flame
      tongue sword is forged when such a genie slays another
      living creature in the throes of inhuman rage and bathes
      the blade in their blood. The truth remains unknown --
      and the church of Immotian strives to keep it that way.\n
      __Regardless, a flame tongue is a <11>+2 flaming burst
      long sword<7> with a number of special qualities. It
      grants its bearer the Endurance feat and sustains their
      Constitution. When it strikes a corporeal undead, that
      creature's dry, withered flesh catches flame and continues
      to burn, causing it to suffer 3d6 fire damage the first
      turn after the hit, 2d6 the second turn and 1d6 on the
      third. (It is this property, as well as the fire-symbolism,
      that makes the swords so reverred by Immotian). But the
      most famous power the sword has is its <9>tongue of flame<7>
      ability, which can be called upon 3 times a day by activating
      the weapon.\n
      __If a flame tongue sword is ever immersed in water or any
      other flame retardant, the eternal fire that burns on its
      blade it put out, and the sword becomes temporarily inert.
      It can regain its magic after a day has passed by striking
      another creature or being activated.\n
      __<9>Tongue of Flame:<7>  When you activate this special 
      ability, the sheath of flames that normally surrounds the 
      sword's blade extends far past its tip and magically takes 
      on a tangible element like the lash of a whip. The tongue of
      flame lashes out from the sword to a maximum range of the 
      bearer's Charisma modifier times ten in feet (minimum 20) to 
      snare a chosen target.\n
      __The swordbearer must make a ranged touch attack
      to hit the intended target. If this is successful,
      the tongue of flame deals 4d8 damage to the
      victim and then, if the victim still lives and is
      a Large or smaller corporeal creature, it and the
      swordbearer make an opposed Strength test.\n
      __If the bearer prevails, his foe is yanked into
      the air, pulled across the map and lands directly
      at his feet (i.e., in melee range), and
      automatically suffers knockdown in the process.
      Unless he succeeds a Reflex save, he remains
      entangled in smoldering strands (i.e., Stuck) for
      another 1d4+1 rounds thereafter.";
    On Event EV_MAGIC_HIT {
      int16 oefNum;
      if (e.isActivation)
        {
          if (EItem->HasStati(DISPELLED))
            return NOTHING;
          if (!EItem->HasQuality(WQ_FLAMING))
            {
              DPrint(e,"Your sword is sheathed in flame!",
                       "The <EActor>'s sword is sheathed in flame!");
              EItem->AddQuality(WQ_FLAMING);
              EItem->AddQuality(WQ_BURST);
            }
          
          if (!ETerm->EffectPrompt(e,Q_TAR,false,"Select a target:"))
            return ABORT;
          RedirectEff(e,$"tongue of flame");
          
          return DONE;
        }
      return NOTHING;
      },
    EVICTIM(EV_DAMAGE) {
      hObj hOwner;
      if (e.DType == AD_SOAK)
        {
          hOwner = EVictim->Owner();
          if (GetHandle(hOwner))
            hOwner->IDPrint("Your flame tongue is snuffed out!",
                           "The <hObj>'s flaming sword is extinguished!",
                           hOwner);
          else
            APrint(e,"The flaming sword is snuffed out.");
          EVictim->GainTempStati(DISPELLED,NULL,-2,SS_MISC,0,0,NULL_ID,0);
          EVictim->RemoveQuality(WQ_FLAMING);
          EVictim->RemoveQuality(WQ_BURST);
          if (EVictim->Owner())
            {
              EVictim->Owner()->IPrint("You suddenly feel weak...");
              EVictim->Owner()->LoseFatigue(1d4+3,false);
            }
        }
      return NOTHING;
      },
    EITEM(PRE(EV_STRIKE)) {
      if (EItem->HasStati(DISPELLED))
        return NOTHING;
      if (!EItem->HasQuality(WQ_FLAMING))
        {
          DPrint(e,"Your sword is sheathed in flame!",
                   "The <EActor>'s sword is sheathed in flame!");
          EItem->AddQuality(WQ_FLAMING);
          EItem->AddQuality(WQ_BURST);
        }
      return NOTHING;
      },
    EITEM(EV_HIT) {
      /* Immolation damage vs. undead */
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"long sword",
      * INITIAL_PLUS +2;
    Lists: 
      * ITEM_QUALITIES WQ_FLAMING WQ_BURST;
  }
and EA_GENERIC { }

0 Effect "tongue of flame" : EA_BLAST
  { xval: AD_FIRE; pval: 4d8; 
    aval: AR_RAY; cval: PINK; qval: Q_TAR;
    On Event POST(EV_MAGIC_HIT) {
      int16 dr;
      if (EVictim->isDead())
        return NOTHING;
      if (EVictim->GetAttr(A_SIZ) >= SZ_LARGE)
        return NOTHING;
      if (EActor->Mod(A_STR) + 1d20 >= EVictim->Mod(A_STR) + 1d20)
        {
          TPrint(e,"Your tongue of flame lashes around the <EVictim>
                      and pulls <him:EVictim> to your side.",
                   "The tongue of flame lashes around you and yanks
                      you through the air!",
                   "The tongue of flame lashes around the <EVictim>
                      and yanks <him:EVictim> through the air!");
          dr = EActor->DirTo(EVictim);
          EVictim->PlaceAt(EMap, EActor->x + DirX(dr),
                                 EActor->y + DirY(dr)); 
          EVictim->GainPermStati(PRONE,NULL,SS_ATTK);
          if (!EVictim->SavingThrow(REF,e.saveDC,SA_PARA|SA_GRAB))
            EVictim->GainTempStati(STUCK,NULL,1d4+1,SS_ATTK);
        }
      else
        VPrint(e,"You hold your ground!",
                 "The <EVictim> holds <his:EVictim> ground!");
      return NOTHING;
      },
    EV_CALC_EFFECT {
      e.vRange = 3 + max(0, EActor->Mod(A_CHA));
      return NOTHING;
      };
  }
  
AI_SHIELD Effect "Dragonshield" : EA_BLAST
  { Level: PLUS_2PER1; qval: Q_TAR | Q_DIR;
    Desc: "A Dragonshield is a kite shield carved with the
      image of a dragon's head, its mouth wide open as if
      to breathe. Three times per day, the shield can be
      activated to produce an elemental blast similar to a
      dragon's breath inflicting 2d10 points of damage per
      magical plus the item possesses (with a Reflex save
      for half damage). The type of damage depends upon
      the type of dragon the shield is modelled after --
      white, red, brown, green, black, blue or purple.\n
      __In addition to this special ability, a Dragonshield
      is a <11>+1 <7>(or higher)<11> light fortification 
      fearsome shield<7>. Bearing a Dragonshield makes all
      chromatic dragons hostile to the bearer -- rumours
      claim that their blood is an essential component in
      these shields' manufacture.";
    Flags: EF_HIDEQUAL, EF_NAMEONLY, EF_ACTIVATE, EF_PARTIAL,
      EF_NEEDS_PLUS, EF_3PERDAY; sval: REF; aval: AR_BEAM;
      lval: PLUS_ADD3;
    xval: AD_FIRE; pval: (PLUS_2PER1)d10;
    On Event EV_BIRTH {
      int16 dt;
      switch(1d7)
        {
          case 1: dt = AD_FIRE; break; 
          case 2: dt = AD_COLD; break; 
          case 3: dt = AD_ELEC; break; 
          case 4: dt = AD_ACID; break; 
          case 5: dt = AD_NECR; break; 
          case 6: dt = AD_SLASH; break; 
          case 7: dt = AD_TOXI; break;
        }
      EItem->GainPermStati(EFF_FLAG1,NULL,SS_MISC,dt,0,$"Dragonshield",0);
      return NOTHING;
      },
    EV_GETNAME {
      String Col;
      switch (EActor->GetEffStatiVal(EFF_FLAG1,$"Dragonshield"))
        {
          case AD_FIRE: Col =  "Red "; break;
          case AD_COLD: Col =  "White "; break;
          case AD_ELEC: Col =  "Blue "; break;
          case AD_ACID: Col =  "Black "; break;
          case AD_NECR: Col =  "Purple "; break;
          case AD_SLASH: Col =  "Yellow "; break;
          case AD_TOXI: Col =  "Green "; break;
        }
      e.nBase = Col + e.nBase;
      return NOTHING;
      },
    EV_CALC_EFFECT {
      if (GetHandle(EItem) == NULL_OBJ)
        return NOTHING;
      if (e.efNum != 0)
        return NOTHING;
      e.xval = EItem->GetEffStatiVal(EFF_FLAG1,$"Dragonshield");
      e.DType = e.xval;
      switch (EItem->GetEffStatiVal(EFF_FLAG1,$"Dragonshield"))
        {
          case AD_FIRE: e.cval = RED; break;
          case AD_COLD: e.cval = AZURE; break;
          case AD_ELEC: e.cval = YELLOW; break;
          case AD_ACID: e.cval = GREEN; break;
          case AD_NECR: e.cval = SHADOW; break;
          case AD_SLASH: e.cval = BROWN; break;
          case AD_TOXI: e.cval = GREEN; break;
        }
      return NOTHING;
      },
    MSG_BLASTNAME "dragonbreath";
    Constants:
      * BASE_ITEM $"kite shield",
      * INITIAL_PLUS +2;
    Lists:
      * ITEM_QUALITIES AQ_LIGHT_FOR AQ_FEARSOME;
  }
and EA_GRANT
  { xval: ENEMY_TO; yval: MA_DRAGON; aval: 0; lval: 0; }


AI_WEAPON Effect "Lightning;jav" : EA_BLAST
  { 
    Level: PLUS_2PER1; sval: REF; aval: AR_BEAM; cval: YELLOW;
    Flags: EF_PARTIAL, EF_NEEDS_PLUS;
    xval: AD_ELEC; pval: (PLUS_2PER1)d6;
    On Event EITEM(PRE(EV_RATTACK)) {
        hObj hJavelin;
        hJavelin = EItem2->TakeOne();
        hJavelin->Remove(true);
        e.isItem = true;
        return RedirectEff(e,$"Lightning;jav");
      },
    EV_CALC_EFFECT {
      e.vRange = 6;
      /*e.vRange = 3 + EActor->Mod(A_DEX);
      e.vRange = 6;
      e.saveDC = 10 + EActor->ChallengeRating()/2 + 
                         EActor->Mod(A_DEX);*/
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"javelin";
    Desc: "When thrown, a javelin of lightning transforms into a
      magical stroke of lightning that functions similarly to the
      <9>lightning bolt<7> spell, inflicting 2d6 lightning damage
      for every magical plus and allowing a Reflex save (DC 10 +
      1/2 the thrower's character level + the thrower's Dexterity
      modifier) for half damage.";
  }
  
AI_WEAPON Effect "Sylvan Scimitar" : EA_GRANT
  { 
    xval: EXTRA_FEAT; yval: FT_CLEAVE; Level: 4; 
    Flags: EF_NAMEONLY, EF_HIDEQUAL;
    Desc: "Crafted by the wood elves, these swords serve both as
      useful utility items and as emblems of their trust. They are
      one of the more common specific magical items of Theyra, with
      perhaps as many as thirty in total still in existance from
      the earliest days when the wood elves' lands were much larger
      in scope.\n
      __A sylvan scimitar is a <11>+3 defending scimitar<7> with bane 
      properties against orcs and beasts; wielding it grants the user 
      the Cleave feat. When the user is on verdant terrain, the scimitar 
      gains an additional +2 circumstance bonus to hit and damage. Elves 
      tend to be friendly to a character that bears one of these weapons;
      in the hands of an elf or a druid, it also benefits from the
      <11>keen<7> quality."; 
    Constants:
      * BASE_ITEM $"scimitar",
      * INITIAL_PLUS +3;
    Lists:
      * ITEM_QUALITIES WQ_BANE WQ_DEFENDING,
      * BANE_LIST MA_ORC MA_BEAST;
    On Event EITEM(PRE(EV_STRIKE)) {
      int16 ax, ay;
      ax = EActor->x;
      ay = EActor->y;
      if (EMap->TerrainAt(ax,ay)->TerrainHasFlag(TF_VERDANT))
        {
          e.vHit += 2;
          e.bDmg += 2;
          e.strHit += " +2 ss";
          e.strDmg += " +2 ss";
        }
      return NOTHING;
      },
    EV_WIELD {
      if (EActor->ItemPrereq(MTYPE_VAL + MA_ELF,1,20) ||
          EActor->ItemPrereq($"druid",1,20) )
        EItem->AddQuality(WQ_KEEN);
      else
        EItem->RemoveQuality(WQ_KEEN);
      return NOTHING;
      },
    EV_REMOVE {
      EItem->RemoveQuality(WQ_KEEN);
      return NOTHING;
      };
  }
and EA_GRANT
  { xval: NEUTRAL_TO; yval: MA_ELF; } 
      
AI_WEAPON Effect "Oathbow" : EA_GRANT
  { Level: 5; xval: EXTRA_ABILITY; yval: CA_DWARVEN_FOCUS;
    Flags: EF_NAMEONLY;
    Desc: "For more than six hundred years now, the drow have
      sent raiding parties to the surface, moving in perfect
      stealth at night, to silently slaughter the children of
      the surface elves. They seldom stay long enough for true
      engagement, because they fear the solidarity of the
      surface elves' military and because they do not want to
      weaken their own military forces in the light of the
      continual, internecine political brinkmanship of their
      own society. So year after year, they sneak up to the
      surface to commit acts of terrorism upon the surface
      elves, then vanish before they can be caught.\n
      __These bows are one facet of the elven nation's response.
      Carved in a vindictive anger unusual for the surface elves,
      they are none the less beautiful items, made with a composite
      of ivory and darkwood and painted a chill white. In the hands
      of an elf, an Oathbow acts as a <11>+3 fey-trapping thundering 
      composite long bow of accuracy<7> with bane properties against the drow.
      It also grants a oath-swearing ability similar in effect to
      Dwarven Focus, allowing the user extra power and will when
      she swears to slay a specific enemy.\n
      __In the hands of anyone other than an elf, the bow remains a
      <11>+2 fey-trapping composite long bow<7> with bane properties
      against drow.";
    On Event EV_WIELD {
      if (EActor->ItemPrereq(MTYPE_VAL + MA_ELF,1,25))
        {
          EItem->SetInherentPlus(3);
          EItem->AddQuality(WQ_THUNDERING);
          EItem->AddQuality(WQ_ACCURACY);
        }
      else
        {
          EItem->SetInherentPlus(2);
          EItem->RemoveQuality(WQ_THUNDERING);
          EItem->RemoveQuality(WQ_ACCURACY);
        }
      return NOTHING;
      },
    EV_REMOVE {
      EItem->SetInherentPlus(2);
      EItem->RemoveQuality(WQ_THUNDERING);
      EItem->RemoveQuality(WQ_ACCURACY);
      },
    EITEM(EV_STRIKE) {
      if (!EActor->ItemPrereq(MTYPE_VAL + MA_ELF,1,25))
        return NOTHING;
      if (EVictim->isMType(MA_DROW) || 
           EActor->HasStati(DWARVEN_FOCUS,-1,EVictim))
        EActor->IPrint("<1>'Swift death to those who have wronged us!'<7>");
      else if (!random(4))
        EActor->IPrint("<1>'Swift defeat to my enemies!'<7>");
      return NOTHING;
      },
    EV_MAGIC_HIT {
      if (e.isWield)
        if (!EActor->ItemPrereq(MTYPE_VAL + MA_ELF,1,25))
          return DONE;
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"long bow",
      * INITIAL_PLUS +2;
    Lists:
      * ITEM_QUALITIES WQ_FEY_TRAPPING WQ_BANE,
      * BANE_LIST MA_DROW;
  }
  
AI_WEAPON Effect "Kinslayer" : EA_GRANT
  { Level: 9; Flags: EF_PROPER, EF_EVIL, EF_HIDEQUAL;
    xval: EXTRA_ABILITY; yval: CA_SNEAK_ATTACK; pval: 2; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_BLUFF; pval +4; }
and EA_GRANT
  { xval: STAFF_SPELLS; int16 kinflag;
    On Event EV_WIELD {
      if (EActor->isMType(MA_DROW))
        EItem->SetBane(MA_DROW);
      else if (EActor->isMType(MA_ELF))
        EItem->SetBane(MA_ELF);
      else if (EActor->isMType(MA_GNOME))
        EItem->SetBane(MA_GNOME);
      else if (EActor->isMType(MA_GOBLIN))
        EItem->SetBane(MA_GOBLIN);
      else if (EActor->isMType(MA_ABERRATION))
        EItem->SetBane(MA_ABERRATION);
      else if (EActor->isMType(MA_DWARF))
        EItem->SetBane(MA_DWARF);
      else if (EActor->isMType(MA_REPTILE))
        EItem->SetBane(MA_REPTILE);
      else if (EActor->isMType(MA_HUMAN))
        EItem->SetBane(MA_HUMAN);
      else if (EActor->isMType(MA_KOBOLD))
        EItem->SetBane(MA_KOBOLD);
      else if (EActor->isMType(MA_ORC))
        EItem->SetBane(MA_ORC);
      else if (EActor->isMType(MA_HALFLING))
        EItem->SetBane(MA_HALFLING);
      else if (EActor->isMType(MA_DEMON))
        EItem->SetBane(MA_DEMON);
      else if (EActor->isMType(MA_DEVIL))
        EItem->SetBane(MA_DEVIL);
      else if (EActor->isMType(MA_ELEMENTALKIN))
        EItem->SetBane(MA_ELEMENTALKIN);
      else if (EActor->isMType(MA_CELESTIAL))
        EItem->SetBane(MA_CELESTIAL);
      return NOTHING;
      },
    EITEM(PRE(EV_STRIKE)) {
      if (EVictim->isHostileTo(EActor) || 
          EVictim->HasMFlag(M_MAGC) ||
          EVictim->HasStati(SUMMONED) ||
          EVictim->HasStati(ILLUSION) )
        kinflag = 0;
      else
        kinflag = 1;
      return NOTHING;
      },
    EITEM(POST(EV_STRIKE)) {
      if (kinflag && (EVictim->isDead() ||
          EVictim->isHostileTo(EActor)) )
        EActor->KillXP(EVictim);
      return NOTHING;
      },
    EV_REMOVE {
      /* This is wrong in some cases -- cast invis.,
         wield Kinslayer, swap it out and you become
         visible -- but it's close enough. */
      EActor->RemoveEffStati($"invisibility");
      EActor->RemoveEffStati($"true strike");
      return NOTHING;
      };
    Desc: "This jet-black halfspear has an obsidian spearhead
      and a halt carved with twisting runes akin to some of the
      more debased tribal peoples of Angla Maua; it radiates
      betrayal and treachery from its very being. Though its
      existance is most commonly blamed on kobolds or goblins,
      it is in truth the work of one bitter halfling warrior.\n
      __It is a <11>+4 thirsty warning keen halfspear<7>, and when it is
      wielded it automatically gains bane properties against
      the wielder's own race. It also grants 2d6 sneak attack
      damage (as a Rogue's) and a +4 bonus to the Bluff skill.
      Finally, it allows the wearer access to the spells
      <9>invisibility<7> and <9>true strike<7>.";
    Constants:
      * BASE_ITEM $"halfspear",
      * INITIAL_PLUS 4;
    Lists:
      * ITEM_QUALITIES WQ_THIRSTY WQ_KEEN WQ_WARNING WQ_BANE,
      * STAFF_SPELL_LIST $"true strike" $"invisibility";
  }
    
AI_WEAPON Effect "Quickblade" : EA_GRANT
  { Level: 12; Flags: EF_PROPER, EF_HIDEQUAL;
    xval: SKILL_BONUS; yval: SK_JUMP; pval: PLUS_2PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_MOV; pval: 10; }
and EA_GRANT
  { xval: SUSTAIN; yval: A_DEX; }
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_WHIRLWIND_ATTACK; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_TUMBLE; pval: PLUS_2PER1;
    Constants:
      * INITIAL_PLUS 3,
      * BASE_ITEM $"rapier";
    Lists:
      * ITEM_QUALITIES WQ_KEEN WQ_GLOWING WQ_SPEED 
           WQ_SHIFTING WQ_DEFENDING IQ_SILVER;
    Desc: "Crafted by fae, these rare blades convey truly
      exceptional speed and grace to their bearer, allowing
      him to move as if he were a flicker, a mote in his
      opponent's eye. The blade glistens almost as if wet,
      and seems to be made of some strange, mutable, nearly 
      liquid kind of silver.\n
      __A Quickblade is a <11>+3 keen glowing defending
      silver shifting sword of speed<7>. In addition to these 
      formidable properties, it grants its bearer a +50~ magic
      bonus to her movement rate, and a +2 bonus to the Jump
      and Tumble skills for every magical plus that it possesses. 
      Finally, it sustains the bearer's
      Dexterity and allows her the use of the Whirlwind Attack
      feat without needing to meet the normal prerequisites
      for possessing that feat.\n
      __A Quickblade regenerates one point of damage (inflicted
      to the sword, not its wielder) per turn."; }

#if 0

AI_WEAPON Effect "Wit" : EA_GRANT
  {
    Desc: "Forged by the human musketeer and bodyguard to King
      Artham, Lady Rachel Wintercrest, this weapon is one of a
      pair, designed to be wielded together with the main-gauche
      'Irony'.\n
      __Wit is a powerful magical weapon in its own right, being
      a <11>+4 keen defending rapier<7>. When held, it grants to
      its bearer the benefit of the feats Spring Attack, Combat
      Finesse and Chink in the Armour, as well as an enhancement bonus 
      to the wearer's Charisma equal to its plus; if the wearer 
      already has these feats, the magnitude of the Charisma bonus 
      is increased by +1 for every duplication.\n
      __Wit also burns away an opponent's ego with every successful
      strike, causing the enemy to suffer 1d2 points of Charisma
      damage and a -1 penalty (per hit) to saving throws against 
      fear.\n
      __The blade's most unique power, however, is the gift it
      grants its wielder for witty reparte. Aside from making
      Lady Rachel a blast at parties, this has a distinct combat
      application -- whenever the user attacks a living humanoid, 
      a Bluff check is made for the user opposed by the foe's 
      Appraise. Success allows the wielder to get under the
      foe's skin, distracting them and causing them to be denied
      their Dexterity bonus to AC; this also makes them subject
      to the Sneak Attack damage of Rogues.";
      
    Desc: 
    
    __Irony -- when a foe attacks you and misses, you get an
    attack of opportunity in response? 
    -- also disarm-related abilities -- perhaps any miss allows
    a disarm attempt?
    -- grants reflection / spell turning?


#endif

           
/* Runesword (broadsword)
     Any character with one or more levels as a mage who should
   happen to pick up Runesword finds they are proficient with
   swords for as long as they hold the weapon in their hands.
     Weapon of the last uncorrupted mage-king until he was
   slain by betrayal -- its special purpose is to guide mages
   toward preserving knowledge and dealing with metaphysical
   threats, and to be used to punish those who transgress and
   use their powers to further political ends on Theyra --
   whether for good or evil.
   * innate spells
True Strike
Improved Phantasmal Force
Globe of Shadow
Read Magic
Blur
Scare
Explosive Runes
Spirit Armour
Enervation
   * spell-themed abilities
   * mana theft
   * improves spell success
   * the oldest of the game's sword-artifacts
   
   Longtooth (dagger)
   * changes into short sword
   
   Armour of the Old Soldier
   -- +4 medium fortification splint mail
   -- sustains Str, Con
   -- staff spells - haste, slow, mending
   -- grants Toughness, or one up the tree, or
        so on until it finds one you don't have.
   
   
   Nightblade
   -- darkness, divination, sanctuary, starbolt
   -- NOT evil, just somber and serene
   -- of elven make
   
   Dragonshield (activate for breath attack)
  
   Magellin, the Bringer of War
     name script -- if NA_LONG, include ", the Bringer of War",
       otherwise just "Magellin"
     Great Flail +5 of Wounding and Withering
     damages armour?
     -- staff spells: fireball, spirit armour, true strike
     Sustains Strength, grants +5 magic to Str
     -- causes conflict, aggrivates monsters
   
   Stormbrand
     -- +4 returning shocking thundering burst 
             warhammer of impact
     -- grants electricity & sonic resistance
     -- staff spells: fly, lightning bolt, tremor,
                      control weather, obscurement
     -- can be wielded by good or chaotic char. only,
          and wielder cannot be evil (unless a rogue) 
     -- Sustains Str, Wis
     -- grants Lore of Storms and Endurance
     
   Ring of Imprisonment
     Imprisons a selected outsider for (5 + Cha) turns when
   activated 3/day, once the imprisonment wears off, the
   outsider reappears right beside you. Will save negates.
  
  
   Ring of the Imp
     Summons an imp to serve you, non-good only, and can enact a
   "call companions" effect on the imp when it has already been
   summoned. Can be used three times a day.
   
   *Ring* of Identify
     Identify 3/day
     
   Greater Ring of Identify
     Identify 7/day
   
   
   Ten Minor But Important Balance Tweaks
   -- using a staff spell if you don't know the spell costs
      1 or 2 points of fatigue, as would be the charge cost
      for the staff normally
   -- EF_NOSWAP causes an item to give you the ATTUNED_SLOT
      stati when you wield it, and if you wield another item
      with EF_NOSWAP, you don't get the benefits until you've
      rested for a full day. ATTUNED_SLOT goes away when you
      rest, provided you aren't still wielding the item.
   -- EF_REST_WIELD delays the effects of wielding until the
      first time you rest, and is the flag that we give to the
      Ring of Invisibility, Ring of Regeneration and Ring of
      Sustenance (as well as perhaps Ring of Hold Life and
      other powerful resist rings, perhaps including the Cowl
      of Warding).
   -- The function getTouchRange() takes into account things
      like TELEKINETIC, natural reach and so forth in order
      to determine the range at which you can grapple, punch,
      kick, open doors, disarm traps, pick up items and so
      forth. TK will take some other adjustments as well, though,
      to account for replacing Str with Wis and Dex with Int,
      so we'll need an e.isTelekinetic flag. /Telekinesis/
      thus duplicates the SRD's /Ranged Legerdemain/ ability.
   -- Different food items decay at different rates, with some
      (smoked meat) lasting nearly forever and others (pile of
      frest fruit) decaying very quickly. Thus, there's a divison
      of three categories in regard to food -- nutrition, weight
      and shelf life.
   -- Downsides for sustenance and regeneration -- perhaps
      sustenance makes you slower (always full) and a little
      less healthy (-2 Con), and regen makes you get hungry much
      more rapidly.
   -- Improved Invisibility can be seen through per the rules in
      the SRD; once you've been spotted, a foe who spots you can
      make a check every time you move to keep their eyes on you,
      and that check isn't TOO hard.
   -- The "diversity clause" in item gen -- if there's less than
      20 different types of items of the selected type available
      at the selected depth, then you have an N in 20 chance of
      going back and selecting a different type of item to gen --
      where N is (20 - possible items)
   -- You need to be proficient with a weapon to be considered to
      be wielding it -- a mage can't pick up a long sword that
      grants fire res and get the benefit unless he spends a feat
      learning to use long swords.
   -- divide MAP.H into two files
   -- When a player has an INNATE_SPELL with the EF_SPECABIL flag,
      it should _not_ show up in Spell Manager, but it _should_
      show up in the 'u'se menu list for special abilities. There
      should also be an option in the EventInfo structure called
      isCustomTimeout that lets an effect set its own timeout.
      Using this, we can implement class features like the Shadow
      Companion of a shadowdancer. The character sheet should also
      be set up to read innate spell special abilities and add them
      to the class ability list.
   -- Perhaps there should be a MSG_ABILITY_NAME to allow cases
      like the Oathbow renaming dwarven focus to be "Elven Oath" or
      something similar. This could also be used for class
      features and prestige classes.
   -- Add a stati TERRAIN_IMMUNITY that prevents terrain effects
      for a specific terrain resource, so that we don't have to
      keep adding special cases to terrain events for boots of
      the winterlands, etc.
*/


/************************************************************************\
 *                          OTHER WONDEROUS ITEMS                       *
\************************************************************************/

Item "brazier" : T_TOOL
  {
    Image: red '&'; Flags: IT_NOGEN;
    Mat: MAT_COPPER; Weight: 25;
    Desc: "This is a large, three-legged brass brazier of the sort
      that might be used to burn incense in a temple. In fact, there's
      a ready supply of incense contained in special ridges within the
      brazier's interior already. It just needs to be lit.";
  }
  
AI_WONDER Effect "Brazier Commanding Fire Elementals" : EA_SUMMON
  { SC_WEA; Cost: 15; Level: PLUS_2PER1_ADD1;
    Purpose: EP_SUMMON; Flags: EF_NEEDS_PLUS, EF_ACTIVATE,
      EF_NAMEONLY, EF_3PERDAY, EF_DLONG, EF_XSUMMON;
    Desc: "Once per day, this brazier can be lit to summon
      a fire elemental of power commensurate to its magical
      plus to serve the holder faithfully.";
    On Event PRE(EV_MAGIC_HIT) {
      switch (EItem->GetPlus())
        {
          case 1:
            e->rval = $"tiny fire elemental";
           break;
          case 2:
            e->rval = $"small fire elemental";
           break;
          case 3:
            e->rval = $"medium fire elemental";
           break;
          case 4:
            e->rval = $"large fire elemental";
           break;
          default:          
            e->rval = $"huge fire elemental";
           break;
        }  
      };
    Constants:
      * BASE_ITEM $"brazier";
  }
  
AI_WONDER Effect "Hat of Disguise" : EA_INFLICT
  { SC_ILL; Base: SP_EASY; Cost: 5; Level: 1; 
    Desc: "This plain brown fedora is in fact a potent magical item
      usable by any character with Disguise as a class skill. When
      activated, it weaves an illusion over the user's body not unlike
      the mage spell <9>change self<7>, allowing the user to use the 
      Disguise skill with a +10 magic bonus. The hat also removes the 
      need to spend an hour preparing the disguise, and removes the need 
      for a disguise kit. However, the effect is an illusion, and is 
      automatically penetrated by anything which penetrates illusions, 
      including <9>true sight<1>.\n
      __It can be used three times per day."; 
    xval: SKILL_BONUS; yval: SK_DISGUISE; pval: +10; 
    Flags: EF_ONCEONLY, EF_ACTIVATE, EF_3PERDAY, EF_NAMEONLY;
    On Event POST(EV_MAGIC_HIT) {
      EActor->GainPermStati(INNATE_KIT,NULL,SS_MISC,SK_DISGUISE);
      ReThrow(EV_DISGUISE,e);
      EActor->RemoveStati(INNATE_KIT,SS_MISC,SK_DISGUISE);
      if (!EActor->HasStati(DISGUISED))
        EActor->RemoveEffStati($"Hat of Disguise");
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"hat";
  }
    
/************************************************************************\
 *                                 ROBES                                *
\************************************************************************/

Item "robes;magic" : T_CLOTHES
  {
    Image: purple '['; 
    Mat: MAT_CLOTH; Weight: 0; hp: 20;
    Flags: IT_PLURAL;
  }

/*

#define ROBES_ARCHMAGI(res_name,usable_test,burn_test)             \
                                                                   \
AI_WONDER Effect res_name : EA_GRANT                               \
  { Level: 9; Cost: 750;                                           \
    xval: ADJUST_ARM; yval: A_ARM; pval: 5; }                      \
and EA_GRANT                                                       \
  { xval: ADJUST; yval: A_MR; pval: 10; }                          \
and EA_GRANT                                                       \
  { xval: ADJUST; yval: A_SAV; pval: 3; }                          \
and EA_GRANT                                                       \
  { xval: EXTRA_FEAT; yval: FT_SPELL_PENETRATION;                  \
    On Event EV_MAGIC_HIT {                                        \
      if (e.isRemove)                                              \
        return NOTHING;                                            \
      if (!EActor->ItemPrereq($"mage",1,25))                       \
        return DONE;                                               \
      if (!usable_test)                                            \
        {                                                          \
          EItem->IFlags |= IF_CURSED;                              \
          if (burn_test)                                           \
            EActor->GainPermStati(TRAP_EVENT, EItem, SS_MISC,      \
              EV_TURN, 0, $res_name, e.vCasterLev);                \
          return DONE;                                             \
        }                                                          \
      },                                                           \
    META(EV_TURN) {                                                \
      hObj hRobes; uint16 rFlags;                                  \
      hRobes = EActor->GetEffStatiObj(TRAP_EVENT,$res_name);       \
      if ((!hRobes) || (hRobes->Owner() != GetHandle(EActor)))     \
        {                                                          \ 
          EActor->RemoveEffStati($"the Archmagi (White)");         \
          return NOTHING;                                          \
        }                                                          \
      DPrint(e, "Your robes burn!",                                \
                "The <EActor>'s robes are burning!");              \
      ThrowDmg(EV_DAMAGE, AD_FIRE, 1d8,                            \
        "badly-matched Robes of the Archmagi", (hObj)0, EActor,hRobes); \
      rFlags = hRobes->IFlags;                                     \
      hRobes->IFlags &= ~(IF_CURSED);                              \
      ThrowDmg(EV_DAMAGE, AD_MAGC, 1d6,                            \
        "badly-matched Robes of the Archmagi", (hObj)0, hRobes,hRobes); \
      hRobes->IFlags = rFlags;                                     \
      return NOTHING;                                              \
      };                                                           \
    Constants:                                                     \
      * BASE_ITEM $"robes;magic";                                  \
    Desc: "Among the most powerful of all magical robes, robes of  \
      the Archmagi also carry great risk with them. They must be   \
      properly matched to a character's alignment (white for good, \
      grey for neutral and black for evil) to function, and if the \
      colour of the robes directly opposes the wearer's alignment,  \
      they catch fire and burn, becoming cursed in the process.\n  \
      __For a suitable wearer, however, they grant a 50~ magic     \
      resistance, bestow an armour rating of 5 in all categories,   \
      grant a +3 magic bonus to saving throws and allow the wearer \
      to use the feat Spell Penetration."; }                       \                                  
  
ROBES_ARCHMAGI("the Archmagi (White)", 
                  EActor->ItemPrereq(MTYPE_VAL + MA_GOOD,1,25), 
                  EActor->isMType(MA_EVIL))
ROBES_ARCHMAGI("the Archmagi (Black)", 
                  EActor->ItemPrereq(MTYPE_VAL + MA_EVIL,1,25), 
                  EActor->isMType(MA_GOOD))
ROBES_ARCHMAGI("the Archmagi (Gray)", 
                  ( EActor->ItemPrereq(MA_NEUTRAL,1,25)
                    || ((!EActor->isMType(MA_GOOD) &&
                        (!EActor->isMType(MA_EVIL))), 
                  !((isMType(MA_LAWFUL) || isMType(MA_CHAOTIC)) )

*/

AI_WONDER Effect "Robe of Blending" : EA_GRANT
  { SC_ARC|SC_ILL; Flags: EF_NEEDS_PLUS, EF_NAMEONLY; 
    Level: PLUS_3PER1;
    xval: SKILL_BONUS; yval: SK_HIDE; pval: PLUS_2PER1;
    Lists:
      * STAFF_SPELL_LIST 
          1 $"change self" 
          2 $"blur" 
          3 $"invisibility"
          4 $"gaseous form" 
          5 $"meld into stone";
    Desc: "The robe of blending grants a +2 magic bonus to
      Hide in Shadows for every magical plus that it has.
      Furthermore, it grants its wearer the ability to use
      one spell as an innate spell-like ability for every
      plus it has, in the following order: <9>change self<1>,
      <9>blur<1>, <9>invisibility<1>, <9>gaseous form<1> and
      <9>meld into stone<1>."; 
    Constants:
      * BASE_ITEM $"robes;magic"; }
and EA_GRANT
  { xval: STAFF_SPELLS; }
  
AI_WONDER Effect "Robe of Eyes" : EA_GRANT
  { SC_DIV|SC_THA; Level: 6; Flags: EF_GOOD, EF_AUTOID, EF_NAMEONLY; 
    Desc: "This macabre item resembles a normal cloak until
      its properties are known, at which point hundreds of
      living eyes open all over the robe to enhance the wearer's
      perception. A Robe of Eyes grants a +5 magic bonus to all
      Search and Spot checks, grants the wearer 60 feet of
      Infravison and the ability to see invisible and ethereal
      creatures as well as letting her see in a full 360 degree
      arc, making her very difficult to surprise. In game terms,
      this grants her the benefit of the Improved Initiative 
      feat. Unfortunately, the wearer of a Robe of Eyes cannot
      avert their eyes to help them avoid gaze attacks.";
    xval: SKILL_BONUS; yval: SK_SPOT; pval: 5; }
and EA_GRANT
  { xval: SKILL_BONUS; yval: SK_SEARCH; pval: 5; }
and EA_GRANT
  { xval: SEE_INVIS; }
and EA_GRANT
  { xval: EXTRA_FEAT; yval: FT_IMPROVED_INITIATIVE; }
and EA_GRANT
  { xval: TRAP_EVENT; yval: EV_SATTACK;
    On Event META(EV_SATTACK) {
      if (e.AType == A_AEYE)
        {
          EActor->IPrint("You cannot avert your eyes while wearing a
            Robe of Eyes.");
          return ABORT;
        }
      return NOTHING;
      },
    EV_EFFECT {
      if (e.isWield) {
        DPrint(e, "As you don the robe, hundreds of living eyes
          open all across its surface!",
          "As the <EActor> dons the robe, hundreds of living eyes
          open all across its surface!");
        EActor->RemoveStati(EYES_AVERTED);
        }
      return NOTHING;
      };
    Constants:
      * BASE_ITEM $"robes;magic";
  }
  
AI_WONDER Effect "Robe of Scintillating Colours" : EA_GRANT
  { SC_ENC; SC_ILL; Level: 4;
    xval: MISS_CHANCE; yval: MISS_FULL; pval: 20;
    Flags: EF_CASTER_IMMUNE, EF_MENTAL, EF_ACTIVATE, 
      EF_ACTIVATE2, EF_CANCEL, EF_NAMEONLY, EF_NOTBAD; }
and EA_GRANT 
  { xval: SKILL_BONUS; yval: SK_HIDE; pval: -50; }
and EA_INFLICT 
  { rval: FI_MODIFIER|FI_MOBILE|FI_LIGHT;
    aval: AR_MFIELD; lval: 3; cval: COL_RAINBOW; xval: ADJUST_CIRC;
    yval: A_AID; pval: -4;
    Desc: "When activated, this robe flows and ripples with hypnotic,
      distracting colours, giving anyone within 5 squares of the wearer
      a -4 circumstance penalty to all actions, and granting the wearer
      a 20% miss chance against all attacks. You can't hide while this
      effect is active.";
    On Event 
      EV_WIELD
        "A nimbus of hypnotic, distracting colours appears around you." /
        "A nimbus of hypnotic, distracting colours appears around the <EActor>.",
      EV_FIELDON
        "Wow, those shifting colours are so pretty!" /
        "The <EActor> is fascinated.",
      EV_FIELDOFF
        "At this distance, the colours no longer affect you." /
        "The <EActor> seems clearer-headed now.";
    Constants:
      * BASE_ITEM $"robes;magic";
  }
  
AI_WONDER Effect "Vest of Health" : EA_GENERIC
  {
    Level: PLUS_2PER1_ADD1; Cost: 30;
    Flags: EF_NEEDS_PLUS, EF_ACTIVATE, EF_NAMEONLY, EF_PERMANANT;
    Desc: "An astounding item, the Vest of Health has the ability
      to shield its wearer from all physical (slashing, piercing
      or bludgeoning) or elemental (fire, cold, acid, sound or
      lightning) damage -- up to a limit. The vest can absorb up
      to 30 points of damage for each magical plus it bears, but
      if this full limit is ever exceeded, the vest is destroyed
      irrevocably. Fortunately, it can be activated and deactivated
      nearly instantly. Provided it is not destroyed, the vest
      'recovers' five hit points of damage per day.";
    xval: TRAP_EVENT; yval: EVICTIM(EV_DAMAGE);
    On Event META(POST(EV_REST)) {
      hObj hVest2;

      hVest2 = EActor->InSlot(SL_CLOTHES);
      if (!hVest2)
        return NOTHING;
      if (hVest2->ieID != $"Vest of Health")
        return NOTHING;

      if (hVest2->HasEffStati(COUNTER,$"Vest of Health"))
        hVest2->SetEffStatiMag(COUNTER,$"Vest of Health",
          max(0,hVest2->GetEffStatiMag(COUNTER,$"Vest of Health") - 5));
      return NOTHING; 
      },
    PRE(EV_ACTIVATE) {
      if (EActor->HasEffStati(TRAP_EVENT,$"Vest of Health;active"))
        { EActor->IPrint("It's already active.");
          return ABORT; }
      return NOTHING;
      },
    POST(EV_ACTIVATE) {
      /* Special case -- activating a Vest of Health takes 
         literally no time at all. */
      EActor->IPrint("Your vest glows softly.");
      EActor->Timeout = 0;
      return NOTHING;
      },
    EV_GETNAME {
      int16 hp;
      hp = EActor->GetPlus() * 30;
      if (EActor->HasEffStati(COUNTER,$"Vest of Health"))
        hp -= EActor->GetEffStatiMag(COUNTER,$"Vest of Health");
      if (EActor->isKnown(KN_MAGIC) && EActor->isKnown(KN_PLUS)) {
        e.nAppend = Format(" (%d/%d HP left)", hp, EActor->GetPlus()*30);
        if (EActor->Owner() != NULL_OBJ)
          if (EActor->Owner()->InSlot(SL_CLOTHES) == GetHandle(EActor))
            if (EActor->Owner()->HasEffStati(TRAP_EVENT,$"Vest of Health;active"))
              e.nAppend += " [Active]";
        }
      return NOTHING;
      },
    EV_REMOVE, EV_LOSEITEM {
      EActor->RemoveEffStati($"Vest of Health");
      EActor->RemoveEffStati($"Vest of Health;active");
      return NOTHING;
      },
    EV_MAGIC_HIT {
      if (e.isActivation) {
        EVictim->GainPermStati(TRAP_EVENT,EItem,SS_ENCH,
          EVICTIM(EV_DAMAGE),0,$"Vest of Health;active");
        return DONE;
        }
      return NOTHING;
      }/*,
    EV_ELAPSED {
      EActor->RemoveEffStati($"Vest of Health;active");
      EActor->GainPermStati(TRAP_EVENT,EItem,SS_ENCH,
          POST(EV_REST),0,$"Vest of Health");
      return NOTHING;
      }*/;
    Constants:
      * BASE_ITEM $"robes;magic";
  }   
and EA_GRANT
  { xval: TRAP_EVENT; yval: POST(EV_REST); }


Effect "Vest of Health;active" : EA_GENERIC
  {
    Flags: EF_PERMANANT, EF_CANCEL;
    Desc: "An astounding item, the Vest of Health has the ability
      to shield its wearer from all physical (slashing, piercing
      or bludgeoning) or elemental (fire, cold, acid, sound or
      lightning) damage -- up to a limit. The vest can absorb up
      to 30 points of damage for each magical plus it bears, but
      if this full limit is ever exceeded, the vest is destroyed
      irrevocably. Fortunately, it can be activated and deactivated
      nearly instantly. Provided it is not destroyed, the vest
      'recovers' five hit points of damage per day.";
    On Event META(EVICTIM(EV_DAMAGE)) {
      int16 amtTaken, amtAllowed; hObj hVest;
      
      if (e.DType != AD_BLUNT && e.DType != AD_SLASH &&
          e.DType != AD_PIERCE && e.DType != AD_FIRE &&
          e.DType != AD_COLD && e.DType != AD_ACID &&
          e.DType != AD_ELEC && e.DType != AD_SONI)
        return NOTHING;
      
      hVest = EVictim->InSlot(SL_CLOTHES);
      if (!hVest)
        return NOTHING;
      if (hVest->ieID != $"Vest of Health")
        return NOTHING;
      
      amtAllowed = hVest->GetPlus() * 30;
      if (!hVest->HasEffStati(COUNTER,$"Vest of Health"))
        hVest->GainPermStati(COUNTER,NULL,SS_MISC,0,0,
                   $"Vest of Health", hVest->ItemLevel());
      amtTaken = hVest->GetEffStatiMag(COUNTER,$"Vest of Health");
      
      if (amtTaken + e.vDmg > amtAllowed)
        {
          VPrint(e,"Your vest absorbs some of the damage and is destroyed!",
            "The <EVictim>'s vest absorbs some of the damage and is destroyed!");
          hVest->Remove(true);
          e.vDmg -= (amtAllowed - amtTaken);
          return NOTHING;
        }
      
      VPrint(e,"Your vest absorbs the damage!",
        "The <EVictim>'s vest absorbs the damage!");
      hVest->SetEffStatiMag(COUNTER,$"Vest of Health",amtTaken + e.vDmg);
      e.vDmg = 0;
      return DONE;
      };
  }
  
AI_WONDER Effect "Vestment of Faith" : EA_GRANT
  { Level: PLUS_2PER1; Flags: EF_NEEDS_PLUS, EF_GOOD, EF_NAMEONLY; 
    xval: ADJUST_SAC; yval: A_DEF; pval: PLUS_1PER1; }
and EA_GRANT
  { xval: ADJUST; yval: A_WIS; pval: PLUS_1PER1;
    Desc: "The robes of great saints and religious heroes are often
      enchanted to become Vestments of Faith. These holy items only
      function for characters who have one or more levels in the
      priest class; for these characters they add their magical plus
      as a sacred bonus to Defense Class and as a magic bonus to
      Wisdom."; 
    Constants:
      * BASE_ITEM $"robes;magic";
    On Event PRE(EV_MAGIC_HIT) {
      if (EVictim->ItemPrereq($"priest",1,20) == 0)
        return DONE;
      return NOTHING;
      };
        
  }


// Weimer: let's make some Permanency enchantment type effects from buffing
// spells: 

AI_GIRDLE Effect "Uncanny Growth" : EA_GRANT
  { xval: ADJUST; yval: A_SIZ; pval: PLUS_1PER1;
    Purpose: EP_BUFF;
    Flags: EF_NEEDS_PLUS | EF_AUTOID; SC_THA; Level: PLUS_4PER1; 
    Desc: "Causes a you to become larger, increasing your
      size category by one level per plus.";
  }

AI_AMULET Effect "Incredible Shrinking" : EA_GRANT
  { Level 6;
    xval: ADJUST; yval: A_SIZ; pval: -1;
    Flags: EF_AUTOID | EF_CURSED; SC_THA; Level: 0; 
    Desc: "Causes a you to become smaller, decreasing your
      size category by one.";
  }

AI_AMULET Effect "Boldness" : EA_GRANT
  { SC_ABJ; Level: 1;
    xval: IMMUNITY; yval: AD_FEAR;
    Desc: "Makes you immune to fear."; 
  } 

AI_STONE Effect "Courage" : EA_GRANT
  { xval: ADJUST_MOR; yval: A_AID; pval: PLUS_1PER1;
    Purpose: EP_BUFF;
    Flags: EF_NEEDS_PLUS; SC_THE; Level: PLUS_3PER1; 
    Desc: "Grants a morale bonus to your attacks
      and saves equal to its plus."; 
  } 

AI_GIRDLE Effect "Lesser Divine Aspect" : EA_GRANT
  { xval: ADJUST; yval: A_CHA; pval: 4; Purpose: EP_BUFF;
    Level: PLUS_5PER1_ADD3; Flags: EF_NEEDS_PLUS; 
    Desc: "Causes you to take on some of the qualities of a
      celestial being: you gain an enhancement bonus of +4
      to your Charisma score; darkvision; a +2 bonus to saving
      throws against disease and poison; and acid, cold and 
      electricity resistance of 5."; }
and EA_INFLICT
  { xval: RESIST; yval: AD_COLD; pval: PLUS_5PER1 ; }
and EA_INFLICT
  { xval: RESIST; yval: AD_ELEC; pval: PLUS_5PER1 ; }
and EA_INFLICT
  { xval: RESIST; yval: AD_ACID; pval: PLUS_5PER1 ; }
 and EA_GRANT 
  { SC_THA; xval: EXTRA_ABILITY; yval: CA_INFRAVISION; pval: PLUS_5PER1_ADD1; }
and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_POISON; pval: PLUS_2PER1; }
and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_DISEASE; pval: PLUS_2PER1; }

AI_CLOAK Effect "Nondetection;item" : EA_GRANT
  { xval: NONDETECTION; 
    yval: PER_SCENT|PER_TELE|PER_DETECT;
    Purpose: EP_BUFF; SC_ABJ; Level: 3; 
    Desc: "This item makes its wearer difficult to detect by
    divination or other non-standard means. Scent, Telepathy and 
    Detection are all blocked. The creature can
    still be tracked or perceived visually. Note that this does *not* by
    itself hide or otherwise make the wearer invisible."; 
  } 


// Weimer: Friendship items ...

AI_AMULET Effect "Undead Warding" : EA_GRANT
  { xval: NEUTRAL_TO; yval: MA_UNDEAD;
    Purpose: EP_BUFF; SC_ABJ; Level: 3; 
    Desc: "This item makes the bearer innocuous to the lifeless eyes of 
    the undead. Undead will be initially neutral to the bearer, but will 
    still become angry if attacked.";
  }

AI_CLOAK Effect "Vermin Friendship" : EA_GRANT
  { xval: NEUTRAL_TO; yval: MA_VERMIN;
    Purpose: EP_BUFF; SC_ABJ; Level: 3; 
    Desc: "This item makes the bearer innocuous in the eyes of vermin. 
    Such creatures will be initially neutral to the bearer, but will 
    still become angry if attacked." ;
  }

AI_AMULET Effect "Planar Warding" : EA_GRANT
  { xval: NEUTRAL_TO; yval: MA_OUTSIDER;
    Purpose: EP_BUFF; SC_ABJ; Level: 6; 
    Desc: "This item attunes the essense of the bearer to the Prime
    Material plane. Outsiders will view the bearer as, essentially, part of
    the terrain, and will rarely be hostile.  Outsiders will still become
    angry if attacked."; }

// ww: Turning needs a boost in power, and some accessories ...

AI_BRACERS Effect "Devilbane" : EA_GRANT
  { xval: ALSO_TURN_MA_TYPE; yval: MA_DEVIL; Level: 4; SC_ABJ;
    Flags: EF_NAMEFIRST;
    Desc: "This sacred item allows your deity to channel additional energy
      through you. Any Rebuke, Command or Turn action you take against the
      Undead will additionally affect devils. Unfortunately,
      bearing this item will also cause such creatures to view you with
      marked disdain. Kysul is quite fond of such devices -- the Multitude
      merely tolerate them for their own purposes."; }
and EA_GRANT 
  { xval: ENEMY_TO; yval: MA_DEVIL; }

AI_RING Effect "Elemental Disjunction" : EA_GRANT
  { xval: ALSO_TURN_MA_TYPE; yval: MA_ELEMENTAL; Level: 5; SC_ABJ;
    Desc: "This sacred item allows your deity to channel additional energy
      through you. Any Rebuke, Command or Turn action you take against the
      Undead will additionally affect Elementals and their kind.
      Unfortunately, bearing this item will also cause such creatures to
      view you with marked disdain. Ekliazeh, Immotian, Kysul and Sabine 
      favour such devices, but any they can be useful in the hands of a
      devout priest of any faith.";
  } and EA_GRANT { xval: ENEMY_TO; yval: MA_ELEMENTAL; }

AI_STONE Effect "Theryan Inviolability" : EA_GRANT
  { xval: ALSO_TURN_MA_TYPE; yval: MA_OUTSIDER; Level: 7; SC_ABJ;
    Desc: "This sacred item allows your deity to channel additional energy
      through you. Any Rebuke, Command or Turn action you take against the
      Undead will additionally affect Outsiders. 
      Unfortunately, bearing this item will also cause such creatures to
      view you with marked disdain. Ekliazeh, Immotian and Kysul all 
      favour such devices.";
  } and EA_GRANT { xval: ENEMY_TO; yval: MA_OUTSIDER; }

AI_BRACERS Effect "Purity" : EA_GRANT
  { xval: ALSO_TURN_MA_TYPE; yval: MA_ABERRATION; Level: 6; SC_ABJ;
    Desc: "This sacred item allows your deity to channel additional energy
      through you. Any Rebuke, Command or Turn action you take against the
      Undead will additionally affect Aberrations. Unfortunately, bearing 
      this item will also cause such creatures to view you with marked 
      disdain.";
  } and EA_GRANT { xval: ENEMY_TO; yval: MA_ABERRATION; }

