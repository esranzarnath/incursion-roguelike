// #define TOUCH_TO_BOLT 1

/* ============================================================= 
 *                       Arcane Spellbooks
 * =============================================================
 * Abj: Ethereal Wardings, Resistance of Scabracities, Mystic
          Authority, Phylactery against Perils, Spells of Sealinge
 * Arc: Tome of Magic, Unearthed Arcana, Mastery of Matter,
          Words of Power
 * Div: Practical Divinings, Unearthly Readings, Higher Mysteries,
          Book of Revelations, Paths of Enlightenment
          
 * Enc: Charms and Favours, Tome of Beguiling, Book of Glamour,
          
 * Evo: Energy Magicks, Power over Elements, Ars Bellicus, Spellfire,
          Wrath of the Mystic, Tome of Destruction, Secrets of Balefire
 * Ill: Magician's Manual, Book of Mirrors, Shadow Magic, Book
          of Glamour, Libram of Misdirection
 * Nec: Ars Mortis, Perdo Vitalis, Rego Manes, Secrets of Reanimation,
          Via Negativa, Black Book of Belial, Necronomicon
 * Tha: Book of Life, Blood Magic, Secrets of Thaumaturgy
 * Wea: Place and Time, Ritual Magic, Higher Mysteries, Little
          Spider's Book

   General: Adventuring Magic, The Apprentice's Study Book, Fire
     Magic, Ice Magic, Elemental Endurance

   Advanced: Kelek's Grimore, Arcane Lore, Power over Matter,
     Transfigurations I, Awe and Wonder
 * =============================================================
 */

/* Friendly Schools: 
 *                    
 * Abj wants: arc, div          wea
 * Arc wants: div, ill, wea
 * Div wants: arc
 * Enc wants: abj               ill, tha
 * Evo wants: abj               tha
 * Ill wants: arc, wea          div, enc
 * Nec wants: tha, div
 * Tha wants: nec, enc          abj, wea
 * Wea wants: abj,              arc, div
 *
 * Clusters: 
 *      Arc Div
 *      Abj Wea
 *      Enc Ill
 *      Nec Tha
 *      Evo 
 */

/* Total Spells per School:
   Weavecraft  -- 18 (5/3/4/3/4)
   Abjuration  -- 22 (5/5/3/4/2/2)
   Divination  -- 25
   Necromancy  -- 26
   Enchantment -- 28
   Arcana      -- 29
   Thaumaturgy -- 34
   Evocation   -- 35
   Illusion    -- 37 (7/7/7/7/6/3)
   
   (6/5/6/5/6/3) = 31
   
   1 Mana Theft
   2 Phaseblade
   2 Apportation
   3 Spatial Vortex
   3 Translocation
   4 Magic Staff
   4 Magic Theft
   5 Conjure Earth
   5 Sucking Gate
   6 Planar Binding
   6 Energy Transformation
   6 Contingency

   Dismissal == Hardsave
   
   Weavecraft Planned Adds:
     Conjure Earth Elemental
     Planar Binding
     Spatial Vortex
     Magic Staff
     Energy Transformation
     Mana Theft
     Phaseblade (grant ghost touch)
     Contingency
     
   Abjuration Adds:
     Mooncloak (Abj 5)
     Contingency (Abj/Wea 6)
     Ironguard (Abj 5)
     Dispelling Screen (Abj 4)
     Proof vs. Combustion (Abj 5)
       Permanent, costs 25 XP, can be Transmute Spelled,
       grants IMMUNITY / AD_FIRE, one item, costs only
       five XP for potions or scrolls, can be cast on a
       stack at base cost.
     Protection from Traps (Abj 1)
       (+4 saving throw vs. traps)
     Abjure Friction (Abj 3)
       (+4 save vs. grab, -4 vs. knockdown, +50% movement)
     Dispel Magic
       Specialist abjurers roll twice for dispel magic,
     taking the better roll.
     "Protection from Touch"
       +10 DC vs. touch attacks
     Protection from Psionics (Abjuration 3)
     
     Priest Imports:
       Sanctuary
       Silence (is Abjuration/Evocation!)
       Glyph of Warding
       Spell Immunity
       Shield Other
       Magic Resistance
       Break Enchantment
       
   
*/

    
/* ============================================================= 
 *                   Level One ARCANE Spells
 * =============================================================
 * Abj: Endure X, Mage Armour, Prot. Evil, Endure [Element]
 * Arc: Grease, Knock, Unseen Servant, Wall of Fog, Wizlock, Mending
 * Div: Detect Monsters, Detect Stairs, Know Align, True Strike
 * Enc: Cause Fear, Charm Person, Friends, Sleep
 * Evo: Force Bolt, Magic Missile, Shield, Shocking Grasp
 * Ill: Chromantic Orb, Colour Spray, Phantasmal Force, Ventril.
 * Nec: Chill Touch, Halt Undead, Prot. Undead, Rigor Mortis
 * Tha: Enlarge, Expeditious Retreat, False Life, Reduce
 * Wea: Alarm, Mount, Phase Door, Monster Summoning I
 * =============================================================
 */
/* --ABJURATION 1-- */

Wizard Spell "Endure Fire" : EA_INFLICT
  { SC_ABJ|SC_FIRE; IS_A_BUFF(2); Level: 1; qval: Q_TAR; 
    xval: RESIST; yval: AD_FIRE; pval: 3d1 + (LEVEL_1PER2);
    Desc: "Grants the target fire resistance equal to 3 plus
      1 per 2 caster levels."; }

Wizard Spell "Endure Cold" : EA_INFLICT
  { SC_ABJ|SC_COLD; IS_A_BUFF(2); Level: 1; qval: Q_TAR; 
    xval: RESIST; yval: AD_COLD; pval: 3d1 + (LEVEL_1PER2); 
    Desc: "Grants the target cold resistance equal to 3 plus
      1 per 2 caster levels."; }

Wizard Spell "Endure Lightning" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(2); Level: 1; qval: Q_TAR; 
    xval: RESIST; yval: AD_ELEC; pval: 3d1 + (LEVEL_1PER2); 
    Desc: "Grants the target lightning resistance equal to 3 plus
      1 per 2 caster levels."; }

Wizard Spell "Endure Acid" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(2); Level: 1; qval: Q_TAR; 
    xval: RESIST; yval: AD_ACID; pval: 3d1 + (LEVEL_1PER2); 
    Desc: "Grants the target acid resistance equal to 3 plus
      1 per 2 caster levels."; }

Wizard Spell "Endure Sound" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(2); Level: 1; qval: Q_TAR; 
    xval: RESIST; yval: AD_SONI; pval: 3d1 + (LEVEL_1PER2); 
    Desc: "Grants the target sound resistance equal to 3 plus
      1 per 2 caster levels."; }

/* I changed the visual on this so that it truly feels like an
   Abjuration spell, rather than an Evocation hammered into the
   Abjuration school for game balance. Evokers get shield; let
   Abjurers be the best at the Shield + Mage Armour combo. Also,
   EVERY mage uses this spell, and while it's cool as a specific
   gimmick (i.e., spirit armour), I don't want every single
   mage to be a guy in conjured plate armour, thematically. */
Wizard Spell "Mage Armour" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1X); Level: 1; qval: 0;
    Flags: EF_NO_BONUS_DMG, EF_MARMOUR;
    xval: ADJUST_ARM; yval: A_ARM; pval: 15d1 + (LEVEL_1PER3);
    Desc: "This euphemistically-named spell created a ward around the
      mage's body which mystically dampens the lethality of attacks,
      manifesting through luck and coincidence (with no physical form)
      to protect her from harm. This effect is represented in game
      terms by granting the caster [4 + Luck modifier] levels armour in 
      each armour category, or [6 + Luck modifier] if the caster is an
      Abjurer. Mage Armour is not compatible with real armour, and counts
      as medium armour for the purpose of abilities like defensive roll
      and Zen Defense.";
    On Event MSG_STATINAME 
      "Mage Armour" / "MArm", 
    EV_MAGIC_HIT
      "You feel safe." /
      "The <EVictim> seems more solid, somehow.",
    EV_REMOVED
      "You feel threatened." /
      "The <EVictim> seems vulnerable, somehow.",
    EV_CALC_EFFECT {
      if (GetHandle(EActor) == NULL_OBJ)
        return NOTHING;
      if (EActor->HasStati(SPECIALTY_SCHOOL,0))
        SetPVal(e,6 + EActor->Mod(A_LUC));
      else
        SetPVal(e,4 + EActor->Mod(A_LUC));
      },
    PRE(EV_EFFECT) {
      if (EActor->InSlot(SL_ARMOUR) != NULL_OBJ)
        {
          EActor->IPrint("You cannot combine <9>mage armour<7> with
            conventional armour.");
          return ABORT;
        }
      return NOTHING;
      },
    META(POST(EV_WIELD)) {
      if (EActor->InSlot(SL_ARMOUR) != NULL_OBJ)
        {
          EActor->IPrint("Your <9>mage armour<7> is cancelled.");
          EActor->RemoveEffStati($"mage armour");
        }
      return NOTHING;
      };
  }
and EA_OVERRIDE
  { }
  
  
Wizard / Priest / Scroll Spell "Protection from Evil" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1); Level: 1; qval: 0; Flags: EF_GOOD;
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE); pval: 2; 
    On Event META(EVICTIM(EV_STRIKE)) {
      if (EActor->HasStati(SUMMONED)) {
          DPrint(e,"","The <EActor> hesitates.");
          return ABORT;
      } if (EActor->isMType(MA_EVIL)) {
        e.vHit -= 2;
        e.strHit += " -2 ProtEvil";
      }
      return NOTHING;
    }, EV_MAGIC_HIT "You feel safer.",
       EV_REMOVED "You no longer feel protected.";
  } and EA_INFLICT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4;
    Desc: "Shields you from evil's influence with a tripartite
      effect: evil creatures suffer a -2 penalty to attack you,
      you receive a +4 bonus to save against enchantment spell 
      effects and summoned creatures cannot physically attack 
      you."; 
    On Event MSG_STATINAME "ProEvil" / "PEvil"; }

Wizard Spell "Protection from Good" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1); Level: 1; qval: 0; 
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE); pval: 2; 
    On Event META(EVICTIM(EV_STRIKE)) {
      if (EActor->HasStati(SUMMONED)) {
          DPrint(e,"","The <EActor> hesitates.");
          return ABORT;
      } if (EActor->isMType(MA_GOOD)) {
        e.vHit -= 2;
        e.strHit += " -2 ProtGood";
      }
      return NOTHING;
    }, EV_MAGIC_HIT "You feel safer.",
       EV_REMOVED "You no longer feel protected.";
  } and EA_INFLICT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4;
    Desc: "Shields you from good's influence with a tripartite
      effect: good creatures suffer a -2 penalty to attack you,
      you receive a +4 bonus to save against enchantment spell 
      effects and summoned creatures cannot physically attack 
      you."; 
    Flags: EF_EVIL;
    On Event MSG_STATINAME "ProGood" / "PGood"; }

Wizard Spell "Protection from Law" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1); Level: 1; qval: 0; 
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE); pval: 2; 
    On Event META(EVICTIM(EV_STRIKE)) {
      if (EActor->HasStati(SUMMONED)) {
          DPrint(e,"","The <EActor> hesitates.");
          return ABORT;
      } if (EActor->isMType(MA_LAWFUL)) {
        e.vHit -= 2;
        e.strHit += " -2 ProtLaw";
      }
      return NOTHING;
    }, EV_MAGIC_HIT "You feel safer.",
       EV_REMOVED "You no longer feel protected.";
  } and EA_INFLICT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4;
    Desc: "Shields you from law's influence with a tripartite
      effect: lawful creatures suffer a -2 penalty to attack you,
      you receive a +4 bonus to save against enchantment spell 
      effects and summoned creatures cannot physically attack 
      you."; 
    Flags: EF_CHAOTIC;
    On Event MSG_STATINAME "ProLaw" / "PLaw"; }

Wizard Spell "Protection from Chaos" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_1); Level: 1; qval: 0; 
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE); pval: 2; 
    On Event META(EVICTIM(EV_STRIKE)) {
      if (EActor->HasStati(SUMMONED)) {
          DPrint(e,"","The <EActor> hesitates.");
          return ABORT;
      } if (EActor->isMType(MA_CHAOTIC)) {
        e.vHit -= 2;
        e.strHit += " -2 ProtChaos";
      }
      return NOTHING;
    }, EV_MAGIC_HIT "You feel safer.",
       EV_REMOVED "You no longer feel protected.";
  } and EA_INFLICT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4;
    Desc: "Shields you from chaos's influence with a tripartite
      effect: chaotic creatures suffer a -2 penalty to attack you,
      you receive a +4 bonus to save against enchantment spell 
      effects and summoned creatures cannot physically attack 
      you."; 
    Flags: EF_LAWFUL;
    On Event MSG_STATINAME "ProChaos" / "PChaos"; }

Wizard Spell "Shield" : EA_INFLICT
  { SC_ABJ|SC_EVO|SC_FORCE; IS_A_BUFF(COST_1X); Level: 1; qval: 0; 
    xval: TRAP_EVENT; yval: EVICTIM(EV_STRIKE);
    Desc: "Creates a shield-shaped force construct that hovers
      nearby you, granting you a +5 defense class bonus versus 
      physical attacks that you are aware of, so long as you are
      not being flanked, and rendering you immune to Magic Missiles.
      This bonus persists even during a spellcasting timeout."; 
    On Event META(EVICTIM(EV_STRIKE)) {
      if (!e.isFlanking && !e.isSurprise && !e.isFlatFoot)
        {
          e.vDef += 5;
          e.strDef += " +5 shield";
        }
      return NOTHING;
      },
    META(EVICTIM(EV_MAGIC_HIT)) {
      if (e.eID == $"magic missile")
        {
          VPrint(e,"Your shield deflects the missiles!",
                   "The <EVictim>'s shield deflects the missiles!");
          return ABORT;
        }
      return NOTHING;
      },
    EV_MAGIC_HIT
      "A shield-sized wall of force appears by your arm." /
      "A shield-sized wall of force appears by the <EVictim>'s arm.",
    EV_REMOVED
      "Your magical shield vanishes." /
      "The <EActor>'s magical shield vanishes.";
  }
and EA_INFLICT 
  { xval: TRAP_EVENT; yval: EVICTIM(EV_MAGIC_HIT); }

Wizard Spell "Spiritwrack" : EA_BLAST
  {
    Desc: "By casting this spell, a mage creates an intense dissonance
      between the fabric of the material plane and those nearby it,
      injuring and driving back creatures that reach into the Prime
      Material from other planes of existance. Incorporeal creatures
      (whether their existance overlaps into the astral, ethereal or
      negative energy planes) suffer 1d8 points of damage per caster
      level, material creatures native to the Outer Planes, astral or
      ethereal suffer 1d6 points of damage per caster level and creatures
      native to the elemental planes suffer 1d4 points of damage per
      caster level. The spell affects a 30 foot burst, and all damage
      is scaled after 9th level. A Will saving throw negates the
      damage completely, but failure also leaves the victim in a
      state of psychic shock causing a -4 circumstance penalty.\n
      __Since the Spiritwrack effect is essentially an attack made of
      pure will, if an affected creature makes the Will saving throw 
      and has a Wisdom score of 15 or higher, it may attempt to reflect 
      the wave of torment back at the caster, making him subject to the
      damage from his own spell. This requires that the creature beat
      the caste in a contest of wills -- an opposed Concentration check.";
    SC_ABJ; SC_WEA; Cost: 3; Level: 1; Base: SP_EASY; qval: Q_LOC;
    xval: AD_NORM; pval: (LEVEL_SCALED)d8; aval: AR_GLOBE; cval: WHITE;
    sval: WILL; Purpose: EP_ATTACK; Flags: EF_MENTAL;
    On Event EV_CALC_EFFECT {
      int16 n, s;
      if (!GetHandle(EVictim))
        return NOTHING;
      if (!EVictim->isCreature())
        return NOTHING;
      n = LevelAdjust(LEVEL_SCALED,e.vCasterLev);
      if (EVictim->onPlane() != PHASE_MATERIAL)
        s = 8;
      else if (EVictim->isMType(MA_ELEMENTALKIN))
        s = 4;
      else 
        s = 6;
      if (e.MM & MM_MAXIMIZE)
        e.vDmg = n * s;
      else
        e.vDmg = (n)d(s);
      if (e.MM & MM_EMPOWER)
        e.vDmg = (e.vDmg * 15) / 10;
      },
    EV_ISTARGET {
      if (EVictim->onPlane() != PHASE_MATERIAL)
        return SHOULD_CAST_IT;
      if (EVictim->isMType(MA_OUTSIDER))
        return SHOULD_CAST_IT;
      if (EVictim->isMType(MA_ELEMENTALKIN))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      },
    POST(EV_MAGIC_STRIKE) {
      int16 a, b;
      if (e.Resist && EVictim->GetAttr(A_WIS) >= 15)
        {
          EActor->IPrint("The <hObj> locks wills with you!",EVictim);
          EVictim->IPrint("You lock wills with the <hObj>!",EActor);
          EActor->SkillCheck(SK_CONCENT,0,true);
          a = LastSkillCheckResult();
          EVictim->SkillCheck(SK_CONCENT,0,true);
          b = LastSkillCheckResult();
          if (b >= a)
            {
              EActor->IPrint("The <hObj> turns your magic back on you!", EVictim);
              EVictim->IPrint("You turn the wave of psychic torment back on the <hObj>!", EActor);
              ThrowDmg(EV_DAMAGE,AD_NORM,e.vDmg,
                "a reflected Spiritwrack spell",EVictim,EActor);
            }
          else
            {
              EActor->IPrint("Your will is stronger than the <hObj>'s!",EVictim);
              EVictim->IPrint("The <hObj>'s will is stronger than yours!",EActor);
            }
        }
      return NOTHING;
      },
    EV_MAGIC_HIT
      "You scream in agony!" /
      "The <EVictim> screams in agony!";
  }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_AID; pval: -4; }
  
Wizard Spell "Erase" : EA_GENERIC
  { SC_ABJ; Base: SP_EASY; Cost: 2; Level: 1; qval: Q_LOC | Q_TAR | Q_INV;
    sval: WILL; Purpose: EP_CURSE | AIM_AT_ENEMY; 
    Flags: EF_BLIND_PROMPT, EF_AFFECTS_ITEMS;
    Desc: "When cast, this spell erases magical writings as if they
      never were. It will destroy a <9>glyph of warding<1> or a
      manifestation of the <9>symbol<1> spell, as well as any number
      of spellbooks or scrolls on the ground, rendering the latter
      blank but physically damaged. Used against another creature,
      it will blank 1 randomly chosen scroll or spellbook in that
      creature's possession, plus one for every three full levels
      the caster has. A Will save negates the effect if the spell
      is targeted against a living creature.";
    On Event EV_ISTARGET {
      hObj it;
      if (GetHandle(ETarget) == NULL_OBJ)
        return CAN_CAST_IT;
      if (ETarget->isType(T_ITEM))
        if (!(ETarget->isType(T_SCROLL) ||
              ETarget->isType(T_TOME) ||
              ETarget->isType(T_BOOK)))
          return CANNOT_CAST_IT;
      if (ETarget->isCreature())
        for (it=ETarget->FirstInv();it;it=ETarget->NextInv())
          if (it->isType(T_SCROLL) || it->isType(T_BOOK) ||
                 it->isType(T_TOME))
            return SHOULD_CAST_IT;
      return CAN_CAST_IT;
      },
    EV_EFFECT {
      int16 i, c; hObj it, cr; rID xID;
      if (GetHandle(EVictim) != NULL_OBJ && EVictim->isCreature())
        {
          c = 1 + e.vCasterLev/3;
          for (i=0;i!=c;i++)
            {
              ClearCandidates(); cr = GetHandle(EVictim);
              for (it=EVictim->FirstInv();it;it=EVictim->NextInv())
                if (it->isType(T_SCROLL) || it->isType(T_BOOK) ||
                      it->isType(T_TOME))
                  if (it->iID != $"blank spellbook")
                    if (it->iID != $"scroll" || (it->ieID != (rID)0))
                      AddCandidate((int32)it);
              if (nCandidates() == 0)
                { if (!i)
                    APrint(e,"Nothing apparent happens.");
                  return DONE; }
              it = (hObj)RandCandidate();
              SetETarget(e,it);
              RedirectEff(e,$"Erase",EV_MAGIC_HIT);
              SetETarget(e,cr);
            }
          return DONE;
        }
      if (GetHandle(ETarget) != NULL_OBJ && ETarget->isType(T_ITEM))
        {
          if (ETarget->isType(T_SCROLL) || ETarget->isType(T_TOME))
            { ETarget->ieID = (rID)0; ETarget->SetInherentPlus(0); }
          else if (ETarget->isType(T_BOOK))
            ETarget->ChangeIID($"blank spellbook");
          else
            Error("Strange object targeted in Erase!");
          EActor->IDPrint("Magical writing fades from the <hObj>!",
            "Magical writing fades from the <hObj>!",ETarget);
          e.isSomething = true;
          return DONE;
        }
      xID = EMap->TerrainAt(e.EXVal,e.EYVal);
      switch (xID)
        {
          case $"strange rune":
          case $"guardian runes;2":
          case $"guardian runes":
            APrint(e,"The runes vanish!");
            e.isSomething = true;
            EMap->RemoveTerraXY(e.EXVal,e.EYVal,xID);
            if (xID == EMap->TerrainAt(e.EXVal,e.EYVal))
              EMap->WriteTerra(e.EXVal,e.EYVal,$"floor");
           break;
          case $"warded wall":
            APrint(e,"Runes vanish from the wall!");
            e.isSomething = true;
            EMap->WriteTerra(e.EXVal,e.EYVal,$"dungeon wall");
           break;
        }
      for(it=EMap->FirstAt(e.EXVal,e.EYVal);it;it=EMap->NextAt(e.EXVal,e.EYVal))
        {
          if (it->isType(T_SCROLL) || it->isType(T_TOME) || it->isType(T_BOOK))
            {
              SetETarget(e,it);
              e.isSomething = true;
              RedirectEff(e,$"Erase",EV_MAGIC_HIT);
              SetETarget(e,NULL_OBJ);
            }
          if (it->isFeature()) {
            if (it->fID == $"warding rune")
              { 
                it->Remove(true);
                e.isSomething = true;
                APrint(e,"The warding rune vanishes!");
              }
            if (it->isType(T_TRAP))
              if (it->tID == $"symbol of sleep;trap" ||
                  it->tID == $"symbol of pain;trap")
                { 
                  it->Remove(true);
                  e.isSomething = true;
                  APrint(e,"The symbol vanishes!");
                }
              
            if (it->fID == $"warded oak door")
              {
                it->fID = $"oak door";
                it->SetImage();
                e.isSomething = true;
                EMap->Update(e.EXVal,e.EYVal);
                APrint(e,"Runes vanish from the door!");
              }
            }
        }
      if (!e.isSomething)
        APrint(e,"Nothing apparent happens.");
      return DONE;
      };
  }
              
          
/* --ARCANA 1-- */

Wizard / Scroll Spell "Feather Fall" : EA_INFLICT
  { SC_ARC; Base: SP_TRIVIAL; IS_A_BUFF(COST_1); Level: 1; 
    xval: TRAP_EVENT; yval: EVICTIM(PRE(EV_DAMAGE));
    Desc: "__While this spell is active, you float gentley downward rather than
      plummeting, suffering no damage for falls and not becoming prone as a result
      of them, though you can still be tripped.";
    On Event META(EVICTIM(PRE(EV_DAMAGE))) {
      if (e.DType == AD_FALL)
        {
          VPrint(e, "You float gracefully downward.", 
                    "The <EVictim> floats gracefully downward.");
          return DONE;
        }
      return NOTHING; 
      };
  }

Wizard / Scroll Spell "Grease" : EA_TERRAFORM
  { SC_ARC; Base: SP_MEDIUM; Cost: 2; Level: 1; qval: Q_LOC; sval: NOSAVE;
    Purpose: EP_FOIL_PURSUIT | AIM_AT_ENEMY; /* Flags: EF_DLONG;  */
    xval: TERRA_FLOOR; rval: $"pool of grease"; aval: AR_GLOBE; lval: 3;
    Desc: "Creates a patch of grease on open ground that can
      cause foes to slip and fall.";
    On Event MSG_CAST
      "A pool of grease appears!",
    EV_ELAPSED
      "The pool of grease fades away."; }

Wizard / Scroll Spell "Knock" : EA_GENERIC
  { SC_ARC; Base: SP_TRIVIAL; Cost: 1; Level: 1; 
    Purpose: EP_PASSAGE | EP_UNLOCK; Flags: EF_DLONG; 
    hObj h;
    On Event EV_ISTARGET {
      for(h=EMap->FirstThing();h;h=EMap->NextThing()) {
        if (h->isType(T_DOOR) && (!(h->DoorFlags & (DF_OPEN|DF_SECRET))) && 
            EActor->Perceives(h))
          return SHOULD_CAST_IT;
      } 
      return CANNOT_CAST_IT; 
    } ;
    On Event EV_MAGIC_HIT {
      for(h=EMap->FirstThing();h;h=EMap->NextThing()) {
        if (h->isType(T_DOOR) && (!(h->DoorFlags & (DF_OPEN|DF_SECRET))) && 
            EMap->LineOfFire(EActor->x,EActor->y,h->x,h->y,EActor) &&
            EActor->DistFrom(h) <= 6) {
          h->DoorFlags &= ~DF_LOCKED;
          h->DoorFlags |= DF_OPEN;
          h->SetImage();
          e.isSomething = true;
          DPrint(e,"The <hObj> opens.",NULL,h);
          } 
        } 
      return DONE;
    };
    Desc: "Magically causes all doors in your line of fire within 60 
    feet to open. This spell opens locked doors but does expose secret 
    doors. This spell opens wizard-locked doors but does not remove the
    wizard-locked enchantment."; 
  }

Potion / Wizard / Scroll Spell "Mending" : EA_GENERIC
  { SC_ARC; Base: SP_MEDIUM; Cost: 7; Level: 1; qval: Q_INV; 
    pval: 1d6+LEVEL_1PER1; Flags: EF_LOSEMANA;
    Desc: "Repairs 1d6+[caster level] hit points of damage to
      any non-metallic item in the player's possession.";
    On Event 
      EV_ISTARGET {
        hObj it;
        if (!(EVictim->isType(T_ITEM) && !EVictim->isMetallic()))
            return CANNOT_CAST_IT;
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
            if (it->GetHP() < it->MaxHP())
              return SHOULD_CAST_IT; 
        }
        return CAN_CAST_IT; 
      } ,
      EV_RATETARG {
        if (!EVictim->isType(T_ITEM))
          return ABORT;
        if (!EVictim->isMetallic())
          return ABORT;
        if (EVictim->GetHP() >= EVictim->MaxHP())
          return ABORT;
        return NOTHING;
      },
      EV_MAGIC_STRIKE {
        if (EVictim->GetHP() < EVictim->MaxHP()) {
          EVictim->MendHP(e.vDmg);
          if (EVictim->GetHP() >= EVictim->MaxHP())
            VPrint(e,"Your <hObj> has been fully restored.",NULL,EVictim);
          else
            VPrint(e,"Your <hObj> has been partially restored.",NULL,EVictim);
          }
      } ;
    Constants:
      * SERVICE_SPELL_COST 200;
  }

Wizard / Druid Spell "Wall of Fog" : EA_TERRAFORM
  { SC_ARC|SC_AIR|SC_WATER; Base: SP_EASY; Cost: 1; Level: 1; qval: Q_DIR; aval: AR_BARRIER;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY (VS_MISSILES);
    xval: TERRA_FLOOR; rval: $"fog"; Flags: EF_DLONG;
    Desc: "Conjures a curtain of fog useful for, among other things,
      blocking spellcasters and archers' lines of sight. Characters
      with true sight or Nature Sense can see through fog clearly, and
      anyone can see creatures within one square of the fog on either
      side.";
    On Event MSG_CAST
      "A curtain of obscuring fog appears.",
    EV_ELAPSED
      "The curtain of fog disperses.";
  }


Wizard / Scroll Spell "Wizard Lock" : EA_GENERIC
  { SC_ARC; Base: SP_MEDIUM; Cost: 1; Level: 1; qval: 0; 
    Purpose: EP_BUFF | EP_FOIL_PURSUIT | EP_UNLOCK; Flags: EF_DLONG; 
    Desc: "Magically closes, locks and wizard-locks all doors you can perceive.  A wizard-locked door has double the normal hardness and the DC to pick its locks increases by +10. You can open one of your wizard-locked doors instantaneously with a mental command when next to it. You can close one of your wizard-locked doors normally. Doors that are already wizard-locked are unaffected by this spell.";
    hObj h;  
    On Event EV_ISTARGET {
      for(h=EMap->FirstThing();h;h=EMap->NextThing()) 
        if (h->isType(T_DOOR) && !h->HasStati(WIZLOCK) && EActor->Perceives(h))
          return SHOULD_CAST_IT; 
      return CANNOT_CAST_IT; 
    } ;
    On Event EV_MAGIC_HIT {
      for(h=EMap->FirstThing();h;h=EMap->NextThing()) {
        if (h->isType(T_DOOR) && !h->HasStati(WIZLOCK) && EActor->Perceives(h)){
          h->DoorFlags &= ~DF_OPEN;
          h->DoorFlags |= DF_LOCKED;
          h->GainTempStati(WIZLOCK,EActor,e.vDuration,SS_MISC,0,e.saveDC,$"Wizard Lock");
          h->SetImage();
          e.isSomething = true;
          VPrint(e,"The <hObj> is now wizard-locked.",NULL,h);
        }
      } 
      return DONE;
    };
  }

/*
Wizard Spell "Unseen Servant" : EA_NOTIMP
  { SC_ARC; Base: 90; Cost: 5; Level: 1; 
    Purpose: EP_SUMMON; Flags: EF_DLONG;
    rval: $"unseen servant!monster"; }
*/

/* --DIVINATION 1-- */

Wizard / Scroll Spell "Detect Secret Doors" : EA_GENERIC
  { SC_DIV; Base: SP_EASY; Cost: 2; Level: 1; 
    Purpose: EP_PLAYER_ONLY;
    On Event EV_MAGIC_HIT {
      hObj h; int16 found; found = 0;
      for(h = EMap->FirstThing(); h ; h = EMap->NextThing()) 
	    if (dist(EActor->x,EActor->y,h->x,h->y) <= 25 + e.vCasterLev*2) {
          if (h->isType(T_DOOR))
            if (h->DoorFlags & DF_SECRET) {
              h->DoorFlags &= ~DF_SECRET;
              h->SetImage();
              EActor->IPrint("A secret door!");
              /* Assumption: Player #0 */  
              EMap->MarkAsSeen(0,h->x,h->y,0);
              found = 1;
              }
          }
      if (!found)
        EActor->IPrint("You find nothing of note.");
      };
    Desc: "Reveals the presence of secret doors. The range of this spell is
    25 squares plus 2 squares per caster level.";
  }
     
Wizard / Scroll Spell "Detect Stairs" : EA_GENERIC
  { SC_DIV; Base: SP_TRIVIAL; Cost: 10; Level: 1; 
    Purpose: EP_PLAYER_ONLY; 
    Desc: "Tells you where the staircases (up and down) and portals on the
    current level are, and reveals them on the map. May not reveal some
    hidden, secret of special types of staircases.";
    On Event EV_MAGIC_HIT {
      Rect r; int16 x, y; hObj f;

      if (!EVictim->isPlayer())
        return NOTHING;

      r@x1 = 1; 
      r@x2 = EMap->SizeX()-1; 
      r@y1 = 1; 
      r@y2 = EMap->SizeY()-1; 
      for (x=r@x1;x<=r@x2;x++)
        for (y=r@y1;y<=r@y2;y++)
          {
            for (f=EMap->FFeatureAt(x,y);f;f=EMap->NFeatureAt(x,y))
              if ( f != NULL && f->isType(T_PORTAL) )
                /* Assumption: Player #0 */  
                EMap->MarkAsSeen(0,x,y,0);
          }
      EMap->VUpdate(EVictim->x,EVictim->y);
      return NOTHING;
      };
  }
  
Effect "Know Alignment" : EA_NOTIMP
  { SC_DIV; Base: SP_MEDIUM; Cost: 2; Level: 1; qval: Q_TAR;
    Purpose: EP_PLAYER_ONLY;
    Desc: "A beneficiary of this spell instantly recognizes the
      alignment of any creature; this information is displayed
      whenever the 'L'ook command is used to examine the creature."; 
    On Event EV_MAGIC_HIT {
      EActor->IPrint("No alignments yet.");
      return DONE;
      };
  }
      
Potion / Wizard / Scroll Spell "True Strike" : EA_INFLICT
  { SC_DIV; Base: SP_EASY; Cost: 2; Level: 1; 
    Purpose: EP_BUFF (VS_MELEE); 
    Flags: EF_SHOWNAME, EF_DXLONG, EF_ONCEONLY, EF_NOTBAD;
    xval: ADJUST_INS; yval: A_HIT; pval: 10; 
    Desc: "Grants you a +10 insight toHit bonus (due to preternatural 
      perception) on your next single attack roll.";
  }

Wizard Spell "Read Magic" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_1X); Level: 1; Purpose: EP_BUFF;
    Flags: EF_SHOWNAME; On Event MSG_BLASTNAME "ReadMagic" / "RM"; 
    xval: SKILL_BONUS; yval: SK_DECIPHER; pval: LEVEL_MIN5;
    Desc: "Casting this spell grants you an exceptional facility
      for reading and correctly interpreting magical writings,
      granting you a bonus to the Read Magic skill equal to your
      caster level (minimum +5).";
  }
  
Wizard Spell "Daggerspell" : EA_INFLICT
  {
    SC_DIV; IS_A_BUFF(COST_2); Level: 1; Purpose: EP_BUFF;
    Desc: "In casting this spell, a mage grants herself the
      facility to use a dagger as an instrument of divination
      like the classical dowsing rod -- a symbolic weapon to
      cut away obfuscation and reveal truth. Instead of
      attuning it to seek out water, however (as is done
      with a dowsing rod), the mage attunes the dagger to
      seek out flaws and weaknesses. In the hands of a mage
      with this spell, a dagger is drawn intuitively to the
      flaws in a structure or enemy's armour.\n
      __A specialist Diviner receives an insight bonus to damage
      rolls equal to her Intelligence bonus when using a dagger;
      for other mages, this bonus caps out at +2. In any mage's 
      hands the base threat range of the weapon is treated as 
      being 18-20. When using a dagger, she can halve the hardness
      of an object when she attacks it, and an armour-wearing
      enemy's Coverage is reduced by 4 against her attacks.\n
      __Creatures with Nondetection are unaffected by this spell,
      and the caster gains no extra damage or increased threat
      range aainst them.";
    xval: TRAP_EVENT; yval: EV_STRIKE;
    On Event META(EV_STRIKE) {
      int16 bon;
      if (e.AType == A_SWNG || e.AType == A_HURL)
        if ((GetHandle(EItem) != NULL_OBJ && EItem->iID == $"dagger") ||
            (GetHandle(EItem2) != NULL_OBJ && EItem2->iID == $"dagger") )
          {
            if (EVictim->XORStatiVal(NONDETECTION) & PER_DETECT)
              return NOTHING;
            bon = EActor->Mod(A_INT);
            if (!EActor->HasStati(SPECIALTY_SCHOOL,2))
              bon = min(bon,2);
            bon = max(0,bon);
            e.bDmg += bon;
            e.strDmg += Format(" %+d insight", bon);
            e.vThreat = 20 - (((21 - e.vThreat)/2)*3);
            e.halfHardness = true;
            e.vPenetrateBonus += 4;
          }
      return NOTHING;
      };
  }
  
Wizard Spell "Arrow Mind" : EA_INFLICT
  { SC_DIV; Cost: 3; Base: SP_MEDIUM; Level: 1;
    Desc: "Casting this spell, a mage or ranger enters a trance state of
      preternatural awareness and acute focus on her archery. She gains
      the benefits of the Zen Archery and Defensive Shot feats, as well
      as a +3 bonus to hit and a +25~ bonus to speed on attacks with a 
      bow. At the end of the spell's duration, the caster loses one Fatigue
      point from the intense devotion of the trance. The effect lasts 10
      rounds, plus three rounds per point of the caster's Constitution
      bonus (if any).";
    xval: ADJUST_CIRC; yval: A_HIT_ARCHERY; pval: +3; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_SPD_ARCHERY; pval: +5; }
and EA_INFLICT
  { xval: EXTRA_FEAT; yval: FT_DEFENSIVE_SHOT; }
and EA_INFLICT
  { xval: EXTRA_FEAT; yval: FT_ZEN_ARCHERY;
    On Event EV_REMOVED {
      if (e.EParam == BONUS_FEAT && e.vVal == FT_ZEN_ARCHERY)
        EActor->LoseFatigue(1,false);
      return NOTHING;
      },
    EV_CALC_EFFECT {
      e.vDuration = 10 + max(0,EActor->Mod(A_CON)*3);
      };
  }

/* --ENCHANTMENT 1-- */


Wizard / Scroll Spell "Charm Person" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 3; Level: 1; sval: WILL;
    Purpose: EP_CURSE (VS_MENTAL); tval: MA_PERSON; 
    xval: CHARMED; yval: CH_CHARM; qval: Q_TAR;
    Flags: EF_DLONG, EF_MENTAL, EF_LIM_MTYPE, EF_CASTER_IMMUNE; 
    Desc: "Improves a hostile, sapient humanoid's temperment
      towards you, such that it ceases attacking and becomes a
      neutral creature."; 
	  On Event EV_MAGIC_HIT
	    "The <EVictim> gives way to your charm." /
	    "You fall under the influence of the <EActor>." /
	    "The <EVictim> falls under the influence of the <EActor>.",
	  EV_ELAPSED
	    "You shake off the effect of the charm." /
	    "The <EActor> shakes off the effect of the charm.";
  }

Wizard / Scroll Spell "Cause Fear" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 2; Level: 1; sval: WILL;
    Purpose: EP_CURSE (VS_MENTAL); qval: Q_TAR;
    xval: AFRAID; Flags: EF_MENTAL, EF_FEAR;
    Desc: "Causes one target creature to be overcome with mortal
      terror, such that it will flee from you to the best of its
      ability for the spell's duration.";
  }

Wizard Spell "Friends" : EA_INFLICT
  {
    SC_ENC; Level: 1; IS_A_BUFF(COST_1X);
    xval: SOCIAL_MOD; yval: MA_ALL; pval: 2;
    Desc: "Casting this spell imbues you with an aura of affiability
      and good candor, causing other creatures to react favourably
      to you. You receive a +2 (+4 for specialist Enchanters) social
      modifier to all social actions taken against other characters,
      and shop prices are calculated for you as if your Diplomacy
      skill rating was that much higher.";
    On Event EV_CALC_EFFECT {
      if (GetHandle(EActor) == NULL_OBJ)
        return NOTHING;
      if (EActor->HasStati(SPECIALTY_SCHOOL,3))
        SetPVal(e,+4);
      return NOTHING;
      };
  }

Wizard Spell "Nystrom's Magical Aura" : EA_INFLICT
  { SC_ENC; SC_ILL; Base: SP_EASY; Cost: 3; Level: 1; qval: Q_INV;
    xval: MAGIC_AURA; pval: 100; Flags: EF_PERSISTANT;
    Desc: "__Casting this spell imbues a chosen item with a surreal
      quality of power and mystique that misleads the intuition
      and divinations of others into believing that items is a
      powerful magical treasure surpassing all others, and they
      will be led by the spell to covet it intensely. Intelligent,
      tool-using monsters will seek to acquire this item, and will 
      equip it in preferance to others if this possess it. Thus, 
      this spell can be used as a kind of trap, causing monsters 
      to not use their real magical equipment in favour of fakes, or
      as a thrown lure to draw a monster to a specific location.\n
      __The item is also much more desirable to thieves and pickpockets 
      than a normal item of its type would be, but most merchants have
      devised a way of detecting the use of this spell. Selling an
      item affected by this spell is a chaotic act; if the seller is
      not evil, it is also an evil one.";
    On Event EV_MAGIC_HIT
      "The <EVictim> glows with a blindingly bright silvery light.";
  }

Wizard / Scroll Spell "Sleep" : EA_INFLICT
  { SC_ENC; SC_THA; Base: SP_MEDIUM; Cost: 3; Level: 1; sval: WILL; 
    Purpose: EP_CURSE (VS_MENTAL); qval: Q_TAR | Q_LOC; 
    Flags: EF_DLONG, EF_MENTAL, EF_CASTER_IMMUNE; lval: 2;
    xval: ASLEEP; yval: SLEEP_NATURAL; 
	aval: AR_GLOBE; cval: AZURE;
	On Event EV_ISTARGET {
	  return EVictim->ChallengeRating() > max(2,
	              EActor->ChallengeRating() / 2) ?
	              CANNOT_CAST_IT :
	              SHOULD_CAST_IT;
	  };
    Desc: "Causes creatures whose levels are half your own 
      or less within a 20 foot (2 square) radius globe to 
      fall into slumber until woken or attacked; creatures
      with two or fewer Hit Dice are affected regardless of 
      their level.";
  }

Wizard Spell "Spook" : EA_INFLICT
  { SC_ENC; IS_A_BUFF(COST_1); Level: 1; 
    Flags: EF_CASTER_IMMUNE, EF_MENTAL, EF_FEAR, EF_NOTBAD,
           EF_PERSISTANT;
    rval: FI_MODIFIER|FI_MOBILE; aval: AR_MFIELD; lval: 3; cval: SHADOW;
    xval: ADJUST_MOR; yval: A_AID; pval: -2;  
    Desc: "Manifests a disquieting aura around you, such that living
      beings are unsettled and demoralized, and suffer a -2 morale
      penalty to all their rolls.";
    On Event 
      MSG_CAST
        "You evoke an disturbing aura around yourself." /
        "The <EActor> evokes an unsettling aura around <him:EActor>self.",
      EV_FIELDON
        "You feel disquieted." /
        "The <EActor> seems unsettled.",
      EV_FIELDOFF
        "You feel less disturbed now." /
        "The <EActor> seems more composed now.";
  }



/* --EVOCATION 1-- */

Wizard / Scroll Spell "Force Bolt" : EA_BLAST
  { SC_EVO|SC_FORCE; Base: SP_MEDIUM; Cost: 4; Level: 1; qval: Q_DIR | Q_TAR;
    Purpose: EP_ATTACK (VS_GENERAL); cval: EMERALD;
    xval: AD_KNOC; pval: 1d4;
    sval: REF partial; aval: AR_BOLT; }
  and EA_BLAST
  { xval: AD_BLUNT; pval: (LEVEL_EVERY3)d12; 
    aval: AR_BOLT; sval: REF; }
  and EA_INFLICT
  { xval: STUNNED; sval: REF; Flags: EF_D1ROUND, EF_ATTACK,
                                     EF_HARDSAVE4, EF_HARDSAVE2; 
    aval: AR_BOLT;
    Desc: "Projects a powerful unseen force that batters a single
      target for 1d12 points of blunt damage, plus 1d12 for every
      three additional caster levels; the bolt may also knock its
      victim back, and if the victim fails the Reflex save for half
      damage, they are also stunned for one round. Force bolt is a
      weapon-like spell and requires an attack roll to hit. This
      spell has an inherent +6 bonus to its save DC."; 
    On Event MSG_BLASTNAME "force bolt"; }
      

 Wizard Spell "Magic Missile" : EA_BLAST
  { SC_EVO|SC_FORCE; Base: SP_EASY; Cost: 1; Level: 1; xval: AD_MAGC; 
    Purpose: EP_ATTACK (VS_GENERAL); cval: WHITE;
    pval: (LEVEL_EVERY2)d4+(LEVEL_EVERY2); sval: NOSAVE; 
    Flags: EF_NO_BONUS_DMG, EF_COMMON; 
    qval: Q_TAR; aval: AR_BOLT; 
    Desc: "Strikes a visible foe with bolts of magical energy inflicting 1d4+1 
      damage; creates 1 bolt every odd level."; }

 Wizard Spell "Shocking Grasp" : EA_BLAST
  { SC_EVO; SC_THA; Base: SP_TRIVIAL; Cost: 1; Level: 1; 
#ifdef TOUCH_TO_BOLT
  aval: AR_BOLT; qval: Q_DIR | Q_TAR; 
#else
  aval: AR_TOUCH; lval: LEVEL_MIN3;
#endif
    xval: AD_ELEC; pval: 1d8+(LEVEL_1PER1); 
    Purpose: EP_ATTACK; Flags: EF_NOTBAD, EF_SHOWNAME, EF_DLONG, EF_CANCEL; 
    cval: YELLOW;
    Desc: "Projects lightning through your grip, inflicting 1d8 + 
      you caster level points of damage on the first target you
      touch. You may use this touch attack one time per caster
      level (minimum 3 times).";
    On Event MSG_CAST
      "Your hands crackle with electricity!" / 
      "The <EActor>'s hands crackle with electricity!",
	EV_MAGIC_STRIKE
	  "Fzzap!" /
	  "Fzzap!"; }

 Wizard / Scroll Spell "Burning Hands" : EA_BLAST
  { SC_EVO|SC_FIRE; Base: SP_TRIVIAL; Cost: 2; Level: 1; /*sval: REF partial;*/
    xval: AD_FIRE; pval: (LEVEL_MAX5)d4; qval: Q_DIR;
    Purpose: EP_ATTACK (VS_FIRE); Flags: EF_DEFENSIVE;
    On Event EV_EFFECT {
      hObj h1,h2,h3; 

      #define HIT_SPOT(vx,vy,h)                                       \
        if (EMap->InBounds(EActor->x + vx,EActor->y + vy) &&          \
              !EMap->SolidAt(EActor->x + vx,EActor->y + vy))          \
          {                                                           \
            ETerm->PutGlyph(EActor->x + vx,                           \
                            EActor->y + vy,                           \
                            GLYPH_VALUE(GLYPH_BULK, PINK));           \
            h = EMap->FCreatureAt(EActor->x + vx,EActor->y + vy);      \
          }                                                       
      h1 = NULL; h2 = NULL; h3 = NULL;
      if (DirX(e.EDir) && DirY(e.EDir)) {
        HIT_SPOT(DirX(e.EDir),DirY(e.EDir),h1)
        HIT_SPOT(DirX(e.EDir),0,h2)
        HIT_SPOT(0,DirY(e.EDir),h3)
        }
      else if (DirX(e.EDir)) {
        HIT_SPOT(DirX(e.EDir),0,h1)
        HIT_SPOT(DirX(e.EDir),1,h2)
        HIT_SPOT(DirX(e.EDir),-1,h3)
        }
      else if (DirY(e.EDir)) {
        HIT_SPOT(0,DirY(e.EDir),h1)
        HIT_SPOT(1,DirY(e.EDir),h2)
        HIT_SPOT(-1,DirY(e.EDir),h3)
        }
      else {
        e.SetParam(1,EActor);
        ReThrow(EV_MAGIC_STRIKE,e);
        e.isSomething = true;
        return DONE;
        }
      if ((EActor != NULL && EActor->isPlayer()) || 
          (EVictim != NULL && EVictim->isPlayer())) { 
        ETerm->TermUpdate();
        ETerm->StopWatch(500);
        ETerm->RefreshMap();
      } 
      if (h1) {
        e.SetParam(1,h1);                                      
        ReThrow(EV_MAGIC_STRIKE,e);                           
        }
      if (h2) {
        e.SetParam(1,h2);                                      
        ReThrow(EV_MAGIC_STRIKE,e);                           
        }
      if (h3) {
        e.SetParam(1,h3);                                      
        ReThrow(EV_MAGIC_STRIKE,e);                           
        }
      e.isSomething = true;
      return DONE;
      #undef HIT_SPOT
      },
    EV_ISTARGET {
      /* This is included so that the monster AI won't cast burning hands at
         targets that are out of the (customized) area of effect. */
      if (!EVictim->isBeside(EActor))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    MSG_BLASTNAME "sheet of flame";
    Desc: "Causes jets of flame to spread out of your outstretched fingertips
      in a fan pattern, striking creatures in the three squares nearest you in
      the direction you select for 1d4 points of damage per caster level (max
      5d4).";
  }

Wizard / Scroll Spell "Floating Disc" : EA_INFLICT
  { SC_EVO|SC_FORCE; IS_A_BUFF(COST_1); Level: 1; 
    Purpose: EP_BUFF | EP_PLAYER_ONLY; 
    xval: IGNORE_SLOT_WEIGHT ; yval: SL_PACK;
    Desc: "You create a slightly concave, circular plane of force that
    follows you about and carries your pack for you. The disk is 3 feet in
    diameter and 1 inch deep at its center.  The disk floats approximately
    3 feet above the ground at all times and remains level. It floats along
    horizontally with you and will accompany you as you move. While this
    spell is in effect the weight of your backpack (and its contents) will
    not count against your encumbrance." ;
    On Event MSG_STATINAME "FloatDisc" / "Disc"; 
    On Event EV_MAGIC_HIT
      "A conjured floating disk supports your pack." /
      "A conjured floating disk appears near the <EVictim>.",
    EV_REMOVED
      "Your conjured floating disk vanishes." /
      "The <EVictim>'s conjured floating disk vanishes."; }

/* --ILLUSION 1-- */


Wizard / Scroll Spell "Chromatic Orb" : EA_GENERIC
  { SC_ILL | SC_ARC | SC_LIGHT; Base: SP_MEDIUM; Cost: 0; Level: 1; qval: Q_TAR | Q_DIR;
    Purpose: /* EP_ATTACK (VS_GENERAL) | */ EP_PLAYER_ONLY; // ww: can be removed when julian fixes the 'default' bug
    cval: COL_RAINBOW; Flags: EF_ATTACK, EF_VARMANA; aval: AR_BOLT;
    int32 ch, i;
    On Event EV_EFFECT {
      i = e.vCasterLev;
      if (i > 20 && EActor->cMana() >= 21)
        ch = EActor->ChoicePrompt("Clear, White, Red, Orange, Yellow, Green, Azure, Violet or Black?","cwroygavb",'b');
      else if (i >= 17 && EActor->cMana() >= 18)
        ch = EActor->ChoicePrompt("Clear, White, Red, Orange, Yellow, Green, Azure or Violet?","cwroygav",'v');
      else if (i >= 15 && EActor->cMana() >= 15)
        ch = EActor->ChoicePrompt("Clear, White, Red, Orange, Yellow, Green or Azure?","cwroyga",'a');
      else if (i >= 12 && EActor->cMana() >= 12)
        ch = EActor->ChoicePrompt("Clear, White, Red, Orange, Yellow or Green?","cwroyg",'g');
      else if (i >= 9 && EActor->cMana() >= 9)
        ch = EActor->ChoicePrompt("Clear, White, Red, Orange or Yellow?","cwroy",'y');
      else if (i >= 7 && EActor->cMana() >= 7)
        ch = EActor->ChoicePrompt("Clear, White, Red or Orange?","cwro",'o');
      else if (i >= 5 && EActor->cMana() >= 6)
        ch = EActor->ChoicePrompt("Clear, White or Red?","cwr",'r');
      else if (i >= 3 && EActor->cMana() >= 5)
        ch = EActor->ChoicePrompt("Clear or White?","cw",'w');
      else if (EActor->cMana() >= 4)
        ch = 'c';
      else {
        EActor->IPrint("You don't have enough mana!");
        return ABORT;
        }
      switch (ch) {
        case  27: return ABORT;  /* KEY_ESC */
        case 'c': EActor->LoseMana(4);  e.cval = GREY; break; // 1d8 normal damage at 1st, 2d8 at 3rd, etc.
        case 'w': EActor->LoseMana(5);  e.cval = WHITE; break; // 1d8 sun/light damage + $"faerie fire"
        case 'r': EActor->LoseMana(6); e.cval = PINK; break; // 1d8 fire damage
        case 'o': EActor->LoseMana(7); e.cval = BROWN; break; // 1d8 psychic damage + confusion
        case 'y': EActor->LoseMana(9); e.cval = YELLOW; break; // 1d8 shock damage + stunning
        case 'g': EActor->LoseMana(12); e.cval = GREEN; break; // 1d8 poison damage + sickness
        case 'a': EActor->LoseMana(15); e.cval = AZURE; break; // 1d8 acid (?) damage + paralysis
        case 'v': EActor->LoseMana(18); e.cval = PURPLE; break; // 1d8 ??? damage; petrification; slowed if saved
        case 'b': EActor->LoseMana(21); e.cval = BLACK; break; // 1d8 necro damage + death or paralysis
        }
      return NOTHING;
      },
    EV_STRIKE {
      if (ch == 'c')
        e.isGhostTouch = true;
      return NOTHING;
      },
    EV_MAGIC_HIT {
      hText ht;
      i = (e.vCasterLev + 1)/2;
      if (e.isCrit)
        i = i*2;
	    
	    if (ch == 'w') {
	      if (e.MM & MM_MAXIMIZE)
	        i = i*6;
	      else
	        i = (i)d6;
	      }
      else {
      	if (e.MM & MM_MAXIMIZE)
	        i = i*8;
	      else
	        i = (i)d8;
	      }
	    if (e.MM & MM_EMPOWER)
	      i = (i * 15) / 10;
      i += EActor->Mod(A_WIS);

      TPrint(e,"Your orb strikes an <EVictim>!",
               "A coloured orb strikes you!",
               "A coloured orb strikes the <EVictim>!");
          
      switch(ch) {
        case 'c':
          ThrowDmg(EV_DAMAGE,AD_MAGC,i,"chromatic orb",EActor,EVictim);
          ht = "pure magic";
         break;
        case 'w':
          if (EVictim->HasMFlag(M_LIGHT_AVERSE) || EVictim->isMType(MA_WRAITH))	{
            EVictim->GainTempStati(AFRAID,EItem,1d4,SS_ENCH,FEAR_PANIC,-1);
		      	EVictim->StatiMessage(AFRAID);
    			  }		    
          ThrowDmg(EV_DAMAGE,AD_SUNL,i,"chromatic orb",EActor,EVictim);
          ht = "sunlight";
  
		     break;
        case 'r':
          ThrowEff(EV_MAGIC_STRIKE,$"faerie fire",EActor,EVictim);
          ThrowDmg(EV_DAMAGE,AD_FIRE,i,"chromatic orb",EActor,EVictim);
          ht = "fire";
         break;
        case 'o':
          if (!EVictim->SavingThrow(WILL,e.saveDC, SA_CONF|SA_SPELLS)) {
            EVictim->GainTempStati(CONFUSED,EItem,1d6+1,SS_ENCH,-1,-1);
			      EVictim->StatiMessage(CONFUSED);
	      		}		    
          ThrowDmg(EV_DAMAGE,AD_PSYC,i,"chromatic orb",EActor,EVictim);
          ht = "psychic";
         break;
        /* case 'y': */
        default:
          /* For now, all monster casters above 9th use the yellow orb,
             as the others aren't implemented yet. */
          if (!EVictim->SavingThrow(WILL,e.saveDC, SA_CONF|SA_SPELLS)) {
            EVictim->GainTempStati(STUNNED,EItem,2d8,SS_ENCH,-1,-1);
			      EVictim->StatiMessage(STUNNED);
	      		}		    
          ThrowDmg(EV_DAMAGE,AD_ELEC,i,"chromatic orb",EActor,EVictim);
          ht = "electrical";
         break;
        }
      e.strBlastDmg = XPrint("<13>Damage:<7> <hText><Num>d8<hText><hText><hText> = <Num> <hText>",
             e.isCrit ? "(" : "", (e.vCasterLev + 1)/2, (e.MM & MM_EMPOWER) ? " + 50%" : "", 
             e.strDmg, e.isCrit ? ") x2" : "", i, ht);

  	  if (EVictim->isDead())
	      TPrint(e,"The <EVictim> is slain!", "",
		             "The <EVictim> is slain!");
      return DONE; 
      },
    MSG_BLASTNAME 
      "coloured orb";
    Desc: "__Creates orbs of various colour that inflict 1d8 points of damage (of
      varying types, or 1d6 for the white orb) per odd caster level and cause various 
      special effects on a failed saving throw. A ranged touch attack determines if 
      the orb hits a desired target or not.\n
   	  __<9>Clear Orb (Level 1, 4 mana):<1> Inflicts pure magic (like <9>magic missile<1>) damage, 
	    and strikes true against incorporeal creatures.\n
	    __<9>White Orb (Level 3, 5 mana):<1> Inflicts sunlight-based damage, and causes targets
  	  who are vulnerable to light to become frightened for 1d4 rounds.\n
	    __<9>Red Orb (Level 5, 6 mana):<1> Inflicts fire damage and illuminates the target as per 
	    <9>faerie fire<1>.\n
  	  __<9>Orange Orb (Level 7, 7 mana):<1> Inflicts psychic damage and confuses the target for
	    1d6+1 rounds if they fail a Will save.\n
	    __<9>Yellow Orb (Level 9, 9 mana):<1> Inflicts lightning damage and stuns the target for
	    2d8 rounds if they fail a Will save.";
  }

Wizard Spell "Colour Spray" : EA_GENERIC
  {
    SC_ILL|SC_EVO|SC_LIGHT; Base: SP_MEDIUM; Cost: 3; Level: 1; 
    qval: Q_DIR | Q_TAR;
    Purpose: EP_ATTACK (VS_GENERAL); Flags: EF_HARDSAVE4; 
    cval: COL_RAINBOW; aval: AR_BEAM; sval: REF;
    On Event EV_ISTARGET {
	  if (!ETarget->isCreature())
	    return CANNOT_CAST_IT;
      if (EVictim->ChallengeRating() > (e.vCasterLev + 4))
        return CANNOT_CAST_IT;
      if (EVictim->isBlind())
        return CANNOT_CAST_IT;
      if (EVictim->HasMFlag(M_MINDLESS))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
	  EV_MAGIC_STRIKE 
      "Your spray of colours strikes an <EVictim>." /
      "The <EActor>'s spray of colours strikes you." /
      "The <EActor>'s spray of colours strikes an <EVictim>.",
    EV_MAGIC_HIT {
      if (EVictim->ChallengeRating() < (e.vCasterLev / 2)) {
        EVictim->GainTempStati(STUNNED, NULL, 2d6, SS_ENCH, -1, -1);
        EVictim->GainTempStati(BLIND, NULL, 2d6, SS_ENCH, -1, -1);
        }
      else if (EVictim->ChallengeRating() < e.vCasterLev) {      
        EVictim->GainTempStati(STUNNED, NULL, 2, SS_ENCH, -1, -1);
        EVictim->GainTempStati(BLIND, NULL, 1d6+1, SS_ENCH, -1, -1);
        }
      else {
        EVictim->GainTempStati(STUNNED, NULL, 2, SS_ENCH, -1, -1);
		    }
      return DONE;
      };
    Desc: "This spell projects a splash of multicoloured light that may 
      blind or stun creatures it strikes -- creatures whose CR is less
      than half the caster's level are blinded and stunned for 2d6
      turns, other creatures whose CR is lower than the caster's
      level are blinded for 1d6+1 turns and stunned for 2 turns and
      creatures whose CR equals or exceeds the caster's level are
      merely stunned for 2 turns. A Reflex saving throw negates the
      effect, but the spell gains a +4 bonus to its DC.";
  }

Wizard / Scroll Spell "Phantasmal Force" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 4; Level: 1;
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: 0; 
    rval: $"generic summons"; /* HACKFIX */
    Desc: "This spell creates an illusionary creature, force 
      or object. The illusion affects only one sense, and is
      therefore automatically disbelieved by any creature with
      tremorsense, sharpened senses, scent or blindsight. An
      illusion created by this spell winks out of existance
      if even one person (other than the caster) disbelieves 
      it.\n
      __Sustaining a Phantasmal Force requires concentration --
      the caster suffers a -2 general penalty while the illusion
      is active, and suffering damage requires a Concentration
      check (DC 11 + the amount of damage) to avoid the illusion 
      winking out of existance."; 
    Flags: EF_DLONG, EF_SHOWNAME;
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      hObj hPhantasm;
      if (e.eID != $"Phantasmal Force")
        return NOTHING;
      if (e.illType != 'c')
        return NOTHING;
      hPhantasm = EMap->GetEncounterCreature(0);
      if (hPhantasm == NULL_OBJ)
        return NOTHING;
      if (!hPhantasm->isCreature())
        return NOTHING;
      EActor->GainPermStati(ADJUST_CIRC,hPhantasm,SS_MISC,A_AID,-2, $"Phantasmal Force");
      EActor->GainPermStati(TRAP_EVENT,hPhantasm,SS_MISC,POST(EVICTIM(EV_DAMAGE)),0, $"Phantasmal Force");
      return NOTHING;
      },
    META(POST(EVICTIM(EV_DAMAGE))) {
      hObj hPhantasm;
      if (!EVictim->SkillCheck(SK_CONCENT,11 + e.aDmg,true)) {
          //do {
            hPhantasm = EVictim->GetEffStatiObj(
              ADJUST_CIRC,$"Phantasmal Force");
            if (hPhantasm == NULL_OBJ)
              return NOTHING;
            EVictim->IPrint("You lose concentration on the illusionary <hObj>!",
              hPhantasm);
            hPhantasm->Remove(true);
          //  }
          //while (EVictim->HasEffStati(ADJUST_CIRC,$"Phantasmal Force"));
        }
      else
        EVictim->IPrint("You maintain concentration!");
      return NOTHING;
      },
    MSG_STATINAME "Concentrating" / "Concent";
    Lists:
      * SPELL_LIST $"magic missile" $"force bolt" $"burning hands"
                   $"ice dagger" $"sandblast" $"sunscorch"
                   $"scorcher" $"electric loop";
  }

Wizard Spell "Ventriloquism" : EA_GENERIC
  { SC_ILL; Base: SP_TRIVIAL; Cost: 1; Level: 1; qval: Q_TAR | Q_LOC;
    Purpose: EP_PLAYER_ONLY; 
    Desc: "Allows you to project your voice, which will typically cause
    monsters to investigate the target area. The target for this spell is
    a location on the map to which you project your voice. All monsters
    within a 16 square radius of the target square will hear the
    projection.";
    On Event EV_MAGIC_HIT {
      EMap->MakeNoiseXY(e->EXVal,e->EYVal,16); 
      return DONE;
    },
    MSG_CAST "You project your voice." /
             "You think you hear the <EActor> speaking.";
  }

Wizard Spell "Change Self" : EA_INFLICT
  { SC_ILL; Base: SP_EASY; Cost: 5; Level: 1; 
    Desc: "Casting this spell crafts a dynamic illusion over your body,
      allowing you to use the Disguise skill with a +10 magic bonus.
      The spell also removes the need to spend an hour preparing the
      disguise, and removes the need for a disguise kit. However, the
      effect is an illusion, and is automatically penetrated by anything
      which penetrates illusions, including <9>true sight<1>."; 
    xval: SKILL_BONUS; yval: SK_DISGUISE; pval: +10; Flags: EF_ONCEONLY;
    On Event POST(EV_MAGIC_HIT) {
      EActor->GainPermStati(INNATE_KIT,NULL,SS_MISC,SK_DISGUISE);
      ReThrow(EV_DISGUISE,e);
      EActor->RemoveStati(INNATE_KIT,SS_MISC,SK_DISGUISE);
      if (!EActor->HasStati(DISGUISED))
        EActor->RemoveEffStati($"Change Self");
      return NOTHING;
      };
  }

Wizard / Scroll Spell "Dancing Lights" : EA_SUMMON
  { SC_ILL; SC_EVO; SC_LIGHT; Cost: 2; Level: 1; Base: SP_EASY;
    qval: Q_LOC; rval: $"globes of light";
    Desc: "Conjures a number of glowing globes of light not
      unlike a will o' wisp that move about as you direct.
      The globes shed light in a 20 foot radius around them,
      and can be used to distract creatures with Intelligence
      below 14, and frighten creatures of CR 2 or lower; on a
      critical hit, they can also blind. The globes are
      incorporeal, but very weak, possessing only one hit
      point and thus being easily dispelled by any attack
      which can strike them."; }
      
Monster "globes of light" : MA_CONSTRUCT
  { Image: bright cyan GLYPH_FLOOR2; Size: SZ_TINY; Mana: 0;
    CR: 1/2; HD: 1; Def: 16; Hit: 0; Mov: 250%; Spd: 75%;
    Str 0, Dex 18, Con 3, Int 0, Wis 12, Cha 0;
    Attk: A_RUBS for 0d0 AD_SPE1;
    ABILITY(CA_BLINDSIGHT,9); 
    Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUN,
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD, DF_PSYC,
            DF_FIRE, DF_SONI, DF_COLD, DF_ACID, DF_ELEC,
            DF_POIS;
    Flags: M_NOHANDS, M_NOLIMBS, M_NOHEAD, M_NOPOLY,
      M_NOGEN, M_NOGENO, M_MAGC, M_FIRE, M_MINDLESS,
      M_PSYCHO, M_NEUTER, M_NO_CORPSE, M_INCOR; 
    Desc: "These globes of light are the result of a wizard's
      <9>dancing lights<1> spell.";
    On Event EV_DAMAGE {
      if (e.DType == AD_SPE1)
        {
          if ( EVictim->HasMFlag(M_MINDLESS) ||
               EVictim->HasMFlag(M_BLIND) )
            {
              e.Immune = true;
              return DONE;
            }
          if (EVictim->HasMFlag(M_LIGHT_AVERSE))
            if (EVictim->ChallengeRating() <= 2)
              if (!EVictim->SavingThrow(WILL,14,
                     SA_SPELLS|SA_MAGIC|SA_FEAR|SA_ILLUS))
                {
                  EVictim->GainTempStati(AFRAID,EActor,1d4+1,
                    SS_ENCH,FEAR_PANIC,0,$"dancing lights",
                    EActor->GetStatiObj(SUMMONED)->CasterLev());
                }
          if (!EVictim->SavingThrow(WILL,14,
                 SA_SPELLS|SA_MAGIC|SA_ILLUS))
            {
              EVictim->GainTempStati(EXPOSED,EActor,1d4+1,
                SS_ENCH,0,0,$"dancing lights",
                EActor->GetStatiObj(SUMMONED)->CasterLev());
            }
          else 
            e.Resist = true;
          return DONE;
        }
      return NOTHING;
    };
  }
    

/* --NECROMANCY 1-- */

Wizard / Scroll Spell "Minor Drain" : EA_BLAST
  { SC_NEC; Base: SP_MEDIUM; Cost: 1; Level: 1; xval: AD_NECR; 
    Purpose: EP_ATTACK | EP_FIX_TROUBLE (TROUBLE_INJURY); cval: WHITE;
    pval: 1d4; sval: NOSAVE; 
    qval: Q_DIR|Q_TAR|Q_LOC; aval: AR_BOLT; 
    Desc: "With this spell, the wizard drains the life force from a target
    and adds it to his own. The target creature suffers 1-4 damage, while
    the wizard gains 1-4 hit points. "; 
    On Event EV_MAGIC_HIT {
      EActor->cHP = min(EActor->mHP+EActor->GetAttr(A_THP),EActor->cHP + e.vDmg); 
      return NOTHING; 
    }; 
  } 

 Wizard Spell "Chill Touch" : EA_BLAST
  { SC_NEC|SC_COLD; Base: SP_TRIVIAL; Cost: 1; Level: 1; 
    aval: AR_TOUCH; lval: LEVEL_MIN3;
    Purpose: EP_ATTACK (VS_NECRO); cval: SHADOW; 
    xval: AD_NECR; pval: 1d6+LEVEL_1PER2; tval: MA_LIVING; 
    Flags: EF_LIM_MTYPE, EF_NOTBAD, EF_DLONG, EF_SHOWNAME, EF_CANCEL;  }
  and EA_BLAST
  { 
  aval: AR_TOUCH; 
  xval: AD_DRST; pval: 1d2; sval: FORT; tval: MA_LIVING; }
  and EA_INFLICT
  { 
  aval: AR_TOUCH; 
  xval: AFRAID; sval: WILL; tval: MA_UNDEAD;
    Desc: "Your hands glow with a cold blue aura of negative
      energy, and your touch inflicts 1d6+[Caster Level / 2] points
      of damage (max 1d8+10) to the living, as well as draining
      1d2 points of Strength. Against undead, your touch causes
      great terror. You may use this touch attack one time per 
      caster level (minimum 3 times).";
    On Event MSG_CAST
      "Your hands glow with a cold blue aura." /
      "The <EActor>'s hands glow with a cold blue aura.";
  }

Effect "Chill Blood" : EA_BLAST
  { SC_NEC|SC_COLD; Base: SP_MEDIUM; Cost: 4; Level: 1; sval: REF partial;
    xval: AD_COLD; pval: (LEVEL_SCALED)d4+(LEVEL_SCALED); Purpose: EP_ATTACK;
    aval: AR_BOLT; qval: Q_DIR | Q_TAR; cval: COL_NECRO; 
    Flags: EF_LIM_MTYPE, EF_HALF_UNTYPED; tval: MA_HAS_BLOOD;
    Desc: "A coruscating black bolt of negative energy is created by this
    spell. A small amount of the victim's blood suddenly freezes in its
    veins, causing pain and discomfort. It deals 1d4+1 points of damage per
    caster level and stuns the target for one round. A subject succeeding
    in a Reflex save suffers half normal damage and is not stunned. This
    spell may only be cast on victims that have blood. Half of the damage
    is cold damage and half of it is untyped and may not be resisted.";
  }
  and EA_INFLICT
  { xval: STUNNED; sval: REF; aval: AR_BOLT; 
    flags: EF_D1ROUND, EF_LIM_MTYPE; tval: MA_HAS_BLOOD; }

Wizard / Scroll Spell "Rigor Mortis" : EA_BLAST
  { SC_NEC; Base: SP_MEDIUM; Cost: 2; Level: 1; sval: FORT;
    xval: AD_DADX; pval: 1d8; qval: Q_TAR; tval: MA_LIVING;
    Flags: EF_LIM_MTYPE, EF_DEATH; Purpose: EP_ATTACK;
    Desc: "Induces the effects of rigor mortis in a still-living
      creature, causing 1d8 points of Dexterity damage if the
      creature fails a Fortitude save."; }

Wizard / Priest / Scroll Spell "Detect Undead" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_1); 
    Level: 1; xval: DETECTING; yval: MA_UNDEAD; 
    pval: 25d1 + (LEVEL_2PER1); 
    Desc: "Reveals all Undead creatures, seen or unseen, within (25 + [caster
    level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetUndead" / "DUnd"; 
  }

Wizard Spell "Halt Undead" : EA_INFLICT
  { SC_NEC; Base: SP_EASY; Cost: 2; Level: 1; sval: FORT; lval: 9;
    xval: ADJUST; yval: A_MOV; pval: -40; tval: MA_UNDEAD; cval: BLUE;
    Purpose: EP_CURSE | EP_FOIL_PURSUIT; Flags: EF_LIM_MTYPE; aval: AR_GLOBE;
    Desc: "Reduces the movement rate of any undead within 90 feet (9
      squares) of the caster to 0%, effectively freezing them in place
      and preventing them from approaching. A Fortitude save negates
      the effect."; }

Wizard / Priest / Scroll Spell "Protection from Undead" : EA_GENERIC
  { SC_ABJ|SC_NEC; IS_A_BUFF(COST_1X); Level: 1; sval: WILL;
    Purpose: EP_BUFF (VS_UNDEAD);
    On Event EV_MAGIC_HIT {
      /* SS_MISC cause sancutary can't be dispelled. */
      EVictim->GainTempStati(TRAP_EVENT, EActor, e.vDuration, SS_MISC,
        EVICTIM(EV_STRIKE),e.saveDC,$"protection from undead");
      return DONE;
      },
    META(EVICTIM(EV_STRIKE)) {
      if (!EActor->isMType(MA_UNDEAD))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return NOTHING;
      if (EActor->SavingThrow(WILL,
          EVictim->GetEffStatiVal(TRAP_EVENT,$"protection from undead"),SA_MAGIC|SA_SPELLS))
        return NOTHING;
      DPrint(e,"You find yourself unable to strike!",
               "The <EActor> hesitates.");
      return DONE;
      },
    EV_MAGIC_HIT
      "You feel safe." /
      "The <EActor> is surrounded by a warm aura.",
    EV_REMOVED
      "You feel less safe." /
      "The <EActor>'s warm aura fades.",
    MSG_STATINAME
      "ProtUndead" / "ProU";
    Desc: "Evokes a mystical protection around you such that undead
      cannot physically strike you without first succeeding in a Will
      save against this spell.";
    Flags: EF_SHOWNAME, EF_DLONG;
  }


/* --THAUMATURGY 1-- */

Druid / Wizard / Scroll Spell "Jump;spell" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_1); Level 1; qval: Q_TAR; sval: NOSAVE;
    xval: SKILL_BONUS; yval: SK_JUMP; pval: 10d1 + LEVEL_2PER1;
    Desc: "The target gains a +10 enhancement bonus on Jump checks, +2 per
    caster level."; } 

Wizard Spell "Enlarge" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_1X); Level: 1; qval: Q_TAR; sval: FORT;
    xval: ADJUST; yval: A_SIZ; pval: 1;
    Desc: "Causes a target creature to become larger, increasing their
      size category by one level.";
    On Event EV_MAGIC_HIT {
      if (EVictim->GetAttr(A_SIZ) == SZ_COLLOSAL)
        {
          EActor->IPrint("You can't get any larger!");
          return DONE;
        }
      if (EVictim->HasEffStati(ADJUST,$"reduce")) 
        {
          EVictim->RemoveEffStati($"reduce");
          return DONE;
        }
      VPrint(e,"You grow larger!",
               "The <EVictim> grows larger!");
      e.Terse = true;
      return NOTHING;
    },
  EV_REMOVED
    "You return to your normal size." /
    "The <EActor> grows smaller again.";
  }

/* ww: this is basically only useful to archers -- dimension door or mount is 
 * basically always superior */
Wizard / Scroll Spell "Expeditious Retreat" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_1); Level: 1; 
    Flags: EF_CANCEL, EF_NOTBAD; 
    Purpose: EP_FOIL_PURSUIT | AIM_AT_SELF;
    xval: ADJUST; yval: A_MOV; pval: 20; }
  and EA_INFLICT
  { xval: ADJUST; yval: A_SPD; pval: -10; 
    Desc: "Increases your movement rate by 100~, while decreasing your attack speed by 50~."; }

Wizard Spell "Reduce" : EA_INFLICT
  { SC_THA; Base: SP_EASY; Cost: 2; Level: 1; qval: Q_TAR; sval: FORT;
    Purpose: EP_CURSE; xval: ADJUST; yval: A_SIZ; pval: -1;
    Flags: EF_SHOWNAME;
    Desc: "Causes a target creature to become smaller, lowering their
      size category by one level.";
    On Event EV_MAGIC_HIT {
      if (EVictim->GetAttr(A_SIZ) == SZ_MINISCULE)
        {
          EActor->IPrint("You can't get any smaller!");
          return DONE;
        }
      if (EVictim->HasEffStati(ADJUST,$"enlarge")) {
        EVictim->RemoveEffStati($"enlarge");
        return DONE;
        }
      VPrint(e,"You grow smaller!",
               "The <EVictim> grows smaller!");
      e.Terse = true;
      return NOTHING;
    },
  EV_REMOVED
    "You return to your normal size." /
    "The <EActor> grows larger again.";
  }

Wizard / Scroll Spell "Spider Climb" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_1); Level: 1; 
    xval: SKILL_BONUS; yval: SK_CLIMB; pval: +10;
    Desc: "Casting this spell causes your hands to become adhesive, granting a
      +10 bonus to Climb checks for the duration, and removing the need for a
      climbing set when using the skill. You also gain the Brachiation feat 
      while the spell is active."; }
and EA_INFLICT
  { xval: EXTRA_FEAT; yval: FT_BRACHIATION; pval: 0; }
and EA_INFLICT
  { xval: INNATE_KIT; yval: SK_CLIMB; pval: 0; }

/* Thaumaturges have ENTIRELY utility spells at first level.
   They aren't very playable until 3rd level, unless you play
   them entirely as some other kind of specialist. Let's change
   that. */
Wizard / Scroll Spell "False Life": EA_INFLICT
  { IS_A_BUFF(COST_2); SC_NEC; SC_THA; Level: 1;
    xval: ADJUST; yval: A_THP; pval: 3d10+(LEVEL_SCALED);  
    On Event MSG_STATINAME "False Life" / "FL"; 
    Desc: "You draw upon eldricht energies to toughen your body
      against harm and injury. While this spell is in effect, you gain
      temporary hit points equal to 3d10 + 1 per caster level (scaled
      after 9th level)."; }

Wizard Spell "Convulsion" : EA_INFLICT
  { SC_THA; Base: SP_EASY; sval: FORT; qval: Q_TAR; Cost: 4; Level: 1; sval: FORT;
    xval: ADJUST_CIRC; yval: A_AID; pval: -6; tval: MA_NLIVING;
    Flags: EF_LIM_MTYPE, EF_NO_BONUS_DMG, EF_DSHORT;
    Desc: "This spell briefly disrupts the biology of a living being, 
      inducing a brief state of system shock where the victim's muscles clench
      and she suffers a kind of seizure. Creatures with Constitution 12
      or less are automatically affected, whereas those with Constitution
      scores of 13 or higher receive a Fortitude saving throw to negate the
      effect. The effect lasts for only 1d4 rounds, causing the victim to
      suffer a -6 circumstance penalty to all rolls.";
    On Event EV_CALC_EFFECT {
      e.vDuration = (e.MM & MM_ANCHOR) ? 2d4 : 1d4;
      return NOTHING;
      },
    PRE(EV_MAGIC_STRIKE) {
      if (EVictim->GetAttr(A_CON) > 12)
        e.sval = FORT;
      else 
        e.sval = NOSAVE;
      return NOTHING;
      },
    POST(EV_MAGIC_STRIKE)
      { e.sval = FORT;
        return NOTHING; },
    EV_MAGIC_HIT
      "The <EVictim> is struck with a violent convulsion!" /
      "You are struck with a violent convulsion!" /
      "The <EVictim> is struck with a violent convulsion!";
  } 
    
/* --WEAVECRAFT 1-- */

 Wizard / Scroll Spell "Alarm" : EA_GENERIC
  { SC_WEA; Base: SP_MEDIUM; Cost: 1; Level: 1; Purpose: EP_PLAYER_ONLY;
    On Event EV_MAGIC_HIT {
      ThrowVal(EV_REST,REST_DUNGEON,EActor,EActor);
      EActor->Timeout = 0;
      EActor->RemoveStati(ASLEEP);
      EActor->FFCount = 0;
      return DONE;
      };
    Flags: EF_STAPLE;
    Desc: "Casting this spell wards an area you intend to use as a
      campsite with a kind of magical early warning system, making
      you psychically aware when hostile creatures breach its
      boundries.\n
      __In effect, this causes your character to rest, similarly
      to the 'z' command. If you have an encounter, however, you are
      instantly alert and the monsters do not get the chance to make
      a string of attacks against you as usual.";
  }

  // ww: phantom steed is out of order to that auto-buff will pick it
  // instead of mount if you have both!
Wizard / Scroll Spell "Phantom Steed" : EA_GENERIC
  { SC_WEA; IS_A_BUFF(COST_3); Level: 3; 
    Desc: "Summons a quasi-real horselike creature that the caster begins
    to ride. The steed can be ridden by you quite rapidly (half again as
    fast as a warhorse or warpony). It can also magically traverse
    dangerous terrain (e.g., icy floors, brimstone)."; 
    On Event EV_ISTARGET {
      if (EActor->HasStati(MOUNTED) ||
          EActor->SkillLevel(SK_RIDE) <= 0 ||
          !EActor->HasMFlag(M_HUMANOID) ||
          EActor->HasMFlag(M_NOLIMBS) ||
          EActor->GetAttr(A_SIZ) < SZ_SMALL ||
          EActor->GetAttr(A_SIZ) > SZ_MEDIUM)
        return CANNOT_CAST_IT; 
      return SHOULD_CAST_IT; 
    }, EV_MAGIC_HIT {
      hObj hMount;
      rID rval;

        if (EActor->GetAttr(A_SIZ) <= SZ_SMALL)
          rval = $"phantom pony"; 
        else
          rval = $"phantom horse"; 

      hMount = CreateMonster(rval); 

      if (EActor->onPlane() != PHASE_MATERIAL) {
        hMount->GainPermStati(PHASED,hMount,SS_MISC,EActor->onPlane(),0,
            $"mount");
      } 

      SetSilence();
      hMount->PartyID = EActor->PartyID;
      if (EActor->isPlayer())
        hMount->MakeCompanion(EActor,PHD_MAGIC);
      hMount->CalcValues();
      if (!hMount->isFriendlyTo(EActor)) {
          hMount->Remove(true);
          UnsetSilence();
          APrint(e,"The mount vanishes because it does not like you.");
          return DONE;
        }
      Throw(EV_MOUNT,EActor,hMount);
      hMount->CalcValues();
      UnsetSilence();
      hMount->Initialize();
      hMount->Reveal(true);

      DPrint(e,"A phantom mount appears under you!", "A phantom mount appears under the <EActor>!");
      return NOTHING;
    } ;
  }

Monster "phantom horse" : MA_QUADRUPED, MA_OUTSIDER, MA_CONSTRUCT
  {
    Image: grey 'q'; Size: SZ_LARGE; 
    CR: OPT_CR(2,1); HD: 3; Hit: 0; Def: 14; Mov: 250%; Spd: 100%;
    Str 15, Dex 20, Con 15, Int 2, Wis 12, Cha 6; Arm: 10; 
    ABILITY(CA_SCENT,6);
    ABILITY(CA_WOODLAND_STRIDE,6);
    Feats: SK_LISTEN, SK_SPOT, SK_JUMP;
    Flags: M_NEUTER, M_NATURAL, M_HERBI, M_NOHANDS, M_MOUNTABLE, M_NOGEN;
    Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUK, DF_STUN,
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD;
  }

Monster "phantom pony" : MA_QUADRUPED, MA_OUTSIDER, MA_CONSTRUCT
  {
    Image: grey 'q'; Size: SZ_MEDIUM; 
    CR: OPT_CR(2,1); HD: 3; Hit: 0; Def: 14; Mov: 250%; Spd: 100%;
    Str 15, Dex 20, Con 15, Int 2, Wis 12, Cha 6; Arm: 10; 
    ABILITY(CA_SCENT,6);
    ABILITY(CA_WOODLAND_STRIDE,6);
    Feats: SK_LISTEN, SK_SPOT, SK_JUMP;
    Flags: M_NEUTER, M_NATURAL, M_HERBI, M_NOHANDS, M_MOUNTABLE, M_NOGEN;
    Immune: DF_MIND, DF_POIS, DF_SLEE, DF_PLYS, DF_STUK, DF_STUN,
            DF_DISE, DF_NECR, DF_CRIT, DF_SUBD;
  }


Wizard / Scroll Spell "Mount" : EA_GENERIC
  { SC_WEA; IS_A_BUFF(COST_1); Level: 1; 
    Desc: "Summons a horse that the caster begins to ride. At fifth level
    it summons a warhorse instead.  If the caster is size Small (or
    smaller), a pony (or warpony) is summoned instead. You must be a
    humanoid with limbs and a non-zero skill level in Ride to take
    advantage of this spell."; 
    On Event EV_ISTARGET {
      if (EActor->HasStati(MOUNTED) ||
          EActor->SkillLevel(SK_RIDE) <= 0 ||
          !EActor->HasMFlag(M_HUMANOID) ||
          EActor->HasMFlag(M_NOLIMBS) ||
          EActor->GetAttr(A_SIZ) < SZ_SMALL ||
          EActor->GetAttr(A_SIZ) > SZ_MEDIUM)
        return CANNOT_CAST_IT; 
      return SHOULD_CAST_IT; 
    }, EV_MAGIC_HIT {
      hObj hMount;
      rID rval;

      if (EActor->CasterLev() >= 5) {
        if (EActor->isMType(MA_DROW) || EActor->isMType(MA_LIZARDFOLK))
          rval = $"war lizard";
        else if (EActor->isMType(MA_GNOME))
          rval = $"mastiff";
        else if (EActor->GetAttr(A_SIZ) <= SZ_SMALL)
          rval = $"warpony"; 
        else
          rval = $"warhorse"; 
      } else {
        if (EActor->isMType(MA_DROW) || EActor->isMType(MA_LIZARDFOLK))
          rval = $"riding lizard";
        else if (EActor->isMType(MA_GNOME))
          rval = $"riding dog";
        else if (EActor->GetAttr(A_SIZ) <= SZ_SMALL)
          rval = $"pony"; 
        else
          rval = $"horse"; 
      } 

      hMount = CreateMonster(rval); 
      if (EActor->onPlane() != PHASE_MATERIAL) {
        hMount->GainPermStati(PHASED,hMount,SS_MISC,EActor->onPlane(),0,
            $"mount");
      } 

      // SetSilence();
      hMount->PartyID = EActor->PartyID;
      if (EActor->isPlayer())
        hMount->MakeCompanion(EActor,PHD_MAGIC);
      hMount->CalcValues();
      if (!hMount->isFriendlyTo(EActor))
        {
          hMount->Remove(true);
          APrint(e,"The mount vanishes.");
          return DONE;
        }
      Throw(EV_MOUNT,EActor,hMount);
      // UnsetSilence();
      hMount->Initialize();
      hMount->Reveal(true);

      DPrint(e,"A mount appears under you!", "A mount appears under the <EActor>!");
      return NOTHING;
    } ;
  }

Wizard Spell "Monster Summoning I" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 2; Level: 1; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"summoned monster"; pval: 1; 
    Desc: "Summons a living creature of CR 1 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(1) }

Wizard Spell "Phase Door" : EA_TRAVEL
  { SC_WEA; Base: SP_MEDIUM; Cost: 2; Level: 1; pval: 1d4+4;      
    Purpose: EP_ESCAPE; xval: TRAVEL_KNOWN; Flags: EF_DEFENSIVE;
    Desc: "Teleports you randomly 1d4+4 squares away."; }

Priest / Scroll / Wizard Spell "Magic Weapon" : EA_GENERIC
  { SC_WEA; IS_A_BUFF(COST_1); Level: 1; qval: Q_INV; 
    Desc: "Casting this spell temporarily enchants a single weapon (or
      a stack of ammunition) with a +1 magical bonus. This bonus does 
      not stack with any other magical bonus the weapon may have. 
      Magical weapons strike true against undead, outsiders and many 
      other fiends."; 
    hObj it;
    On Event 
      EV_ISTARGET {
        if (ETarget->isType(T_WEAPON))
          if (ETarget->GetQuantity() == 1)
            return CAN_CAST_IT;
        if (ETarget->isType(T_MISSILE))
          return CAN_CAST_IT;
        if (ETarget->isMonster())
          if (ETarget->InSlot(SL_WEAPON) != NULL_OBJ)
            if (ETarget->InSlot(SL_WEAPON)->GetPlus() == 0)
              return SHOULD_CAST_IT;
        return CANNOT_CAST_IT; 
        },
      EV_RATETARG {
        if (EItem->isType(T_WEAPON))
          return NOTHING;
        return ABORT;
        },
      PRE(EV_EFFECT) {
        if (ETarget->isMonster())
          SetETarget(e,ETarget->InSlot(SL_WEAPON));
        return NOTHING;
        },
      EV_MAGIC_STRIKE {
        ETarget->GainTempStati(BOOST_PLUS,EActor,e.vDuration,SS_ENCH,1,1,
          $"magic weapon", e.vCasterLev);
        VPrint(e,"","The <EVictim> gives off a soft silvery glow.");
        return DONE;
      }; 
    Constants:
      * SERVICE_SPELL_COST 75;
  }
  
/* ============================================================= 
 *                   Level Two ARCANE Spells
 * =============================================================
 * Abj: Resist X, Prot. from Arrows, Gaze Reflection, Iron Mind
 * Arc: Passwall, Wind Wall, Web, [Glitterdust]
 * Div: Detect Objects, Darksight, See Invisible, Identify
 * Enc: Hypnotism, Dire Charm, Hideous Laughter, Touch Idiocy
 * Evo: Scorcher, Globe of Shadow, Decastave
 * Ill: Invisibility, Blur, [Chimerical Image], 
 * Nec: Bladethirst, Ghoul Touch, Choke, Scare
 * Tha: Levitation, Bull's Strength, Cat's Grace, Bear's End.
 * Wea: Summon Swarm, Summon Monster II, 
 * =============================================================
 */


/* --ABJURATION 2-- */

 Wizard / Scroll Spell "Protection from Arrows" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_2X); Level: 2; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EVICTIM(EV_HIT); 
    Purpose: EP_BUFF | EP_COUNTER (VS_MISSILES);
    Desc: "Renders a target of the caster's choice immune to any
      arrows or bolts with a bonus of less than +3.";
    On Event META(EVICTIM(EV_HIT)) {
      if (e.AType == A_FIRE) 
        if (GetHandle(EItem2))
		      if (EItem2->GetPlus() < 3)
            {
              VPrint(e,"The <EItem2> is deflected by an invisible force!",
                       "The <EItem2> is deflected by an invisible force!");
              return DONE;
            }
	  return NOTHING;
      },
	MSG_STATINAME "ProtArrows" / "PArw";
  }

Wizard / Scroll Spell "Gaze Reflection" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_2); Level: 2; qval: Q_TAR;
    xval: GAZE_REFLECTION; yval: GR_REFLECT; Flags: EF_DLONG;
    Purpose: EP_BUFF | EP_COUNTER (VS_GAZE);
    Desc: "Creates a reflective shield, redirecting
      any incoming gaze attacks back at the gazer. If both the attacker and
      the defender both have gaze reflection, the gaze is reflected to the
      original attacker. The ability of a nymph's beauty to strike a man
      dead is considered a gaze attack for the purpose of this spell.";
    On Event MSG_CAST
      "A reflective sheen covers your vision." /
      "A reflective sheen covers the <EActor>'s eyes.",
    MSG_ELAPSED
      "The reflective sheen vanishes." /
      "The reflective sheen covering the <EActor>'s eyes vanishes.";
  }

Wizard / Scroll Spell "Iron Mind" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_2); Level: 2; qval: Q_TAR;
    xval: ADJUST; yval: A_SAV_WILL; pval: +10;
    Purpose: EP_BUFF | EP_COUNTER (VS_MENTAL);
    Desc: "Grants the chosen target a +10 enhancement bonus 
      to her next Will saving throw.";
    Flags: EF_ONCEONLY, EF_NOTBAD, EF_DLONG, EF_SHOWNAME;
  }

Wizard / Scroll / Druid Spell "Resist Water" : EA_INFLICT
  { SC_ABJ|SC_WATER; IS_A_BUFF(COST_1); Level: 2; qval: Q_TAR; 
    xval: SKILL_BONUS; yval: SK_SWIM; pval: LEVEL_SCALED; 
    On Event MSG_STATINAME "ResWater" / "RWat";
    Desc: "Grants the target an immunity to rusting, soaking and decay,
    three of the ravages of water. In addition, it grants the target a
    bonus to Swim skill checks equal to your caster level (scaled at 10th).
    This mundane-seeming spell is of critical importance to mages
    interested in protecting their spellbooks from soaking traps or
    underground rivers."; }
   and EA_INFLICT { xval: IMMUNITY; yval: AD_SOAK; }
   and EA_INFLICT { xval: IMMUNITY; yval: AD_RUST; }
   and EA_INFLICT { xval: IMMUNITY; yval: AD_DCAY; }
   and EA_GRANT { xval: SKILL_BONUS; yval: SK_SWIM; pval: LEVEL_SCALED; }

Wizard / Priest / Druid / Scroll Spell "Resist Fire" : EA_INFLICT
  { SC_ABJ|SC_FIRE; IS_A_BUFF(7); Level: 2; qval: Q_TAR; 
    xval: RESIST; yval: AD_FIRE; pval: 5d1 + (LEVEL_2PER3); 
    Desc: "Grants the target fire resistance equal to 5 plus
      2 per 3 caster levels."; } 

Wizard / Priest / Druid / Scroll Spell "Resist Cold" : EA_INFLICT
  { SC_ABJ|SC_COLD; SC_COLD; IS_A_BUFF(7); Level: 2; qval: Q_TAR; 
    xval: RESIST; yval: AD_COLD; pval: 5d1 + (LEVEL_2PER3); 
    Desc: "Grants the target cold resistance equal to 5 plus
      2 per 3 caster levels."; }

Wizard / Priest / Druid / Scroll Spell "Resist Lightning" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(7); Level: 2; qval: Q_TAR; 
    xval: RESIST; yval: AD_ELEC; pval: 5d1 + (LEVEL_2PER3); 
    Desc: "Grants the target lightning resistance equal to 5 plus
      2 per 3 caster levels."; }

Wizard / Priest / Druid / Scroll Spell "Resist Acid" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(7); Level: 2; qval: Q_TAR; 
    xval: RESIST; yval: AD_ACID; pval: 5d1 + (LEVEL_2PER3); 
    Desc: "Grants the target acid resistance equal to 5 plus
      2 per 3 caster levels."; }

Wizard / Priest / Druid / Scroll Spell "Resist Sound" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(7); Level: 2; qval: Q_TAR; 
    xval: RESIST; yval: AD_SONI; pval: 5d1 + (LEVEL_2PER3); 
    Desc: "Grants the target sound resistance equal to 5 plus
      2 per 3 caster levels."; }


/* --ARCANA 2-- */

Wizard Spell "Glitterdust" : EA_INFLICT
  { SC_ARC; Base: SP_MEDIUM; Cost: 4; Level: 2; sval: FORT; 
    qval: Q_TAR | Q_LOC | Q_DIR; 
    Purpose: EP_CURSE | AIM_AT_SELF; Flags: EF_CASTER_IMMUNE;
    aval: AR_BALL; lval: 8; cval: COL_RAINBOW; xval: BLIND; }
  and EA_INFLICT {
    aval: AR_BALL; lval: 8; xval: ILLUMINATED; pval: +1; 
    On Event EV_MAGIC_HIT {
      EVictim->RemoveStati(INVIS); 
      EVictim->Reveal(false); 
      };
    Desc: "A cloud of golden particles covers everyone and everything in 
      the area, causing creatures to become blinded (Will save negates) and 
      visibly outlining invisible or hiding creatures. All within the area 
      are covered by the dust (no save), which cannot be removed and continues 
      to sparkle until it fades. Any creature covered by the dust takes a -40 
      penalty on Hide checks.";
    On Event MSG_CAST
      "A cloud of glittering particles sprays forth!",
    POST(EV_MAGIC_HIT) {
      if (EVictim->HasEffStati(BLIND,$"Glitterdust"))
        VPrint(e,"You are blinded by the dust!",
                 "The <EVictim> is blinded by the dust!");
      return NOTHING;
      };
  } 

              
Wizard / Scroll Spell "Passwall" : EA_TRAVEL
  { SC_ARC; Base: SP_HARD; Cost: 4; Level: 2; qval: Q_DIR;
    xval: TRAVEL_TO_TARG; pval: 3; Purpose: EP_PASSAGE;
    Desc: "Allows the caster to phase through solid stone or wood,
      moving two squares in the indicated direction even if the
      middle square is blocked by a door or wall.";
    On Event EV_MAGIC_HIT {
      switch(e.EDir) {
        case NORTH:     e.EXVal = EActor->x; e.EYVal = EActor->y - 2;     break;
        case SOUTH:     e.EXVal = EActor->x; e.EYVal = EActor->y + 2;     break;
        case EAST:      e.EXVal = EActor->x + 2; e.EYVal = EActor->y;     break;
        case WEST:      e.EXVal = EActor->x - 2; e.EYVal = EActor->y;     break;
        case NORTHEAST: e.EXVal = EActor->x + 2; e.EYVal = EActor->y - 2; break;
        case NORTHWEST: e.EXVal = EActor->x - 2; e.EYVal = EActor->y - 2; break;
        case SOUTHEAST: e.EXVal = EActor->x + 2; e.EYVal = EActor->y + 2; break;
        case SOUTHWEST: e.EXVal = EActor->x - 2; e.EYVal = EActor->y + 2; break;
        }
      e.isDir = false;
      e.isLoc = true;
      if (EMap->SolidAt(e.EXVal,e.EYVal))
        {
          DPrint(e,"You flicker, but remain where you are.",
                   "The <EActor> flickers, but remains where he is.");
          return DONE;
        }
      return NOTHING;
      };
  }

 Wizard / Priest / Druid Spell "Wind Wall" : EA_TERRAFORM
  { SC_ARC|SC_AIR; Base: SP_EASY; Cost: 3; Level: 2; lval: 6;
    xval: TERRA_OPEN; aval: AR_BARRIER; Flags: EF_DLONG;
    rval: $"strong updraft"; qval: Q_DIR;
    Purpose: EP_COUNTER | EP_CURSE | AIM_AT_ENEMY (VS_MISSILES);
    Desc: "Creates a vertical curtain of wind that deflects all
      arrows, bolts and throws weapons weighing less than three
      pounds crossing its area.";
    On Event MSG_CAST
      "A curtain of wind appears!",
    EV_ELAPSED
      "The winds die down."; }

Terrain "strong updraft"
  { Image: cyan '~'; Mat:MAT_MINERAL; /* The *floor* */
    Flags: TF_SPECIAL, TF_SHOWNAME;
    On Event EV_MISSILE {
	  if (GetHandle(EItem2) == NULL)
	    return NOTHING;
      if (EItem2->Weight() >= 30)
        return NOTHING;
      APrint(e,"The <EItem2> is deflected!");
      return ABORT;
      };
  }

 Wizard / Scroll Spell "Web" : EA_TERRAFORM
  { SC_ARC; Base: SP_HARD; Cost: 4; Level: 2; aval: AR_GLOBE; lval : 2;
    xval: TERRA_OPEN; rval: $"webbing"; qval: Q_LOC|Q_TAR; cval: GREY;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY; sval: NOSAVE;
	  Desc: "Creates a mass of sticky webbing that holds enemies
      in place and slows their attacks."; 
    On Event MSG_CAST
      "Sticky webbing materializes out of nowhere!",
    EV_ELAPSED
      "The webs dissolve into mist.",
    EV_ISTARGET
      {
        if (GetHandle(EVictim))
          if (EMap->TerrainAt(EVictim->x,EVictim->y) == $"web")
            return CAN_CAST_IT;
        if (e.isLoc)
          if (EMap->TerrainAt(e.EXVal,e.EYVal) == $"web")
            return CAN_CAST_IT;
        return SHOULD_CAST_IT;
      };
  }

Wizard / Scroll Spell "Spirit Net" : EA_GENERIC
  { SC_ARC; SC_NEC; Base: SP_EASY; Cost: 4; Level: 2; 
    aval: AR_BALL; lval : 4; qval: Q_DIR|Q_TAR|Q_LOC;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY | EP_COUNTER (VS_SUMMON); 
    sval: NOSAVE;
    Desc: "Mystically inscribes open surfaces and wall edges within a
    volumetric 'blast' of radius 40 feet (4 squares) with warding runes.
    The runes prevent incorporeal creatures and summoned creatures from
    passing. Such creatures can still attack and cast spells. The runes
    appear simultaneously but fade and disappear at a slightly staggered
    rate."; 
    On Event EV_MAGIC_XY {
      hObj w; 
      w = CreateFeature($"warding rune");
      w->GainTempStati(SUMMONED,EActor,e.vDuration > 0 ?
        e.vDuration + (1d6) : e.vDuration,SS_ENCH);
      w->PlaceAt(EMap,e.EXVal,e.EYVal);
      return NOTHING; 
    } ; 
    On Event EV_ISTARGET {
      if (ETarget->onPlane() != PHASE_MATERIAL ||
          ETarget->HasStati(SUMMONED)) return SHOULD_CAST_IT; 
      else
        return CAN_CAST_IT; 
    } ;
    On Event MSG_CAST "Warding runes materialize!";
  }

Wizard Spell "Wall of Doors" : EA_GENERIC
  { SC_ARC; Base: SP_EASY; Cost: 8; Level: 2; lval: 6; qval: Q_DIR;
    aval: AR_BARRIER; pval: 2d6 + (LEVEL_MAX20); 
    Purpose: EP_CURSE | EP_BARRIER | AIM_AT_ENEMY;
    Desc: "Conjures a solid barrier made out of wooden doors, displacing
      any creatures in its path and blocking further passage. The doors are
      initially locked but can be opened or destroyed normally. At caster
      level 5 the doors are created Wizard Locked (+10 to Lockpicking DC,
      double hardness, but they open automatically for you). At caster
      level 7 the doors are created with wards that prevent incorporeal and
      summoned creatures from passing through a door while it is closed."; 
    On Event MSG_CAST
      "A wall of solid doors materializes!";
    On Event EV_MAGIC_XY {
      hObj w; 
      if (EActor->CasterLev() >= 7) 
        w = CreateDoor($"warded oak door");
      else
        w = CreateDoor($"oak door");
      if (EActor->CasterLev() >= 5) {
        w->GainTempStati(WIZLOCK,EActor,e.vDuration,SS_MISC,0,e.saveDC,$"Wall of Doors");
      }
      w->GainTempStati(SUMMONED,EActor,e.vDuration,SS_ENCH);
      w->DoorFlags = DF_LOCKED;
      w->PlaceAt(EMap,e.EXVal,e.EYVal);
      return NOTHING; 
    } ; 
  }

Wizard / Druid / Scroll Spell "Pyrotechnics" : EA_GENERIC
  {
    SC_ARC|SC_FIRE; Base: SP_EASY; Cost: 3; Level: 2; qval: Q_LOC;
    Desc: "To cast this spell, you must target an already existing
      fire, such as a wall torch, a fire elemental or even something
      fire-related like a flow of magma. You can also target any
      creature carrying a lit torch; in this case the torch is
      consumed in the casting of the spell. The spell transforms the 
      fire in one of three ways, at your option:\n
      __<9>Cloud of Smoke:<1> The fire instantly begins emitting a
      greasy, unnatural and thick black smoke, filling an area with
      a radius of 3 squares around the fire. This blocks sight like
      fog, and breathing creatures in the area must make a Fortitude
      save each turn or begin choking.\n
      __<9>Fireworks:<1> The fire explodes into a brilliant display
      of fireworks. Everyone within 40 feet of it (other than the
      caster and his allies, who are assumed to be prepared) must
      make a Fortitude save or be blinded for 1d4+1 rounds. Further,
      creatures with an aversion to light (such as orcs and wraiths)
      must make a second save or become afraid for a much longer
      duration.\n
      __<9>Explosion:<1> The fire explodes outward in a sizzling
      blast, striking everyone within two squares of it for 3d8
      fire damage and 2d6 blunt damage. Additionally, creatures
      in the area must save or be knocked down. The caster is <9>not<1>
      immune to the effects of this version.";
    hObj hTorch;
    On Event EV_EFFECT {
      char ch;
      ch = EActor->ChoicePrompt("Smoke, fireworks or explosion?", 
        "sfe", 's', RED, PINK);
      if (hTorch)
        hTorch->Remove(true);
      
      if (ch == 's') {
        RedirectEff(e,$"Pyrotechnics;smoke");
        return DONE;
        }
      else if (ch == 'f') {
        RedirectEff(e,$"Pyrotechnics;flash");
        return DONE;
        }
      RedirectEff(e,$"Pyrotechnics;blast");
      return DONE; 
      },
    PRE(EV_EFFECT) {
      rID terID; hObj hMon;
      hTorch = NULL;
      terID = EMap->TerrainAt(e.EXVal, e.EYVal);
      if (terID == $"magma" || terID == $"Wall Torch")
        return NOTHING;
      for (hMon = EMap->FCreatureAt(e.EXVal, e.EYVal);hMon;
           hMon = EMap->NCreatureAt(e.EXVal, e.EYVal))
        {
            if ((hMon != ((hObj)0)) && 
                    hMon->isMType(MA_ELEMENTAL) && 
                    hMon->isMType(MA_FIRE))
                return NOTHING;
            if ((hMon != ((hObj)0)) && 
                    hMon->tmID == $"flaming sphere")
                return NOTHING;
            
            
            if (hMon) {
              hTorch = hMon->InSlot(SL_LIGHT);
              if (hTorch && (hTorch->iID == $"torch" ||
                          hTorch->iID == $"brass lantern"))
              if (hTorch->GetLightRange())
                return NOTHING;
              }
         }
      EActor->IPrint("You must target a square with a source of
        flame to use that spell.");
      return ABORT;
      };
  }

0 Effect "Pyrotechnics;blast" : EA_BLAST
  { aval: AR_GLOBE; lval: 2; cval: RED;
    xval: AD_FIRE; pval: 3d8; }
and EA_BLAST
  { aval: AR_GLOBE; lval: 2; cval: RED;
    xval: AD_BLUNT; pval: 2d6; }
and EA_BLAST
  { aval: AR_GLOBE; lval: 2; cval: RED;
    xval: AD_TRIP;
    On Event MSG_BLASTNAME 
      "fiery explosion"; }

0 Effect "Pyrotechnics;smoke" : EA_INFLICT
  { cval: SHADOW; lval: 3; aval: AR_FIELD; rval: FI_FOG | FI_BAD;
    xval: CHOKING; sval: FORT; Flags: EF_GLYPH_FOG; }
    
0 Effect "Pyrotechnics;flash" : EA_BLAST
  { cval: COL_RAINBOW; lval: 4; aval: AR_GLOBE;
    xval: AD_BLND; pval: 1d4+1; Flags: EF_CASTER_IMMUNE;
    On Event PRE(EV_MAGIC_HIT) {
      if (EVictim->HasMFlag(M_LIGHT_AVERSE))
        if (!EVictim->SavingThrow(WILL,e.saveDC, 
                 SA_FEAR|SA_SPELLS|SA_MAGIC))
          {
            /* SS_MISC == /natural/ fear, cannot be dispelled.
               We want that -- the pyrotechnics are magical; the
               fear they inflict is not. */
            EVictim->GainTempStati(AFRAID,NULL,10d6,SS_MISC,FEAR_PANIC);
            VPrint(e,"You flee in panic from the pyrotechnic display!",
                     "The <EVictim> flees in panic from the pyrotechnic display!");
          }
      return NOTHING;
      };
  }

Wizard Spell "Animate Rope" : EA_GENERIC
  {
    SC_ARC; Level: 2; Base: SP_MEDIUM; Cost: 7; Purpose: EP_SUMMON;
    Desc: "Casting this spell imbues a coil of rope with a semblance
      of life and motion, causing it to animate and attack the
      caster's enemies. The animated rope has Strength and Dexterity
      equal to the caster's Wisdom and Intelligence, hit points and
      damage based on the type of rope the spell is used on and the 
      same Hardness it has when inanimate.\n
      __Casting <9>animate rope<1> consumes 30 feet from a coil of
      rope, so a well-equipped caster can animate several distinct
      coils at the same time.";
    hObj hRope;
    On Event PRE(EV_EFFECT) {
      hObj it; hObj it2; bool found;
      found = false;
      for (it=EActor->FirstInv();it;it=EActor->NextInv())
        if (ResourceHasFlag(it->iID,IT_ROPE))
          if (it->GetQuantity() >= 3)
            {
              found = true;
              if (!EActor->isPlayer())
                { it2 = it; break; }
              ETerm->LOption(it->Name(0),(int32)it);             
            }
      if (!found)
        {
          EActor->IPrint("You need at least 30 feet of rope to cast
            that spell!");
          return ABORT;
        }
      if (EActor->isPlayer())
        {
          it2 = (hObj) ETerm->LMenu(MENU_BORDER|MENU_ESC,"Choose a Rope:");
          if (it2 == (hObj)-1)
            return ABORT;
        }
        
      if (it2 == NULL_OBJ)
        return ABORT;
        
      /* Take just 30 feet */
      if (it2->GetQuantity() == 3)
        { it2->Remove(false); hRope = it2; }
      else {
        hRope = it2->TakeOne();
        it2->SetQuantity(it2->GetQuantity() - 2);
        hRope->SetQuantity(3);
        }
      return NOTHING; 
      },
    EV_ISTARGET {
      hObj it3;
      for (it3=EActor->FirstInv();it3;it3=EActor->NextInv())
        if (ResourceHasFlag(it3->iID,IT_ROPE))
          if (it3->GetQuantity() >= 3)
            return SHOULD_CAST_IT;
      return CAN_CAST_IT;
      },
    EV_MAGIC_HIT {
      hObj hAnim; rID monID;
      
      switch(hRope->iID)
        {
          case $"hemp rope": monID = $"animated hemp rope"; break;
          case $"silk rope": monID = $"animated silk rope"; break;
          case $"giant's-hair rope": monID = $"animated giant's-hair rope"; break;
          default:
            Error("Strange rope in Animate Rope::EV_MAGIC_HIT!");
            return ABORT;
        }
      
      EMap->thEnGenMonSummXY($"exact monster", monID, EN_CREATOR|EN_SINGLE, 
         36, 0, EActor, e.EXVal, e.EYVal);      

      
      hAnim = EMap->GetEncounterCreature(0);
      if (hAnim == NULL_OBJ)
        return ABORT;
      hAnim->GainPermStati(ADJUST_INH,NULL,SS_MISC,A_STR,
               EActor->GetAttr(A_WIS)-10);
      hAnim->GainPermStati(ADJUST_INH,NULL,SS_MISC,A_INT,
               EActor->GetAttr(A_INT)-10);
      hAnim->GainPermStati(TRAP_EVENT,NULL,SS_MISC,
               PRE(EVICTIM(EV_DAMAGE)),0,$"Animate Rope", e.vCasterLev);
      hAnim->GainTempStati(TRANSFORMED,hRope,e.vDuration,SS_ENCH,0,0,
               $"Animate Rope", e.vCasterLev);
      return DONE;
      },
    META(PRE(EVICTIM(EV_DAMAGE))) {                               
        hObj hItem, hAnim; int16 percent;                            
        /* Send damage the animated object takes directly to its     
           actual Item object, and adjust cHP accordingly. */         
        if (e.DType <= AD_LAST_PHYSICAL)                             
          {                                                          
            hItem = EVictim->GetStatiObj(TRANSFORMED);               
            hAnim = GetHandle(EVictim);                              
            SetETarget(e,hItem);                                       
            ReThrow(EV_DAMAGE,e);                                    
            SetETarget(e,hAnim);                                       
            if (hItem->isDead())                                     
              hAnim->Remove(true);                                   
            else {                                                   
              percent = (hItem->GetHP() * 100) / hItem->MaxHP();     
              hAnim->cHP = max(1,(hAnim->mHP * percent) / 100);      
              }                                                      
            return DONE;                                             
          }                                                          
        return NOTHING;                                              
      };                              
  }
  
Monster "animated hemp rope" : MA_CONSTRUCT                            
  { Image: bright red GLYPH_TOOL; Size: SZ_MEDIUM; 
    CR: 1; HD: 1; Hit: +4; Def: 10; Mov: 125%; Spd: 150%;
    Str 10, Dex 10, Wis 1, Cha 1; 
    Attk: A_WRAP for 0d0 AD_GRAB (DC 15),
          A_CONS for 1d6 AD_BLUNT;
    ABILITY(CA_INFRAVISION,6); 
    Flags: M_NOGEN, M_NOHANDS, M_NOHEAD, M_NOLIMBS,
           M_DEAF, M_NO_BLOOD, M_NO_BREATH, M_NOPOLY,
           M_NOGENO, M_MINDLESS, M_NO_CORPSE, M_NEUTER;
  }      

Monster "animated silk rope" : MA_CONSTRUCT                            
  { Image: bright red GLYPH_TOOL; Size: SZ_MEDIUM; 
    CR: 1; HD: 2; Hit: +4; Def: 10; Mov: 125%; Spd: 150%;
    Str 10, Dex 10, Wis 1, Cha 1;
    Attk: A_WRAP for 0d0 AD_GRAB (DC 17),
          A_CONS for 1d8 AD_BLUNT;
    ABILITY(CA_INFRAVISION,6); Flags: M_NOGEN;
    Flags: M_NOGEN, M_NOHANDS, M_NOHEAD, M_NOLIMBS,
           M_DEAF, M_NO_BLOOD, M_NO_BREATH, M_NOPOLY,
           M_NOGENO, M_MINDLESS, M_NO_CORPSE, M_NEUTER;
  }      
  
Monster "animated giant's-hair rope" : MA_CONSTRUCT                            
  { Image: bright red GLYPH_TOOL; Size: SZ_MEDIUM; 
    CR: 1; HD: 3; Hit: +4; Def: 10; Mov: 125%; Spd: 150%;
    Str 10, Dex 10, Wis 1, Cha 1;
    Attk: A_WRAP for 0d0 AD_GRAB (DC 19),
          A_CONS for 1d10 AD_BLUNT;
    ABILITY(CA_INFRAVISION,6); Flags: M_NOGEN;
    Flags: M_NOGEN, M_NOHANDS, M_NOHEAD, M_NOLIMBS,
           M_DEAF, M_NO_BLOOD, M_NO_BREATH, M_NOPOLY,
           M_NOGENO, M_MINDLESS, M_NO_CORPSE, M_NEUTER;
  }          
    
    
/* --DIVINATION 2-- */

Wizard / Scroll Spell "Detect Objects" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_2); Level: 2; xval: DETECTING_TYPE; 
    yval: T_ITEM; 
    pval: 25d1 + (LEVEL_2PER1); 
    Purpose: EP_BUFF | EP_PLAYER_ONLY; 
    Desc: "Reveals all items, seen or unseen, within (25 + [caster
    level x 2]) squares of you."; 
    On Event MSG_STATINAME "DetObj" / "DObj"; 
  }

Wizard Spell "Identify" : EA_GENERIC
  { SC_DIV; Base: SP_TRIVIAL; Cost: 10; Level: 2; qval: Q_INV;
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY;
    Desc: "Identifies the basic magical nature of one chosen
      item. This spell requires a ritual which takes one hour
      to perform and costs two fatigue points."; 
    Purpose: EP_PLAYER_ONLY;
    On Event 
      EV_EFFECT {
        if (EActor->isPlayer())
          if (EActor->SpendHours(1,1) != DONE)
            return ABORT;
        if (!EActor->LoseFatigue(2, true))
          return ABORT;
        return NOTHING;
        },
      EV_RATETARG {
        if (EItem->isKnown(KN_IDENTIFIED) || EItem->isType(T_LIGHT) ||
            EItem->isType(T_FOOD))
          return ABORT;
        return NOTHING;
        },
      EV_MAGIC_HIT {
        ETarget->MakeKnown(0xFF);
        EActor->IPrint("That is an <hObj>.",ETarget);
        return DONE;
        };
    Constants:
      * SERVICE_SPELL_COST 50;
  }

Wizard / Scroll / Druid Spell "Infravision" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_2); Level: 2;
    xval: EXTRA_ABILITY; yval: CA_INFRAVISION; pval: 6;
    Desc: "Grants the caster temporary magical infravision out to
      a range of 60 feet (6 squares), or increases his existing
      infravision by a similar amount.";
  }

Wizard / Scroll Spell "See Invisibility" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_2); Level: 2; xval: SEE_INVIS; 
    On Event MSG_STATINAME "See Invis" / "SI"; 
    Desc: "Casting this spell allows the caster to see invisible 
      creatures normally; it also renders visible creatures on
      the ethereal plane, who normally cannot be seen by observers
      from the material plane.";
  }

Wizard / Scroll Spell "ESP" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_2X); Level: 2; 
    xval: EXTRA_ABILITY; yval: CA_TELEPATHY; pval: 4;
    Desc: "Renders the caster telepathic, allowing him to sense the
      presence and location of any thinking creatures within 40 feet (4
      squares) of him."; }

Wizard Spell "Revealed Lore" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_2); Level: 2;  
    Purpose: EP_BUFF (VS_MELEE); 
    xval: ADJUST; yval: A_INT; pval: 1d4+1; 
    Desc: "By casting this spell, the mage gains a divinatory
      capacity toward whatever problems she focuses on, and
      solutions are revealed to her that she could not otherwise
      have known. In game terms, this spell grants the subject a 
      magic bonus to their Intelligence of 1d4+1 points.";
  }

/* --ENCHANTMENT 2-- */

Wizard Spell "Eagle's Splendour" : EA_INFLICT
  { SC_ENC; IS_A_BUFF(COST_2); Level: 2; 
    xval: ADJUST; yval: A_CHA; pval: 1d4+1; 
    Desc: "Improves your Charisma score by 1d4+1 points for 
      the duration."; }

Wizard Spell "Hypnotism" : EA_INFLICT
  { SC_ENC; Base: SP_EASY; Cost: 4; Level: 2; qval: Q_TAR;
    xval: PARALYSIS; yval: PARA_HYPNOTIZED; sval: WILL;
    Flags: EF_MENTAL, EF_DLONG, EF_CASTER_IMMUNE, EF_HARDSAVE4;
    Purpose: EP_FOIL_PURSUIT | AIM_AT_ENEMY (VS_MENTAL);
    On Event PRE(EV_MAGIC_STRIKE) {
      if (!EActor->isBeside(EVictim))
        {
          EActor->IPrint("That creature is too far away to hypnotize!");
          return DONE;
        }
      return NOTHING;
      },
    EV_ISTARGET {
      if (EActor->isMonster())
        if (!EActor->isBeside(EVictim))
          return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      };
    Desc: "Causes a creature immediately beside you to become
      entranced if it fails a Will save, such that it will not
      act until it suffers damage or is otherwise shocked back
      to its senses (though it is not helpless as with Hold
      Person, and cannot be Coup de Grace'd). This spell has a
      +4 spell bonus to its save DC.";

  }

Wizard Spell "Touch of Idiocy" : EA_DRAIN
  { SC_ENC; Base: SP_TRIVIAL; Cost: 3; Level: 2; 
#ifdef TOUCH_TO_BOLT
  aval: AR_BOLT; qval: Q_DIR | Q_TAR; 
#else
  aval: AR_TOUCH; 
#endif
    lval: LEVEL; xval: AD_DAIN; pval: 1d6; sval: FORT; 
    Purpose: EP_ATTACK;
    Flags: EF_MENTAL, EF_NOTBAD, EF_LIM_MTYPE, EF_SHOWNAME, EF_CANCEL; 
    tval: MA_SAPIENT;
    On Event EV_MAGIC_HIT {
      ThrowDmg(EV_DAMAGE,AD_DAWI,e.vDmg,"Touch of Idiocy",
        EActor, EVictim, EItem, EItem2); 
      ThrowDmg(EV_DAMAGE,AD_DACH,e.vDmg,"Touch of Idiocy",
        EActor, EVictim, EItem, EItem2); 
    };
    Desc: 
    "With a touch, you reduce a sapient target's mental faculties. Your
    successful touch attack does 1d6 points of damage to the target's
    Intelligence, Wisdom and Charisma scores. You may make one such Touch
    attack per level."; 
    On Event MSG_CAST
      "Your hands glow with a dull aura." / 
      "The <EActor>'s hands glow with a dull aura.";
  }

Wizard Spell "Hideous Laughter" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 4; Level: 2; tval: MA_SAPIENT;
    Purpose: EP_CURSE (VS_MENTAL); xval: STUNNED; qval: Q_TAR;
    Flags: EF_LIM_MTYPE, EF_SHOWNAME, EF_DSHORT, EF_MENTAL;
    On Event MSG_STATINAME "Laughing" / "Lau"; sval: WILL;
    Desc: "Causes a sapient creature to be completely overcome
      with uncontrollable laughter for 1d4 rounds.";
    On Event EV_MAGIC_HIT
      "You are overcome with uncontrollable laughter!" /
      "The <EVictim> is overcome with uncontrollable laughter!",
    EV_REMOVED
      "The laughter abates."; }

Wizard Spell "Dire Charm" : EA_INFLICT
  { SC_ENC; Base: SP_EASY; Cost: 3; Level: 2; qval: Q_TAR;
    Purpose: EP_CURSE (VS_MENTAL); xval: ENRAGED;
    sval: WILL; Flags: EF_MENTAL;
    Desc: "Causes a creature to be overwhelmed with bloodthirst,
      going berzerk and racing forward to attack the caster in 
      melee in preferance to all other actions."; }

#if 0
Wizard Spell "Insatiable Thirst" : EA_INFLICT
  {
    SC_ENC|SC_WATER|SC_ILL; Level: 2; Cost: 3; qval: Q_TAR; tval: MA_LIVING;
    xval: CHARMED; yval: CH_COMPEL; Purpose: EP_CURSE;
    Flags: EF_LIM_MTYPE, EF_COMPULSION; sval: WILL;
    Desc: "This spell weaves a curious dwenomer over a single living
      creature, causing them to feel an insatiable thirst. An affected
      victim will first drink any water or potions they have in their
      possession (even if they rationally know doing so is harmful or
      wasteful). Failing that, they will drink any liquid at their
      current location, or move toward the nearest body of open liquid
      or container with liquid. If they have none of these options
      open to them, they will still feel the thirst, but will be able
      to act normally.\n
      __Though this is fundamentally an Enchantment spell, it has an
      Illusion component that creates the sensory illusion of thirst
      to strengthen the magic; all living creatures are subject to the
      spell, but it gains a +4 bonus to DC versus those not immune to
      Illusion magic.";
    On Event EV_MAGIC_HIT
      "You feel a maddening thirst come upon you!" /
      "The <EVictim> looks parched!",
    EV_REMOVED
      "The maddening thirst seems to have run its course." /
      "The <EVictim> seems saner now.",
    EV_CALC_EFFECT {
      if ((GetHandle(EVictim) != NULL_OBJ) &&
            !EVictim->HasStati(TRUE_SIGHT))
        e.saveDC += 4;
      return NOTHING;
      },
    EV_COMPULSION {
      // choose and drink random potion, use SetCandidate()
      // drink water/mud/slime from terrain,
      //   maybe get CHOKING or NAUSEA
      // move toward nearest GLYPH_WATER square
      // move toward nearest potion
      // failing all above, act normally.
      
      
      EActor->IPrint("Ping!");
      return NOTHING;
      };
  }
#endif

/* --EVOCATION 2-- */

Wizard  Spell "Electric Loop" : EA_BLAST
  { SC_EVO; Base: SP_TRIVIAL; Cost: 3; Level: 2; sval: REF partial;
    xval: AD_ELEC; pval: (LEVEL_MAX5)d4; Purpose: EP_ATTACK;
    Flags: EF_CASTER_IMMUNE, EF_DEFENSIVE; 
    aval: AR_GLOBE; cval: COL_ELEC; lval: 2;
    Desc: "Creates a ring of electricity that deals 1d4 points of
    lightning damage (max 5d4) to all creatures adjacent to the caster.
    In addition, creatures that fail a Reflex save are stunned for one
    round."; 
  }
  and EA_INFLICT
  { xval: STUNNED; sval: REF; Flags: EF_D1ROUND, EF_CASTER_IMMUNE; 
    aval: AR_GLOBE; lval: 2; }

Wizard Spell "Scorcher" : EA_BLAST
  { SC_EVO|SC_FIRE; Base: SP_EASY; Cost: 4; Level: 2; aval: AR_BEAM; qval: Q_DIR|Q_TAR;
    xval: AD_FIRE; lval: 4; sval: REF partial; pval: 2d8+LEVEL_MAX15;
    Purpose: EP_ATTACK (VS_FIRE); cval: RED;
    Desc: "Projects a ray of fire at the caster's enemies inflicting
      2d8+[caster level, max 15] points of damage. A Reflex save halves
      the damage."; }

Wizard Spell "Acid Arrow" : EA_BLAST
  { SC_EVO; Base: SP_HARD; Cost: 4; Level: 2; Purpose: EP_ATTACK;
    xval: AD_ACID; pval: 2d4; Flags: EF_SHOWNAME; 
    aval: AR_BOLT; qval: Q_DIR | Q_TAR; cval: GREEN;
    Desc: "A magical arrow of acid springs from your hand and speeds to its
    target. You must succeed on a ranged touch attack to hit your target.
    The arrow deals 2d4 points of acid damage with no splash damage. For
    every caster level, the acid, unless somehow neutralized, lasts for
    another round, dealing another 1d4 points of damage in that round.";
  } 
and EA_INFLICT {
    aval: AR_BOLT; xval: TRAP_EVENT; yval: EV_TURN;
    On Event META(EV_TURN) {
      hObj killer;
      ThrowDmg(EV_DAMAGE,AD_ACID,1d4,"lingering acid",EActor,EActor);
      // ww: I'm getting a segfault here sometimes ...
      DPrint(e,"The acid sears!", "Acid sears the <EActor>!");
      if (EActor->isDead()) {
        killer = EActor->GetEffStatiObj(TRAP_EVENT,$"acid arrow");
        if (killer)
          killer->KillXP(EActor);
        }
      return NOTHING;
      },
    MSG_BLASTNAME "arrow of acid"; 
  }

 Wizard / Sorcerer / Priest Spell "Globe of Shadow" : EA_INFLICT
  { SC_EVO|SC_DARKNESS; IS_A_BUFF(COST_2); Level: 2; qval: 0;
    aval: AR_MFIELD; rval: FI_SHADOW|FI_MODIFIER; lval: 1; 
    Purpose: EP_STEALTH|EP_BUFF; 
    Flags: EF_GLYPH_FLOOR; cval: SHADOW;
    Desc: "Creates a 10' (1 square) radius globe of magical gloom
      and shadows that travels with you and grants all creatures within it
      a +4 circumstance bonus to Hide and a 25% miss chance versus ranged
      attacks due to concealment.";
    xval: SKILL_BONUS; yval: SK_HIDE; pval: +4; }
and EA_INFLICT
  { xval: MISS_CHANCE; yval: MISS_RANGED; pval: 25; }


Wizard / Sorcerer Spell "Decastave" : EA_CREATION
  { SC_EVO; Base: SP_EASY; Cost: 5; Level: 2; 
    xval: CREA_WIELD | CREA_TEMP; rval: $"force construct staff"; 
    Flags: EF_DLONG; Purpose: EP_BUFF (VS_MELEE); 
    pval: +6; 
    On Event EV_MAGIC_HIT
      "A force-staff appears in your hands!" /
      "A force-staff appears in <EActor>'s hands!";              
    Desc: "Creates a force staff in the caster's hands that inflicts
      1d10 (1d8 vs. large creatures) points of blunt damage, 1d6 points 
      of sonic damage, scores at threat on 17-20 (crit x3) and has a 
      speed modifier of +25~.";
    hObj it;
    On Event EV_ISTARGET {
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) 
        if (it->iID == $"force construct staff")
          return CAN_CAST_IT; 
      return SHOULD_CAST_IT; 
    } ;
    On Event POST(EV_MAGIC_HIT) {
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->iID == $"force construct staff") {
            it->AddQuality(WQ_THUNDERING);
          }
        } 
    }; 
  } 


Priest / Sorcerer / Wizard Spell "Shatter" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 4; Level: 2; qval: Q_TAR | Q_EQU;
    xval: AD_SONI; pval: (LEVEL_SCALED)d4; Purpose: EP_CURSE;
    aval: AR_BEAM; Flags: EF_SOUND;
    /* HACKFIX */ Purpose: EP_PLAYER_ONLY;
    Desc: "Creates a harmonic sound that shatters objects, inflicting
      1d4 sonic damage per caster level, scaled after 9th, to each exposed 
      item in the target creature's inventory. If the target is a 
      construct, it also suffers this damage directly.";
    On Event PRE(EV_MAGIC_HIT) {
      if (ETarget->isCreature() && !ETarget->isMType(MA_CONSTRUCT))
        return DONE; 
    };
    On Event MSG_BLASTNAME "harmonic burst";
  } 

Wizard / Druid / Scroll Spell "Gust of Wind" : EA_BLAST
  { SC_EVO|SC_AIR; Base: SP_EASY; Cost: 4; Level: 2; qval: Q_DIR;
    aval: AR_BEAM; lval: 9; cval: AZURE; 
    Purpose: EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY;
    xval: AD_KNOC; pval: 1d4+LEVEL_EVERY3; Flags: EF_DEFENSIVE;
    Desc: "Creates a tremendous blast of wind that forces enemies it
      strikes 1d4 + 1 per three levels starting at 1st backwards.
      The wind can also be used to disperse fog created by spells
      like <9>obscurement<1>, <9>fog cloud<1>, <9>mind fog<1>,
      <9>stinking cloud<1> or <9>pyrotechnics<1>, or the similar
      conjurations of <9>rainstorm<1>, <9>summon swarm<1> or 
      <9>insect plague<1>, or the fumes produced by a thunderbeast. 
      This dispersal is automatic.";
    On Event MSG_BLASTNAME "blast of wind";
    }
and EA_DRAIN
  { xval: AD_TRIP; sval: NOSAVE; Flags: EF_PERMANANT; aval: AR_BEAM;
    On Event EV_MAGIC_XY {
      rID tID;
      if (EMap->DispelField(e.EXVal,e.EYVal,0,$"Obscurement",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Fog Cloud",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Mind Fog",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Pyrotechnics;smoke",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Stinking Cloud",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Thunderbeast Fumes",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"fog;horn effect",0))
        APrint(e,"The blast of wind disperses the fog!");
      if (EMap->DispelField(e.EXVal,e.EYVal,0,$"Insect Plague",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Summon Swarm",0))
        APrint(e,"The blast of wind disperses the insects!");
      if (EMap->DispelField(e.EXVal,e.EYVal,0,$"Rainstorm",0))
        APrint(e,"The blast of wind disperses the rainstorm!");
      tID = EMap->TerrainAt(e.EXVal, e.EYVal);
      if (tID == $"stinking cloud;terrain" ||
          tID == $"fog" || tID == $"acid fog") {
          EMap->WriteTerra(e.EXVal,e.EYVal,
            EMap->RegionAt(e.EXVal,e.EYVal)->Floor);
          SinglePrintXY(e,"The blast of wind clears the air!");
          }
      return NOTHING;
      },
    EV_CALC_EFFECT {
      e.vRange = 9;
      return NOTHING;
      };
  }

/* --ILLUSION 2-- */

Potion / Wizard / Scroll Spell "Invisibility" : EA_INFLICT
  { SC_ILL; Base: SP_HARD; Cost: 5; Level: 2; qval: Q_TAR;
    xval: INVIS; yval: INV_NORMAL; pval: LEVEL_1PER1;
    Flags: EF_DLONG, EF_NOTBAD; Purpose: EP_BUFF | EP_STEALTH;
    Desc: "Renders a chosen character unseen by others. The
      the effect is cancelled if the character attacks. The
      magic creates a faint shimmering effect around the
      character's location that might be spotted by powerful
      (CR 5+) creatures when the invisible creature moves
      within 30 feet, or if they are alerted by the invisible 
      creature making noise or turning invisible within their 
      line of sight. A Spot check (DC 20) allows them to discern
      the invisible creature's location (as an unclear shape --
      they still cannot 'see' the creature) for the remainder
      of the day. Even if the invisible creature drops and
      reactivates her invisibility magic, alerted monsters
      will still be able to track her via this shimmer.
      However, creatures only get one Spot check per day to
      notice the shimmer of an invisible creature."; }

/* ww: this is supposed to grant a 20% full miss chance, not a 50%
 * arrow miss chance -- if I wanted to avoid arrows, I'd take Protection
 * From Arrows, also second level! */
Wizard / Scroll Spell "Blur" : EA_INFLICT
  { SC_ILL|SC_WATER; IS_A_BUFF(COST_2X); Level: 2;
    xval: MISS_CHANCE; yval: MISS_FULL; pval: 20;
    Desc: "Causes your image to ripple and become distorted as if
      reflected on the surface of water, giving attacks a 20% miss 
      chance against you.";
    On Event EV_MAGIC_HIT
      "Your image becomes blurred and indistinct." /
      "The <EVictim>'s image becomes blurred and indistinct.",
    EV_ELAPSED
      "Your image snaps back into focus." /
      "The <EVictim>'s image snaps back into focus."; 
  }

Wizard / Scroll Spell "Mirror Image" : EA_INFLICT
  { SC_ILL; Base: SP_EASY; Cost: 5; Level: 2; Flags: EF_SHOWNAME, EF_SHOWVAL;
    xval: TRAP_EVENT; yval: EVICTIM(EV_HIT); pval: 1d4+LEVEL_1PER3;
    Purpose: EP_BUFF;
    Desc: "Creates 1d4 + 1 per three caster levels illusionary images
      of you. Foes have an equal chance of striking each individual
      image as they do of striking the real you. Tremorsense,
      blindsight, telepathic awareness or true seeing all allow an
      enemy to strike unerringly at the real you.";
    On Event META(EVICTIM(EV_HIT)) {
      int16 count, per;
      
      if (is_special_attk(e.AType) || is_response_attk(e.AType))
        return NOTHING;

      /* 1 in N chance of hitting the real target */
      if (!random(EVictim->GetEffStatiVal(TRAP_EVENT,$"mirror image")+1))
        return NOTHING;

      if (EActor->HasStati(TRUE_SIGHT))
        return NOTHING;

      per = EActor->Perceives(EVictim);
      if (per & (PER_TREMOR | PER_BLIND | PER_PERCEPT | PER_TELE))
        return NOTHING;

      count = EVictim->GetEffStatiVal(TRAP_EVENT,$"mirror image");
      
      if (count == 1)
        VPrint(e,"The last of your images vanishes.",
                 "The last of the <EVictim>'s images vanishes.");
      else
        VPrint(e,"One of your images vanishes.",
                 "One of the <EVictim>'s images vanishes.");

      if (count == 1) {
        SetSilence();
        EVictim->RemoveEffStati($"mirror image");
        UnsetSilence();
        }
      else
        EVictim->SetEffStatiVal(TRAP_EVENT,$"mirror image",count - 1);      
      
      return DONE;
      },
    EV_MAGIC_HIT {
      DPrint(e,"<Num> images split off from your body.",
               "The <EVictim> splits into a miasma of <Num2> identical images!",
               e.vDmg, e.vDmg+1);
      e.Terse = true;
      return NOTHING;
      },
    EV_REMOVED
      "Your remaining images vanish." /
      "The <EActor>'s remaining images vanish.",
    MSG_STATINAME 
      "MirrorImg" / "MI";
  }

Wizard / Scroll Spell "Hypnotic Pattern" : EA_INFLICT
  { SC_ILL; Base: SP_EASY; Cost: 4; Level: 2; qval: Q_LOC;
    aval: AR_GLOBE; cval: YELLOW; lval: 2; sval: WILL;
    xval: PARALYSIS; yval: PARA_HYPNOTIZED; Flags: EF_MENTAL;
    Purpose: EP_CURSE (VS_MENTAL);
    On Event EV_ISTARGET {
      if (!EVictim->isCreature())
        return CANNOT_CAST_IT;
      if (EVictim->HasMFlag(M_MINDLESS) ||
            EVictim->HasMFlag(M_BLIND))
        return CANNOT_CAST_IT;
      if (EVictim->ChallengeRating() > ((e.vCasterLev+1)/2))
        return CANNOT_CAST_IT;
      if (EVictim->HasStati(BLIND) || EVictim->HasStati(TRUE_SIGHT))
        return CANNOT_CAST_IT;
      if (EVictim->GetAttr(A_INT) >= 14)
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      };
    Desc: "Causes creatures in a 20-foot globe to become entranced with
      a display of weaving lines and images, standing rapt and motionless,
      provided that their Intelligence is lower than 14, their CR is lower
      than half your caster level (rounded up) and they are able to see
      the pattern normally. Attacking an entranced creature ends the trance.";
    On Event MSG_CAST
      "A swirling pattern of lights appears!";
  }

Wizard / Scroll Spell "Improved Phantasmal Force" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 6; Level: 2;
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_IMPROVED; 
    rval: $"generic summons";
    Desc: "This spell creates an illusionary creature, force 
      or object, just as Phantasmal Force does, but the illusion
      affects all natural and supernatural senses, and is thus
      believable to creatures who have scent, tremorsense, sharp
      senses or blindsight."; 
    Flags: EF_DLONG, EF_SHOWNAME;
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      hObj hPhantasm;
      if (e.eID != $"Improved Phantasmal Force")
        return NOTHING;
      if (e.illType != 'c')
        return NOTHING;
      hPhantasm = EMap->GetEncounterCreature(0);
      if (hPhantasm == NULL_OBJ)
        return NOTHING;
      if (!hPhantasm->isCreature())
        return NOTHING;
      
      EActor->GainPermStati(ADJUST_CIRC,hPhantasm,SS_MISC,
        A_AID,-2, $"Phantasmal Force");
      EActor->GainPermStati(TRAP_EVENT,hPhantasm,SS_MISC,
        POST(EVICTIM(EV_DAMAGE)),0, $"Improved Phantasmal Force");
      return NOTHING;
      },
    META(POST(EVICTIM(EV_DAMAGE))) {
      hObj hPhantasm;
      if (!EVictim->SkillCheck(SK_CONCENT,11 + e.aDmg,true))
        {
          //do {
            hPhantasm = EVictim->GetEffStatiObj(
              ADJUST_CIRC,$"Improved Phantasmal Force");
            if (hPhantasm == NULL_OBJ)
              return NOTHING;
            EVictim->IPrint("You lose concentration on the illusionary <hObj>!",
              hPhantasm);
            hPhantasm->Remove(true);
          //  }
          //while (EVictim->HasEffStati(ADJUST_CIRC,$"Improved Phantasmal Force"));
        }
      else
        EVictim->IPrint("You maintain concentration!");
      return NOTHING;
      },
    MSG_STATINAME "Concentrating" / "Concent";
    Lists:
      * SPELL_LIST $"magic missile" $"force bolt" $"burning hands"
                   $"ice dagger" $"sandblast" $"sunscorch"
                   $"scorcher" $"electric loop";
  }

/* --NECROMANCY 2-- */

/* I made this player-only because all the NPC mages would cast it, and
   it makes it impossible to talk to them (since the PC thinks they are
   a zombie, she assumes they can't talk!) We need mages to be able to
   cast Identify and other service spells for the PC! */
Wizard Spell "Visage of Death": EA_GENERIC
  { Flags: EF_NOTBAD, EF_PERSISTANT, EF_LOSEMANA, EF_SHOWNAME, EF_CANCEL; 
    Base: SP_BUFF; Cost: COST_2X; SC_NEC; SC_ILL; Level: 2; Purpose: EP_PLAYER_ONLY;
    Desc: "This spell allows you to alter your appearance to that of a
    zombie of the same size class. Your body temperature will feel cold and
    your limbs will appear stiff, putrid and rotting; you lose six points
    of Charisma. This spell does not actually make you undead or grant the
    usual undead abilities or resistances. However, it does grant
    resistance to cold and electricity and you do not need to breathe while
    the spell is in effect. Finally and perhaps most importantly, the spell
    makes you neutral to undead by default.";
    On Event MSG_STATINAME "Visage" / "Vis";
    On Event EV_ISTARGET {
      if (EVictim->CanAddTemplate($"zombie;visage"))
         return SHOULD_CAST_IT;
      return CANNOT_CAST_IT; 
    },
    EV_MAGIC_STRIKE {
      if (EVictim->CanAddTemplate($"zombie;visage")) {
        EVictim->GainTempStati(TEMPLATE,EActor,e.vDuration,SS_ENCH,
            0, 1, $"zombie;visage", 
            e.vCasterLev + (e.MM & MM_FORTIFY ? 5:0));
        EVictim->GainTempStati(NEUTRAL_TO,EActor,e.vDuration,SS_ENCH,
            MA_UNDEAD, MA_UNDEAD, $"visage of death", 
            e.vCasterLev + (e.MM & MM_FORTIFY ? 5:0));
        EVictim->SetImage();
        EVictim->CalcValues();
        return DONE;
      } else return ABORT; 
    } ;
  }

/* fjm: Changed name slightly to avoid similarity to Spirit Armour
     and the psionic Death Field */
Wizard Spell "Aura of Death" : EA_INFLICT
  { SC_NEC; IS_A_BUFF(COST_2); Level: 2; 
    Flags: EF_NO_BONUS_DMG; 
    xval: TRAP_EVENT; yval: EVICTIM(POST(EV_HIT)); pval: (LEVEL_SCALED2);
    On Event META(POST(EVICTIM(EV_HIT))) {
      if (!EActor->isBeside(EVictim))
        return NOTHING;
      if (e.AType == A_SPEL || e.AType == A_FIRE)
        return NOTHING;
      TPrint(e,"The <EVictim>'s aura of death drains you!",
               "Your aura of death drains the <EActor>!",
               "The <EVictim>'s aura of death drains the <EActor>!");
      ThrowDmg(EV_DAMAGE,AD_NECR,1d4+EVictim->GetEffStatiVal(TRAP_EVENT,$"aura of death"),
        "an aura of death", EVictim, EActor);
      if (EActor->Flags & F_DELETE)
        e.ADied = true;
      return NOTHING;  
      },
    EV_EFFECT {
      if (e.MM & MM_TRANSMUTE)
        {
          EActor->IPrint("This spell can't be transmuted.");
          return ABORT;
        }
      },
    MSG_STATINAME "AuraDeath" / "AuDe", 
    MSG_CAST
      "You are wreathed in a shroud of death!" /
      "The <EActor> is wreathed in a shroud of death!",
    EV_REMOVED
      "Your aura of death fades." /
      "The <EActor>'s aura of death fades.";  
    Desc: "Envelops you in a shroud of crackling black energy that deals
    (1d4 + [caster level / 2]) points of necromatic damage to anyone
    who attacks you in melee."; 
  } and EA_INFLICT {
    xval: TRAP_EVENT; yval: EVICTIM(POST(EV_MISS)); pval: (LEVEL_SCALED2);
    On Event META(POST(EVICTIM(EV_MISS))) {
      if (!EActor->isBeside(EVictim))
        return NOTHING;
      if (e.AType == A_SPEL || e.AType == A_FIRE)
        return NOTHING;
      TPrint(e,"The <EVictim>'s aura of death drains you!",
               "Your aura of death drains the <EActor>!",
               "The <EVictim>'s aura of death drains the <EActor>!");
      ThrowDmg(EV_DAMAGE,AD_NECR,1d4+EVictim->GetEffStatiVal(TRAP_EVENT,$"aura of death"),
        "aura of death", EVictim, EActor);
      if (EActor->Flags & F_DELETE)
        e.ADied = true;
      return NOTHING;  
      };
  } 

/* This used to be an illusionist spell in 1E and 2E; I have no
   idea why 3.5 moved all the fear spells to Necromancy, other
   than that everyone likes Necromancers and no one likes
   Illusionists and Enchanters. I'll compromise, but in the
   general case fear magic belongs in Enchantment with all the
   other mind-control spells. */
Wizard Spell "Scare" : EA_BLAST
  { SC_NEC; SC_COLD; SC_ILL; Base: SP_EASY; Cost: 4; Level: 2; sval: WILL;
    aval: AR_CHAIN; lval: 12; cval: CYAN; tval: MA_ENEMIES;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE; qval: Q_TAR;
    xval: AD_COLD; pval: 2d4;
    Flags: EF_MENTAL, EF_LIM_MTYPE, EF_BLIND_PROMPT, EF_FEAR; 
    Desc: "Casting this spell weaves material drawn from
      the Negative Energy Plane into a swirling stream of
      translucent, ghostly figures -- beastial, snarling
      faces tapering off into indistinct bodies. The
      swarm of apparitions only lasts for a few seconds,
      flying through the air at considerable speed and
      passing through the bodies of the caster's foes,
      carrying with them an icy, unnatural chill.\n
      __This spell arcs to a number of targets equal to
      the caster's level, requiring each target to make
      a Will saving throw or become afraid for 1d4 rounds
      plus one round for every three full caster levels.
      Creatures who fail the save also take 2d4 point of
      psychosomatic cold damage.\n
      __Creatures who are blind, mindless, have sharpened 
      senses, tremorsense or blindsight are immune to this 
      effect. (The apparitions are intangible and thus 
      can't be revealed as illusions via Scent).";
    On Event EV_ISTARGET {
      if (EVictim->isBlind())
        return CANNOT_CAST_IT;
      if (EVictim->HasMFlag(M_MINDLESS))
        return CANNOT_CAST_IT;
      if (EVictim->HasAbility(CA_BLINDSIGHT) ||
          EVictim->HasAbility(CA_TREMORSENSE) ||
          EVictim->HasAbility(CA_SHARP_SENSES))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_CALC_EFFECT {
      e.vDuration = 1d4 + e.vCasterLev / 3;
      /* Number of Arcs */
      e.vChainMax = 1 + e.vCasterLev / 3;
      return NOTHING;
      },
    MSG_BLASTNAME
      "stream of ghostly horrors";
  }
and EA_INFLICT
  { xval: AFRAID; yval: FEAR_PANIC;  }

Wizard Spell "Bladethirst" : EA_INFLICT
  { SC_NEC; Cost: 2; Base: SP_EASY; Level: 2; qval: Q_INV; tval: T_WEAPON;
    xval: TRAP_EVENT; yval: POST(EV_HIT); Purpose: EP_BUFF;
    Flags: EF_DLONG, EF_ITEMS_ONLY, EF_AFFECTS_ITEMS;
    Desc: "Imbues a blade with negative energy, causing it to drink the
      blood of its next victim, inflicting a bonus 2d8 points of
      necromantic damage.";
    On Event EV_ISTARGET {
      if (ETarget->isType(T_WEAPON) && 
        (ETarget->isGroup(WG_LBLADES) || 
         ETarget->isGroup(WG_SBLADES) ||
         ETarget->isGroup(WG_DAGGERS)))
		return 1;
	  return -1;
      },
    META(POST(EV_HIT)) {
      if (!EVictim->isCreature())
        return NOTHING;
	  if (EVictim->isDead())
	    return NOTHING;
      VPrint(e,"The <EItem> drinks your blood!",
               "The <EItem> drinks the <EVictim>'s blood!");
      ThrowDmg(EV_DAMAGE,AD_NECR,2d8,"a thirsty blade",EActor,EVictim,EItem);
      if (GetHandle(EItem))
        EItem->RemoveEffStati($"bladethirst");
      if (GetHandle(EItem2))
        EItem2->RemoveEffStati($"bladethirst");
      return NOTHING;
      };  
	On Event EV_MAGIC_HIT
	  "" / 
	  "The <ETarget> glows crimson!";
  }




Wizard / Scroll Spell "Ghoul Touch" : EA_INFLICT
  { SC_NEC; Base: SP_TRIVIAL; Cost: 3; Level: 2; sval: FORT; 
    aval: AR_TOUCH; xval: PARALYSIS; 
    Flags: EF_DLONG, EF_NOTBAD, EF_CANCEL; 
    cval: BLUE; Purpose: EP_ATTACK;
    On Event POST(EV_MAGIC_HIT) {
      if (!e.Resist) {
        EMap->NewField(FI_MODIFIER,EVictim->x,EVictim->y,2,
          GLYPH_COLOUR(GREEN),e.vDuration,$"ghast stench",EActor);
        VPrint(e,NULL,"A terrible stench rises from the <EVictim>'s body!");
        }
      return NOTHING;
      },
    MSG_CAST
      "Your hands glow with a sickly green light." /
      "The <EActor>'s hands glow with a sickly green light.";
    Desc: "Your touch can paralyze a creature (Fortitude negates) and
      cause it to emit a stench similar to a ghast's.";
  }
  
Wizard Spell "Choke" : EA_INFLICT
  { SC_NEC|SC_AIR; SC_THA; Base: SP_MEDIUM; Cost: 4; Level: 2; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EV_TURN; tval: MA_BREATHER;    
    Flags: EF_LIM_MTYPE; Purpose: EP_ATTACK;
    On Event EV_ISTARGET {
      if (ETarget->HasMFlag(M_NOHEAD))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    META(EV_TURN) {
      hObj killer;
   	  DPrint(e,"You're being strangled!",
	             "The <EActor> gets strangled!");
      ThrowDmg(EV_DAMAGE,AD_CHOK,1d8,"a choke spell",EActor,EActor);
      if (EActor->isDead()) {
        killer = EActor->GetEffStatiObj(TRAP_EVENT,$"choke");
        if (killer)
          killer->KillXP(EActor);
        }
      return NOTHING;
      };
    On Event EV_MAGIC_HIT 
      "Spectral hands appear around your neck!" /
      "Spectral hands appear around the <EVictim>'s neck!",
	  EV_ELAPSED
	    "The glowing hands fade.";
    Desc: "Causes spectral hands to appear around the target's neck, 
      choking him for 1d8 points of damage every turn and lasting a
      number of turns equal to half your caster level.";
  }

Wizard Spell "Spectral Hand" : EA_SUMMON
  {
    SC_NEC; Base: SP_MEDIUM; Cost: 6; Level: 2; qval: Q_LOC;
    Desc: "Casting this spell conjures a ghostly hand with a sympathetic
      bond to the caster's own life aura, such that any touch spell the
      caster has active can have its effects delivered at a distance by
      the hand. The hand is a very minor magical creation, a wisp of
      negative energy, but still an undead creature in its own right. It
      is considered a summoned creature and can be banished or held at
      bay by <9>protection from evil<1> and similar magics.\n
      __Since the hand is shaped from your own life force, you lose 1d4
      hit points when casting the spell.";
    rval: $"spectral hand;mon"; pval: 1;
    On Event POST(EV_MAGIC_HIT) {
      ThrowDmg(EV_DAMAGE,AD_NORM,1d4,"casting spectral hand", 
        EActor, EActor);
      return NOTHING;
      };
  }

Monster "spectral hand;mon" : MA_UNDEAD, MA_CONSTRUCT, MA_FORCE_D4
  { 
    Image: bright blue 'U'; Size: SZ_TINY;  
    CR: OPT_CR(1,1); HD: 1; Def: 22; Mov: 200%; Spd: 125%; 
    Str 10, Dex 10, Con 0, Int 0, Wis 0, Cha 0;
    Attk: A_TUCH for 0d0 AD_SPE1;
	  ABILITY(CA_INFRAVISION,12);
    Immune: UNDEAD_IMMUNITIES;
    Flags: M_INCOR, M_MFLYER, M_NOLIMBS, M_NOHEAD, M_NOHANDS, 
      M_NOBODY, M_DEAF, M_NOGEN, M_NO_SIZE_HP, M_NEUTER, M_HOSTILE,
      M_NO_CORPSE;
    On Event PRE(EV_NATTACK) {
      hObj hCaster;
      hCaster = EActor->GetStatiObj(SUMMONED);
      if (hCaster == NULL_OBJ)
        { EActor->Remove(true); return DONE; }
      SetSilence();
      EActor->RemoveStati(TOUCH_ATTACK);
      if (hCaster->HasStati(TOUCH_ATTACK))
        EActor->GainPermStati(TOUCH_ATTACK,
          hCaster->GetStatiObj(TOUCH_ATTACK),
          SS_ENCH, hCaster->GetStatiVal(TOUCH_ATTACK),
          hCaster->GetStatiMag(TOUCH_ATTACK),
          hCaster->GetStatiEID(TOUCH_ATTACK),
          hCaster->GetStatiCLev(TOUCH_ATTACK));
      UnsetSilence();
      return NOTHING;
      },
    POST(EV_NATTACK) {
      hObj hCaster;
      hCaster = EActor->GetStatiObj(SUMMONED);
      if (hCaster == NULL_OBJ)
        { EActor->Remove(true); return DONE; }
      
      if (EActor->HasStati(TOUCH_ATTACK))
        hCaster->SetStatiMag(TOUCH_ATTACK,-1,NULL,
          EActor->GetStatiMag(TOUCH_ATTACK));
      else
        hCaster->RemoveStati(TOUCH_ATTACK);
        
      SetSilence();
      EActor->RemoveStati(TOUCH_ATTACK);
      UnsetSilence();
      return NOTHING;
      },
    PRE(EV_MAGIC_STRIKE) {
      hObj hHand;
      if (EActor->mID == $"spectral hand;mon")
        {    
          hHand = GetHandle(EActor);
          SetEActor(e,EActor->GetStatiObj(SUMMONED));
          ReThrow(EV_MAGIC_STRIKE,e);
          SetEActor(e,hHand);
          return DONE;
        }
      return NOTHING;
      },
    EV_INITIALIZE {
      EActor->GainPermStati(ADJUST_INH,NULL,SS_MISC,
        A_HIT, EActor->GetStatiObj(SUMMONED)->CasterLev(),NULL_ID);
      EActor->GainPermStati(ADJUST_INH,NULL,SS_MISC,
        A_DEX, EActor->GetStatiObj(SUMMONED)->GetAttr(A_INT)-10,NULL_ID);
      },
    MSG_SPECABIL
      "It has an inherent bonus to its attack roll equal to its
        creator's caster level, and an inherent modifier to its
        Dexterity making that attribute equal to it's creator's
        Intelligence.",
    MSG_SPE1DESC
      "deliver its creator's touch spells",
    PRE(EV_DAMAGE) {
      if (e.DType == AD_SPE1)
        return DONE;
      return NOTHING;
      };
  }

/* --THAUMATURGY 2-- */

Potion  / Wizard / Scroll Spell "Levitation" : EA_INFLICT
  { SC_THA; Base: SP_MEDIUM; Cost: 4; Level: 2; 
    xval: LEVITATION;
    Purpose: EP_PASSAGE; 
    Desc: "Allows you to float a foot off the ground and move normally,
      thus avoiding many traps, becoming invisible to tremorsense and
      gaining the ability to cross pits and chasms safely, but halving
      your movement rate, granting you a -2 circumstance penalty
      to attack rolls, and a -15~ circumstance penalty to spell failure
      chances.\n
      __You also suffer the normal penalties for flying, needing a
      Balance check to cast spells with somatic components and
      potentially suffering knockback when you are struck in
      combat."; 
    Flags: EF_STAPLE, EF_DLONG, EF_NOTBAD, EF_CANCEL;
  }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_HIT; pval: -2; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_MOV; pval: -10; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_MAG; pval: -3; }


Wizard / Priest / Druid / Scroll Spell "Bull's Strength" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_2); Level: 2; qval: Q_TAR; 
    Purpose: EP_BUFF (VS_MELEE); 
    xval: ADJUST; yval: A_STR; pval: 1d4+1; 
    Desc: "Grants the subject a magic bonus to their Strength 
      of 1d4+1 points.";
  }

Wizard / Scroll Spell "Cat's Grace" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_2); Level: 2; qval: Q_TAR; 
    Purpose: EP_BUFF (VS_MELEE); 
    xval: ADJUST; yval: A_DEX; pval: 1d4+1; 
    Desc: "Grants the subject a magic bonus to their Dexterity 
      of 1d4+1 points.";
  }

 Wizard / Priest / Druid / Scroll Spell "Bear's Endurance" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_2); Level: 2; qval: Q_TAR; 
    Purpose: EP_BUFF; 
    xval: ADJUST; yval: A_CON; pval: 1d4+1; 
    Desc: "Grants the subject a magic bonus to their Constitution 
      of 1d4+1 points.";
  }

Wizard / Scroll Spell "Ray of Enfeeblement" : EA_DRAIN
  { SC_THA; Base: SP_EASY; Cost: 4; Level: 2; qval: Q_DIR | Q_TAR; 
    aval: AR_BEAM; cval: GREEN; lval: 8; tval: MA_LIVING;
    xval: AD_DRST; pval: 1d8+LEVEL_SCALED2; sval: FORT;
    Flags: EF_LIM_MTYPE, EF_ATTACK; Purpose: EP_CURSE;
    Desc: "Projects a ray from your hand that drains 1d8 points of
      Strength, plus one point per two caster levels, from any living
      target that it strikes (ranged attack roll required) that fails
      a Fortitude saving throw.";
	  On Event EV_MAGIC_HIT
	    "You feel yourself grow weak!" /
	    "The <EVictim> weakens!",
	  MSG_BLASTNAME "wan ray"; 
	
  }
  
Wizard / Scroll Spell "Heightened Senses" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_2X); Level: 2; 
    xval: EXTRA_ABILITY; yval: CA_SHARP_SENSES; pval: +4;
    Desc: "This dwenomer heightens the caster's sensory input to an
      incredible degree, giving her a +4 insight bonus to Search,
      Spot and Listen and the ability to detect secret doors as an
      elf does, along with 4 squares of low-light vision.";
  }
and EA_INFLICT
  { xval: EXTRA_ABILITY; yval: CA_LOWLIGHT; pval: +4; }

/* --WEAVECRAFT 2-- */

Wizard Spell "Apportation" : EA_GENERIC
  { SC_WEA; Level: 2; Cost: 4; Base: SP_EASY; qval: Q_TAR; sval: WILL;
    Flags: EF_AFFECTS_ITEMS, EF_BLIND_PROMPT; Purpose: EP_CURSE;
    Desc: "Casting this spell allows you to teleport a Large or smaller
      inanimate object into your hands from up to 80 feet away. When an 
      unattended object is the focus of this spell, the effect is automatic; 
      when the spell targets a creature, the caster may select any one 
      object in the creature's inventory to claim, but the creature is 
      entitled to a Will save to resist the magic. This saving throw is 
      modified by the difference between the victim's Spot skill rating 
      and the caster's Pick Pockets skill rating.";
    On Event EV_ISTARGET {
      if (!(EVictim->isCreature() || EVictim->isType(T_ITEM)))
        return CANNOT_CAST_IT;
      if (EVictim->isCreature() && EVictim->FirstInv() == NULL_OBJ)
        return CAN_CAST_IT;
      if (ETarget->isType(T_ITEM) && ETarget->Size() > SZ_LARGE)
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_CALC_EFFECT {
      if (GetHandle(EVictim) != NULL_OBJ && EVictim->isCreature())
        e.saveDC += EActor->SkillLevel(SK_PICK_POCKET) -
                      EVictim->SkillLevel(SK_SPOT);
      return NOTHING;
      },
    EV_MAGIC_HIT {
      int16 blev; hObj it, best; bool found;
      if (ETarget->isCreature())
        {
          found = false; blev = -100;
          for (it=EVictim->FirstInv();it;it=EVictim->NextInv())
            if (it->Size() <= SZ_LARGE)
              {
                found = true;
                if (EActor->isPlayer())
                  ETerm->LOption(it->Name(0),(int32)it);
                else if (it->ItemLevel() > blev)
                  { best = it; blev = it->ItemLevel(); }
              }
          if (!found)
            {
              EActor->IPrint("Unfortunately, that creature has nothing
                that you can apport.");
              return DONE;
            }
          if (EActor->isPlayer())
            it = (hObj) ETerm->LMenu(MENU_BORDER|MENU_2COLS,"Choose an Item:",
                                       WIN_MENUBOX);
          else
            it = best;
        
        }
      else
        it = GetHandle(ETarget);
      
      if (it->HasStati(ANCHORED) || EVictim->HasStati(ANCHORED) ||
            EVictim->HasEffStati(TRAP_EVENT,$"Item Preservation") ||
            it->isCursed())
        {
          APrint(e,"The <hObj> flickers briefly.",it);
          return DONE;
        }
      
      if (it->GetParent() != NULL_OBJ && it->GetParent()->isType(T_CONTAIN))
        {
          EVictim->IPrint("Your <hObj> feels lighter.", it->GetParent());
          EActor->IPrint("An <hObj> appears in your hands!",it);
        }
      else if (EVictim->isCreature())
        {
          TPrint(e,"The <EVictim>'s <hObj> vanishes and appears in your hands!",
            "Your <hObj> vanishes and appears in the <EActor>'s hands!",
            "The <EVictim>'s <hObj> vanishes and appears in the <EActor>'s hands!",it);
        }
      else
        DPrint(e,"The <hObj> vanishes and appears in your hands!",
                 "The <hObj> vanishes and appears in the <EActor>'s hands!",it);
      
      it->Remove(false);
      EActor->GainItem(it,false);
      return DONE;
      };
  }

Druid / Scroll / Wizard Spell "Summon Swarm" : EA_DRAIN
  { SC_WEA; Base: SP_MEDIUM; Cost: 3; Level: 2; qval: Q_LOC; lval: 3;
    rval: FI_CONTINUAL | FI_OBVIOUS | FI_MODIFIER | FI_FOG | FI_BAD;
    xval: AD_NORM; pval: 1d2; cval: BROWN; aval: AR_FIELD;
    Purpose: EP_CURSE; Flags: EF_DLONG, EF_GLYPH_INSECTS;
    On Event
      MSG_CAST
        "A roiling cloud of small insects appears!",
      EV_MAGIC_STRIKE
        "" /
        "Insects sting you!" /
        "",
      EV_ELAPSED
        "The cloud of insects vanishes.", 
      EV_FIELDON
        "You're in the stinging swarm of bugs.",
      EV_FIELDOFF
        "You escape the insect swarm.";
	Desc: "Conjures a cloud of stinging, biting insects that inflict
	  1d2 points of damage to everyone within every turn, along with
	  inflicting a -2 general circumstance penalty.";
  } 
 and EA_GRANT
  { xval: ADJUST_CIRC; yval: A_AID; pval: -2; aval: AR_FIELD; cval: BROWN; }

Wizard / Sorcerer  Spell "Monster Summoning II" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 4; Level: 2; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"summoned monster"; pval: 2; 
    Desc: "Summons a living creature of CR 2 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(2) }

Wizard Spell "Transposition" : EA_GENERIC
  { SC_WEA; Level: 2; Cost: 4; Base: SP_EASY; qval: Q_TAR;
    Desc: "This specialized form of <9>phase door<1> allows the caster to
      swap locations with any other creature within [Caster Level
      + Wisdom Modifier] x 10 feet of her. A Fortitude saving throw
      on the target's part negates the effect; the save receives
      a +4 circumstance bonus if the caster is standing on dangerous
      terrain (including dry land for aquatic creatures), and this
      modifier raises to +8 if the caster is flying or levitating
      over a chasm and the target creature can't fly.\n";
    On Event EV_CALC_EFFECT {
      e.vRange = e.vCasterLev + EActor->Mod(A_WIS);
      if (!GetHandle(EVictim))
        return NOTHING;
      e.sval = EVictim->isFriendlyTo(EActor) ? NOSAVE : FORT;
      if (ResourceHasFlag(EMap->TerrainAt(EActor->x,EActor->y),TF_FALL))
        e.saveDC -= 8;
      else if (ResourceHasFlag(EMap->TerrainAt(EActor->x,EActor->y),TF_WARN))
        e.saveDC -= 4;
      else if (EVictim->isMType(MA_AQUATIC) && !ResourceHasFlag(
                        EMap->TerrainAt(EActor->x,EActor->y),TF_WATER))
        e.saveDC -= 6;
      return NOTHING;
      },
    EV_MAGIC_HIT {
      int16 cx, cy, vx, vy; hObj m;
      if (EActor->HasStati(ANCHORED) || EVictim->HasStati(ANCHORED))
        {
          TPrint(e, "You and the <EVictim> flicker in place.",
                    "You and the <EActor> flicker in place.",
                    "The <EActor> and the <EVictim> flicker in place.");
          return DONE;
        }
      m = EActor->m;
      cx = EActor->x;
      cy = EActor->y;
      vx = EVictim->x;
      vy = EVictim->y;
      EActor->Remove(false);
      EVictim->Remove(false);
      EActor->PlaceAt(m,vx,vy);
      EVictim->PlaceAt(m,cx,cy);
      
      EActor->IPrint("You trade places with the <hObj>!",EVictim);
      EVictim->IPrint("You suddenly find yourself elsewhere!"); 
      
      return DONE;
      };
  }      
  
 Wizard Spell "Mana Theft" : EA_BLAST
  { 
    SC_WEA; Base: SP_HARD; Cost: 5; Level: 2; 
    aval: AR_TOUCH; lval: LEVEL_2PER1; Purpose: EP_CURSE; 
    xval: AD_SPE1; pval: (LEVEL_1PER1)d8; sval: WILL;
    Flags: EF_DLONG, EF_SHOWNAME, EF_CANCEL, EF_PARTIAL;
    Desc: "By casting this spell, you turn your body into a natural
      conduit for magical energies, allowing you to steal the mana
      of other creatures with a successful touch attack. Your touch
      causes other creatures to lose 1d8 points of mana for every
      caster level, and you gain a similar amount -- up to a maximum 
      of whatever the target had to lose. A Will save allows the 
      target to halve the mana loss. Mana Theft cannot replace mana
      allocated to persistant spells like Mage Armour, and any mana
      above the caster's normal maximum fades after a brief period
      -- although mana stolen from a victim does not regenerate.\n
      __Channeling magical energies in this manner is draining and
      costs you a point of Fatigue when the spell is first cast. A
      single casting gives you two touches for every caster level you
      have.";
    On Event MSG_CAST
      "Your hands glow with a dissonant white light." /
      "The <EActor>'s hands glow with a dissonant white light.", 
    PRE(EV_DAMAGE) {
      int16 amt, full;
      if (e.DType == AD_SPE1 && e.eID == $"Mana Theft")
        {
          if (EVictim->cMana() <= 0)
            {
              EActor->IPrint("The <hObj> has no more mana left to steal.",EVictim);
              return DONE;
            }
          amt = e.vDmg;
          full = EActor->nhMana();
          
          /* Can't steal more than the victim has! */
          if (EVictim->cMana() <= amt)
            amt = EVictim->cMana();
            
          /* Remove the mana from victim */
          EVictim->LoseMana(amt,true);   
          
          /* Add it to caster's total */
          if (amt <= EActor->uMana)
            {
              /* Doesn't take caster over maximum */
              EActor->GainMana(amt);
              amt = 0;
            }
          else
            {
              /* Raise caster to normal maximum */
              amt -= EActor->uMana;
              EActor->GainMana(EActor->uMana);
              
              /* Grant remainder as temporary mana */
              if (EActor->HasEffStati(ADJUST_CIRC,$"Mana Theft")) {
                EActor->IncEffStatiMag(ADJUST_CIRC,$"Mana Theft",
                  SS_ENCH, NULL, (amt+3)/5);
                EActor->SetEffStatiDur(ADJUST_CIRC,$"Mana Theft",
                  e.vCasterLev*10);
                }
              else
                EActor->GainTempStati(ADJUST_CIRC,NULL,e.vCasterLev,
                  SS_ENCH, A_MAN, (amt+3)/5, $"Mana Theft", e.vCasterLev*10);
            }
          TPrint(e, "You steal <hText> of the <EVictim>'s mana!",
                    "The <EActor> steals <hText> of your mana!",
                    NULL, EVictim->cMana() ? "some" : "all");
          
          /* Force Display Refresh */
          EActor->CalcValues();
          EVictim->CalcValues();
          return DONE; 
        }
      return NOTHING;
      },
    PRE(EV_EFFECT) {
      if (!EActor->LoseFatigue(1,true))
        return ABORT;
      return NOTHING;
      };
  }
    
Wizard Spell "Ethereal Blade" : EA_INFLICT
  {
    SC_WEA; IS_A_BUFF(COST_2X); Level: 2; qval: Q_INV;
    Desc: "By casting this spell, a wizard weaves the materiality
      of a specific object -- traditionally a dagger or sword --
      into the tapestry of reality on a more fundamental level,
      making it capable of striking true against incorporeal
      creatures that dwell on the ethereal, astral or negative
      energy planes. The weapon effectively gains the Ghost Touch
      quality while the spell is active.";
    xval: EXTRA_QUALITY; yval: IQ_GHOST_TOUCH;
    Flags: EF_AFFECTS_ITEMS, EF_ITEMS_ONLY;
  }
     
/* ============================================================= 
 *                   Level Three ARCANE Spells
 * =============================================================
 * Abj: Dispel Magic, Magic Circle vs. E, Minor Globe of I.
 * Arc: Stinking Cloud, Explosive Runes, Minor Creation?
 * Div: Clairvoyance, Magic Mapping, Sense Thought, Detect Threats?
 * Enc: Hold Person, Keen Edge, Suggestion, Minor Malison
 * Evo: Fireball, Lightning Bolt, Deeper Darkness
 * Ill: Phantom Steed, Displacement, Group Invisibility, (Illus. Wall)
 * Nec: Spirit Armour, Vampiric Touch, Blackmantle (Gentle Repose)
 * Tha: Haste, Slow, Polymorph Self, Water Walk, (Gaseous Form)
 * Wea: Blink, Dimension Door, Monster Summoning III, (Rope Trick)
 * =============================================================
 */


/* --ABJURATION 3-- */

Wizard / Priest / Druid / Scroll Spell "Dispel Magic" : EA_DISPEL
  {
    SC_ABJ; Base: SP_MEDIUM; Cost: 15; Level: 3; qval: Q_TAR | Q_LOC;
    aval: AR_GLOBE; lval: 3; cval: SKYBLUE; Purpose: EP_CURSE|EP_ATTACK;
    xval: DIS_DISPEL | DIS_SUPPRESS; pval: 1d20 + LEVEL; 
    Desc: "Negates standing magical effects within a 30 foot
      (3 square) radius globe, if the opposed caster level 
      check (made once for each effect) succeeds.";
    Purpose: EP_CURSE | EP_DISPEL (VS_CASTING);
    Flags: EF_STAPLE, EF_LOSEMANA; 
    On Event EV_MAGIC_XY {
      rID xID; hObj it;
      xID = EMap->TerrainAt(e.EXVal,e.EYVal);
      switch (xID)
        {
          case $"strange rune":
          case $"guardian runes;2":
          case $"guardian runes":
            if (e.vCasterLev + EActor->AbilityLevel(CA_PURGE_MAGIC) + 1d20 > 
                  (xID == $"strange rune" ? 18 : 24)) {
              APrint(e,"The rune glows grey and vanishes!");
              e.isSomething = true;
              EMap->RemoveTerraXY(e.EXVal,e.EYVal,xID);
              if (xID == EMap->TerrainAt(e.EXVal,e.EYVal))
                EMap->WriteTerra(e.EXVal,e.EYVal,$"floor");
              }
            else
              APrint(e,"The rune glows grey, but the glow fades quickly.");
           break;
          case $"warded wall":
            if (e.vCasterLev + EActor->AbilityLevel(CA_PURGE_MAGIC) + 1d20 > 18) {
              APrint(e,"Runes vanish from the wall!");
              e.isSomething = true;
              EMap->WriteTerra(e.EXVal,e.EYVal,$"dungeon wall");
              }
           break;
        }
      for(it=EMap->FirstAt(e.EXVal,e.EYVal);it;it=EMap->NextAt(e.EXVal,e.EYVal))
        {
          if (it->isFeature()) {
            if (it->fID == $"warding rune") {
              if (e.vCasterLev + EActor->AbilityLevel(CA_PURGE_MAGIC) + 1d20 > 18)
                { 
                  it->Remove(true);
                  e.isSomething = true;
                  APrint(e,"The warding rune glows grey, then vanishes!");
                }
              else
                APrint(e,"The warding rune glows grey, but the glow quickly fades.");
              }
            if (it->isType(T_TRAP) && !ResourceHasFlag(it->tID,EF_MUNDANE)) {
              if (e.vCasterLev + EActor->AbilityLevel(CA_PURGE_MAGIC) + 1d20 
                    > 14 + it->TrapLevel())
                { 
                  it->TrapFlags |= (TS_FOUND|TS_DISARMED);
                  it->SetImage();
                  e.isSomething = true;
                  APrint(e,"The <hObj> glows grey!",it);
                }
              else {
                it->TriggerTrap(e,false);
                e.eID = $"dispel magic";
                }
              }
              
            if (it->fID == $"warded oak door")
              {
                it->fID = $"oak door";
                it->SetImage();
                e.isSomething = true;
                EMap->Update(e.EXVal,e.EYVal);
                APrint(e,"Runes vanish from the door!");
              }
            }
        }
      },
    EV_ISTARGET {
      if (EActor->CasterLev() ||
          EActor->isPlayer())
        return SHOULD_CAST_IT;
      return CAN_CAST_IT;
      },
    EV_CALC_EFFECT {
      /* Kludge for Wand of Dispelling */
      if (e.isItem)
        if (GetHandle(EItem) != NULL_OBJ)
          if (EItem->isType(T_WAND))
            e.vCasterLev = EItem->GetPlus()*3 + 3;
      return NOTHING;
      }; 
  }
  

/* The FI_BLOCKER field code is hardcoded to look at Vals(0)
   for the type of creatures to block. Hence the EA_GENERIC
   first, then the EA_GRANT (which affects all evil creatures
   instead of just summoned ones. */

Wizard / Priest / Scroll Spell "Magic Circle vs. Evil" : EA_GENERIC
  { SC_ABJ; Base: SP_EASY; Cost: 6; Level: 3; lval: 5; 
    rval: FI_BLOCKER | FI_MODIFIER; tval: MA_SUMMONED;
    aval: AR_FIELD; cval: WHITE; Flags: EF_LIM_MTYPE, EF_GOOD; }
and EA_GRANT 
  { xval: ADJUST; yval: A_AID; pval: -3; cval: WHITE;
    tval: MA_EVIL; Flags: EF_LIM_MTYPE, EF_GOOD; aval: AR_FIELD; }
and EA_GRANT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4; cval: WHITE;
    tval: MA_ALLIES; Flags: EF_LIM_MTYPE, EF_GOOD; aval: AR_FIELD;
    Desc: "Creates an enchanted circle (30 ft. radius) that
      prevents the entry of summoned creatures, inflicts a
      -3 penalty to all evil creatures' attacks and saves,
      and grants everyone a +4 bonus to save versus enchantment."; 
    Purpose: EP_COUNTER (VS_SUMMON); }

Wizard Spell "Magic Circle vs. Good" : EA_GENERIC
  { SC_ABJ; Base: SP_EASY; Cost: 6; Level: 3; lval: 5; 
    rval: FI_BLOCKER | FI_MODIFIER; tval: MA_SUMMONED;
    aval: AR_FIELD; cval: WHITE; Flags: EF_LIM_MTYPE, EF_EVIL; }
and EA_GRANT 
  { xval: ADJUST; yval: A_AID; pval: -3; cval: WHITE;
    tval: MA_GOOD; Flags: EF_LIM_MTYPE, EF_EVIL; aval: AR_FIELD; }
and EA_GRANT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4; cval: WHITE;
    tval: MA_ALLIES; Flags: EF_LIM_MTYPE, EF_EVIL; aval: AR_FIELD;
    Desc: "Creates an enchanted circle (30 ft. radius) that
      prevents the entry of summoned creatures, inflicts a
      -3 penalty to all good creatures' attacks and saves,
      and grants everyone a +4 bonus to save versus enchantment."; 
    Purpose: EP_COUNTER (VS_SUMMON); }

Wizard Spell "Magic Circle vs. Law" : EA_GENERIC
  { SC_ABJ; Base: 90; Cost: 6; Level: 3; lval: 5; 
    rval: FI_BLOCKER | FI_MODIFIER; tval: MA_SUMMONED;
    aval: AR_FIELD; cval: WHITE; Flags: EF_LIM_MTYPE, EF_CHAOTIC; }
and EA_GRANT 
  { xval: ADJUST; yval: A_AID; pval: -3; cval: WHITE;
    tval: MA_LAWFUL; Flags: EF_LIM_MTYPE, EF_CHAOTIC; aval: AR_FIELD; }
and EA_GRANT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4; cval: WHITE;
    tval: MA_ALLIES; Flags: EF_LIM_MTYPE, EF_CHAOTIC; aval: AR_FIELD;
    Desc: "Creates an enchanted circle (30 ft. radius) that
      prevents the entry of summoned creatures, inflicts a
      -3 penalty to all lawful creatures' attacks and saves,
      and grants everyone a +4 bonus to save versus enchantment."; 
    Purpose: EP_COUNTER (VS_SUMMON); }

Wizard Spell "Magic Circle vs. Chaos" : EA_GENERIC
  { SC_ABJ; Base: SP_EASY; Cost: 6; Level: 3; lval: 5; 
    rval: FI_BLOCKER | FI_MODIFIER; tval: MA_SUMMONED;
    aval: AR_FIELD; cval: WHITE; Flags: EF_LIM_MTYPE, EF_LAWFUL; }
and EA_GRANT 
  { xval: ADJUST; yval: A_AID; pval: -3; cval: WHITE;
    tval: MA_CHAOTIC; Flags: EF_LIM_MTYPE, EF_LAWFUL; aval: AR_FIELD; }
and EA_GRANT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4; cval: WHITE;
    tval: MA_ALLIES; Flags: EF_LIM_MTYPE, EF_LAWFUL; aval: AR_FIELD;
    Desc: "Creates an enchanted circle (30 ft. radius) that
      prevents the entry of summoned creatures, inflicts a
      -3 penalty to all chaotic creatures' attacks and saves,
      and grants everyone a +4 bonus to save versus enchantment."; 
    Purpose: EP_COUNTER (VS_SUMMON); }

 Wizard / Priest Spell "Magic Circle vs. Undead" : EA_GENERIC
  { SC_ABJ; Base: SP_EASY; Cost: 6; Level: 3; lval: 5; 
    rval: FI_BLOCKER | FI_MODIFIER; tval: MA_UNDEAD;
    aval: AR_FIELD; cval: WHITE; Flags: EF_LIM_MTYPE; }
and EA_GRANT 
  { xval: SAVE_BONUS; yval: SN_ENCH; pval: +4; cval: WHITE;
    tval: MA_ALLIES; Flags: EF_LIM_MTYPE; aval: AR_FIELD;
    Desc: "Creates an enchanted circle (30 ft. radius) that
      prevents the entry of Undead creatures and grants everyone a +4
      bonus to save versus enchantment."; 
    Purpose: EP_COUNTER (VS_ANIMATE_DEAD); }

Wizard / Scroll Spell "Minor Globe of Invulnerability" : EA_INFLICT
  {
    SC_ABJ; IS_A_BUFF(COST_3); Level: 3; aval: AR_MFIELD;
    cval: PURPLE; lval: 6; rval: FI_MODIFIER; 
    xval: TRAP_EVENT; yval: EV_CAST; Flags: EF_CASTER_IMMUNE;
    On Event META(EV_CAST) {
      if (e.eID)
        if (ResourceLevel(e.eID) <= 3)
          {
            DPrint(e, "Your spell is negated.",
                      "The <EActor> chants, then stops abruptly.");
            EActor->Timeout += 15;
            return DONE;
          }
      return NOTHING;
      };
    Desc: "Creates a zone 30 feet (3 squares) in radius that moves with the
      caster in which spells of 3rd level or lower cannot be cast
      by anyone other than the globe's creator.";
  }
          
/* --ARCANA 3-- */

Wizard / Scroll Spell "Stinking Cloud" : EA_GENERIC
  { SC_ARC|SC_AIR; Base: SP_MEDIUM; Cost: 6; Level: 3; qval: Q_LOC;
    aval: AR_FIELD; lval: 3; cval: GREEN; 
    rval: FI_CONTINUAL|FI_FOG|FI_BAD;
    Flags: EF_GLYPH_FOG;
    Purpose: EP_CURSE |AIM_AT_ENEMY;
    Desc: "Creates a 30 foot (3 square) radius cloud of noxious
      vapors, causing all breathing creatures within the cloud to make a
      Fortitude save (DC 20) every round or suffer nausea for 2d4
      additional rounds.  Nauseated creatures cannot attack or cast spells
      and are considered off-guard for the purposes of sneak attacks. The
      caster is not immune!";
    On Event EV_MAGIC_STRIKE {
      if (EVictim->onPlane() == PHASE_MATERIAL &&
          EVictim->isMType(MA_BREATHER) && 
          !EVictim->SavingThrow(FORT,20))
        EVictim->GainTempStati(NAUSEA,EActor,2d4,SS_ENCH,0,0,
          $"stinking cloud");
    }, 
    MSG_CAST
      "A cloud of greenish vapors billows up!",
    EV_ELAPSED
      "The stinking cloud effect is over.";
  }

Wizard Spell "Explosive Runes" : EA_TERRAFORM
  { SC_ARC|SC_EARTH; Base: SP_TRIVIAL; Cost 5; Level: 3; qval: Q_LOC; xval: TERRA_FLOOR;
    rval: $"strange rune"; sval: REF; pval: (LEVEL_MAX10)d6;
    Desc: "Turns one chosen floor square into a rune that explodes
      for 1d6 damage per caster level (max 10d6) when stepped on."; 
    Purpose: EP_PLAYER_ONLY; 
    On Event MSG_CAST
      "A glowing rune appears on the ground!"; }

Terrain "strange rune"
  { Image: pink '#'; Mat:MAT_GRANITE; 
    Flags: TF_SPECIAL, TF_EFFECT, TF_WARN; 
    On Event EV_MON_CONSIDER {
      if (EActor->cHP < EMap->GetTerraDmg(e.EXVal,e.EYVal) &&
          EActor->GetAttr(A_INT) > 10)
        return ABORT;
      return NOTHING; 
    } ;
    On Event EV_SPECIAL {
	  hObj mp; mp = GetHandle(EMap);
      DPrint(e, "The rune explodes!", "The rune explodes!");
      if (EActor->SavingThrow(REF,EMap->GetTerraDC(e.EXVal,e.EYVal)))
        ThrowTerraDmg(EV_DAMAGE,AD_NORM,EMap->GetTerraDmg(e.EXVal,e.EYVal)/2,
          "an exploding rune",EActor, $"strange rune");
      else
        ThrowTerraDmg(EV_DAMAGE,AD_NORM,EMap->GetTerraDmg(e.EXVal,e.EYVal),
          "an exploding rune",EActor, $"strange rune");

      mp->RemoveTerraXY(e.EXVal,e.EYVal,$"explosive runes");
      mp->RemoveTerraXY(e.EXVal,e.EYVal,$"glyph of warding");
      return NOTHING;
      };
  }



Wizard / Druid / Scroll Spell "Wall of Ice" : EA_TERRAFORM
  { SC_ARC|SC_COLD; Base: SP_EASY; Cost: 6; Level: 3; lval: 6; qval: Q_DIR;
    xval: TERRA_OPEN; aval: AR_BARRIER; Flags: EF_DLONG;
    rval: $"ice wall"; pval: 2d6 + (LEVEL_MAX20); 
    Purpose: EP_FOIL_PURSUIT | EP_ESCAPE | EP_BARRIER | AIM_AT_ENEMY;
    Desc: "Conjures a solid barrier made out of ice, displacing
      any creatures in its path and blocking further passage."; 
    On Event MSG_CAST
      "A wall of solid ice materializes!",
    EV_ELAPSED
      "The icy wall melts away to nothing."; }

Wizard / Scroll Spell "Keen Edge" : EA_GENERIC
  { SC_ARC; IS_A_BUFF(COST_3); Level: 3; 
    Desc: "Imbues all of your non-blunt, non-missile weapons with a
    supernaturally sharp edge, doubling their threat ranges."; 
    Purpose: EP_BUFF; 
    hObj it;
    On Event 
      EV_ISTARGET {
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(WQ_KEEN))
              return SHOULD_CAST_IT; 
        }
        return CANNOT_CAST_IT; 
      } ,
      EV_MAGIC_STRIKE {
        for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
          if (it->isType(T_WEAPON) || it->isType(T_BOW))
            if (it->QualityOK(WQ_KEEN))
              it->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,WQ_KEEN,WQ_KEEN,$"keen edge");
        } 
      }; 
  }

Wizard Spell "Alisdair's Fundamental Breakdown" : EA_BLAST
  { SC_ARC; Cost: 3; Level: 3; Base: SP_EASY; qval: Q_LOC;
    Desc: "Potions contain a complex synthesis of rare alchemical
      elements and potent, potentially destructive magical energies
      bound with precise skill into a stable configuration. Casting
      this spell induces entropy in that balance, causing the elements
      of a chosen potion to decompose and become unstable -- essentially
      turning it into a kind of magical grenade that the caster can
      throw at square within 60 feet of her. The potion explodes into
      a volumetric blast or flame and toxic smoke inflicting 1d6 points 
      of damage per caster level, plus an added number of dice of damage 
      based on the potency of the potion used. This causes half fire
      damage and half toxic damage to all creatures caught in the area;
      a Reflex save halves the damage.";
    On Event PRE(EV_EFFECT) {
      hObj hPotion, it; int16 i; bool found;
      ClearCandidates(); found = false;
      e.MM &= ~(MM_WARP);
      for (it=EActor->FirstInv();it;it=EActor->NextInv())
        if (it->isType(T_POTION) && it->isMagic())
          {
            if (EActor->isPlayer())
              ETerm->LOption(it->Name(NA_SINGLE),(int32)it);
            else
              AddCandidate((int32)it);
            found = true;
          }
      if (!found)
        {
          EActor->IPrint("You need a potion to use that spell.");
          return ABORT;
        }
      if (EActor->isPlayer())
        {
          hPotion = (hObj) ETerm->LMenu(MENU_BORDER|MENU_ESC, 
            "Choose a Potion:");
          if (hPotion == (hObj) -1)
            return ABORT;
        }
      else
        hPotion = (hObj) RandCandidate();
      
      EActor->GainTempStati(BONUS_SCHOOL_CASTING_LEVEL,NULL,1,SS_MISC,
        SC_ARC, hPotion->ItemLevel()*2,$"Alisdair's Fundamental Breakdown");
      
      hPotion = hPotion->TakeOne();
      
      hPotion->Remove(true);
      return NOTHING;
      },
    POST(EV_EFFECT) {
      EActor->RemoveEffStati($"Alisdair's Fundamental Breakdown");
      return NOTHING;
      },
    MSG_CAST
      "You hurl the unstable potion!" /
      "The <EActor> throws a potion -- and it explodes!",
    MSG_BLASTNAME
      "alchemical fireball";
    aval: AR_BALL; cval: COL_POISON; lval: 18; sval: REF partial; 
    pval: (LEVEL_EVERY2)d6; xval: AD_FIRE; }
and EA_BLAST
  { pval: (LEVEL_1PER2)d6; xval: AD_TOXI; }

Wizard Spell "Minor Creation" : EA_GENERIC
  {
    SC_ARC; Base: SP_EASY; Cost: 12; Level: 3; Purpose: EP_PLAYER_ONLY;
    Desc: "Casting this spell allows a mage to create any object make of
      organic material -- wood, hemp, cloth, etc. -- or stone. The mage
      must make a Craft check to create an item of any notable complexity,
      or must make a Poison Use check against the poison's save DC + 5 to
      conjure a poison. Metal items, magical materials and some rare
      synthetic poisons are beyond the domain of this spell, as is anything
      which contains writing (such as a spellbook).\n
      __Created items are permanent, but drawing forth matter from nothing
      costs a mage 25 XP, plus 1 XP per 25 gp the created items are worth.";
    On Event EV_MAGIC_HIT {
      hObj it; int16 CraftDC, XPCost, mat;
      it = ETerm->AcquisitionPrompt(ACQ_MINOR,0,0,0);
      if (it == NULL_OBJ)
        return DONE;
      XPCost = 25;
      if (it->isType(T_TRAP))
        {
          e.vRange = 1;
          if (!ETerm->EffectPrompt(e,Q_LOC,false,"Trap Location"))
            { it->Remove(true); return DONE; }
          it->PlaceAt(EActor->m,e.EXVal,e.EYVal);
        }
      else
        {
          if (it->isType(T_FOOD) || it->HasIFlag(IT_ROPE) ||
              it->iID == $"club" || it->iID == $"large club" ||
              it->iID == $"quarterstaff" || it->iID == $"torch")
            CraftDC = 0;
          else 
            CraftDC = 15;
          if (CraftDC && !EActor->SkillCheck(SK_CRAFT,CraftDC,true))
            {
              EActor->IPrint("You fail to shape the created matter properly!");
              if (EActor->isPlayer())
                EActor->LoseXP(25 /* + it->Cost() / 25 */);
              it->Remove(true);
              return DONE;
            }
          
          if (it->iID == $"small glass vial" && it->ieID != NULL_ID)
            if (!EActor->SkillCheck(SK_POISON_USE,PoisonDC(it->ieID)+5,true))
              {
                EActor->IPrint("You fail to synthesize the poison properly!");
                it->ieID = NULL_ID;
              }
          /*
          if (it->isMetallic() || it->Material() == MAT_WOOD)
            if (EActor->yn("Alter default material?",'n'))
              {
                ETerm->LOption(it->isMetallic() ? "Iron" : "Wood", 0);
                if (it->QualityOK(IQ_SILVER))
                  ETerm->LOption("Silver (+5 XP)",    IQ_SILVER);
                if (it->QualityOK(IQ_ADAMANT))
                  ETerm->LOption("Adamant (+100 XP)", IQ_ADAMANT);
                if (it->QualityOK(IQ_IRONWOOD))
                  ETerm->LOption("Ironwood (+50 XP)", IQ_IRONWOOD);
                if (it->QualityOK(IQ_MITHRIL))
                  ETerm->LOption("Mithril (+50 XP)",  IQ_MITHRIL);
                if (it->QualityOK(IQ_DARKWOOD))
                  ETerm->LOption("Darkwood (+75 XP)", IQ_DARKWOOD);
                mat = ETerm->LMenu(MENU_BORDER, "Choose a Material:");
                switch (mat)
                  {
                    case IQ_SILVER:    XPCost += 5;   break;
                    case IQ_ADAMANT:   XPCost += 100; break;
                    case IQ_IRONWOOD:  XPCost += 50;  break;
                    case IQ_MITHRIL:   XPCost += 50;  break;
                    case IQ_DARKWOOD:  XPCost += 75;  break;
                  }
                if (mat)
                  it->AddQuality(mat);          
              }
          */
          if (it->HasIFlag(IT_ROPE))
            it->SetQuantity(30);
          else if (it->HasIFlag(IT_BGROUP))
            it->SetQuantity(e.MM & MM_MAXIMIZE ? 100 : 10d10);
          else if (it->HasIFlag(IT_GROUP))
            it->SetQuantity(e.MM & MM_MAXIMIZE ? 24 : 2d12);
          
          if (e.MM & MM_EMPOWER)
            it->SetQuantity((it->GetQuantity()*3)/2);

          EActor->GainItem(it,false);
        }
      if (EActor->isPlayer())
        EActor->LoseXP(XPCost /* + it->Cost() / 25 */);
      return DONE;
      };
  }


/* --DIVINATION 3-- */

Wizard / Sorcerer / Potion / Scroll Spell "Clairvoyance" : EA_VISION
  { SC_DIV; Level: 3; Cost: 15; Base: SP_TRIVIAL; Purpose: EP_PLAYER_ONLY;
    xval: VIS_MOBILE | VIS_LOS; pval: 30; yval: 5; 
    Desc: "Allows the caster to scry around the nearby area."; }

Wizard / Scroll Spell "Detect Monsters" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_3X); Level: 3; xval: DETECTING; yval: 0; 
    Desc: "Reveals all creatures, seen or unseen, within (15 + caster
    level) squares of the caster; specialist Diviners have an exceptional
    facility with this magic, and instead gain a range of 30 + [caster
    level x 2]) squares."; int16 range;
    On Event MSG_STATINAME 
      "DetMon" / "DetM",
    EV_CALC_EFFECT {
      if (GetHandle(EActor) == NULL_OBJ)
        return NOTHING;
      if (EActor->HasStati(SPECIALTY_SCHOOL,2))
        e.vDmg = 30 + e.vCasterLev*2;
      else
        e.vDmg = 15 + e.vCasterLev;
      range = e.vDmg;
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      EVictim->SetEffStatiMag(DETECTING,$"Detect Monsters",range);
      return NOTHING;
      };
  }

Wizard / Scroll Spell "Magic Mapping" : EA_GENERIC
  { SC_DIV; Level: 3; Cost: 20; Base: SP_TRIVIAL; Purpose: EP_PLAYER_ONLY;
    pval: 10d1 + LEVEL_4PER1;
    Desc: "Reveals to the caster the physical layout of the nearby area
      out to a range of (100 + [Caster Level x 40]) feet. This spell does
      not detect monsters, objects or terrain.";
    On Event EV_MAGIC_HIT {
      int16 x, y;
      for (x = EActor->x - e.vDmg; x!= (EActor->x + e.vDmg + 1); x++)
        for (y = EActor->y - e.vDmg; y!= (EActor->y + e.vDmg + 1); y++)
          if (x > 1 && y > 1 && x+1 < EMap->SizeX() && y+1 < EMap->SizeY())
            if (dist(x,y,EActor->x,EActor->y) <= e.vDmg)
              if (EMap->SolidAt(x,y))
                if (!(EMap->SolidAt(x+1,y) && EMap->SolidAt(x-1,y) &&
                      EMap->SolidAt(x,y+1) && EMap->SolidAt(x,y-1) &&
                      EMap->SolidAt(x+1,y+1) && EMap->SolidAt(x-1,y-1) &&
                      EMap->SolidAt(x-1,y+1) && EMap->SolidAt(x+1,y-1)))                  /* Assumption: Player #0 */
                  EMap->MarkAsSeen(0,x,y,0);
      ETerm->RefreshMap();
      return DONE;
      };
  }
  
Wizard Spell "Anyspell" : EA_GENERIC
  { SC_DIV; Level: 3; Cost: 35; Base: SP_HARD; Purpose: EP_PLAYER_ONLY;
    Desc: "Casting this spell mystically reveals to the mage
      knowledge of any single arcane spell of 2nd level or
      lower, just as if she had learned the spell herself.
      This kind of revealed knowledge only lasts for a short
      time, but for that duration the mage can cast the
      gained spell just as if she knew it naturally. When
      the duration of Anyspell expires, any persistant
      effects of the revealed spell cease. Gaining knowledge
      in this manner is intensely straining, costing the
      mage two Fatigue points.\n
      __Specialist Diviners are able to make more efficiant
      use of this spell than other mages -- they spend only
      one Fatigue and gain any arcane spell of 3rd level or
      lower.";
    On Event EV_MAGIC_HIT {
      int16 maxlev, i; rID spID;
      maxlev = 2;
      maxlev += EActor->HasStati(SPECIALTY_SCHOOL,2) ? 1 : 0;
      if (e.MM & MM_HEIGHTEN)
        maxlev++;
      for(i=0;i!=theGame->LastSpell();i++)
        {
          spID = theGame->SpellID(i);
          if (spID->HasSource(AI_WIZARDRY) && spID->Level <= maxlev)
            if (!(EActor->getSpellFlags(spID) & SP_KNOWN))
              ETerm->LOption(XPrint("<Res>",spID),(int32)spID);
        }
      spID = (rID) ETerm->LMenu(MENU_BORDER|MENU_3COLS|MENU_ESC|MENU_SORTED,
        "Choose a Spell:", WIN_MENUBOX);
      if (spID == (rID) -1)
        return ABORT;
      if (!EActor->LoseFatigue(1 + EActor->HasStati(SPECIALTY_SCHOOL,3), true))
        return ABORT;
      EActor->GainTempStati(EFF_FLAG1,NULL,e.vDuration,SS_ENCH,
        theGame->SpellNum(spID),0,$"Anyspell",e.vCasterLev);
      EActor->setSpellFlags(spID, EActor->getSpellFlags(spID) 
                | SP_KNOWN | SP_ARCANE);
      EActor->IPrint("Mystical knowledge of <9><Res><7> imprints
        itself on your mind!", spID);
      },
    EV_REMOVED {
      rID spID2;
      spID2 = theGame->SpellID(e.vVal);
      EActor->RemoveEffStati(spID2);
      EActor->IPrint("The knowledge of <9><Res><7> fades from your mind.",spID2);
      EActor->setSpellFlags(spID2,EActor->getSpellFlags(spID2) & 
                              ~(SP_ARCANE|SP_KNOWN));
      return NOTHING;
      };
  }
  
/* Kludges here are a result of serious logic errors in Magic.Cpp
   where the CalcEffect code is manually duplicated -- I don't
   want to change this now for fear of breaking other spells, but
   it WILL get fixed! Also, we should change all those references
   to e->EMagic.*val to be references to actual EventInfo members,
   and just copy the values in CalcEffect. */
Wizard Spell "Lorecall" : EA_INFLICT
  {
    SC_DIV; Level: 3; IS_A_BUFF(17);
    Desc: "Casting this spell, you greatly enhance your proficiency via
      magically revealed knowledge. You select any one skill that you
      have as an affinity skill, and you gain a magic bonus to that
      skill equal to the number of ranks invested into the skill. This
      bonus caps at +5, or +10 for specialist Diviners.";
    xval: SKILL_BONUS; yval: 105; pval: +1; int16 sk, mag;
    On Event PRE(EV_EFFECT) {
      int16 i; bool found;
      if (EActor->HasEffStati(SKILL_BONUS,$"Lorecall"))
        {
          EActor->IPrint("You can only have one Lorecall at a time.");
          return ABORT;
        }
      if (EActor->isPlayer())
        {
          found = false;
          for(i=0;i!=SK_LASTSKILL;i++)
            if (EActor->HasSkill(i) && EActor->GetSkillRanks(i))
              { found = true; ETerm->LOption(SkillName(i),i); }
          if (!found)
            { EActor->IPrint("You have no skills with ranks in them.");
              return ABORT; }
          sk = ETerm->LMenu(MENU_SORTED|MENU_BORDER|MENU_3COLS|MENU_ESC,
            "Choose a Skill:", WIN_MENUBOX);
          if (sk == -1)
            return ABORT;
        }
      else
        {
          if (EActor->HasSkill(SK_METAMAGIC))
            sk = SK_METAMAGIC;
          else if (EActor->HasSkill(SK_SPELLCRAFT))
            sk = SK_SPELLCRAFT;
          else if (EActor->HasSkill(SK_ILLUSION))
            sk = SK_ILLUSION;
          else if (EActor->HasSkill(SK_HIDE))
            sk = SK_HIDE;
          else
            return ABORT;
        }
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      EVictim->SetEffStatiVal(SKILL_BONUS,$"Lorecall",sk);
      EVictim->SetEffStatiMag(SKILL_BONUS,$"Lorecall",mag);
      return NOTHING;
      },
    EV_CALC_EFFECT {
      if (GetHandle(EActor) == NULL_OBJ)
        return NOTHING;
      if (EActor->isPlayer())
        e.vDmg = EActor->GetSkillRanks(sk);
      else
        e.vDmg = (EActor->SkillLevel(sk) * 2) / 3;
      if (EActor->HasStati(SPECIALTY_SCHOOL,2))
        e.vDmg = min(e.vDmg,10);
      else
        e.vDmg = min(e.vDmg,5);
      if (e.MM & MM_EMPOWER)
        e.vDmg = (e.vDmg * 15) / 10;
      
      mag = e.vDmg;
      return NOTHING;
      };
  }
      
Wizard Spell "Insightful Stroke" : EA_INFLICT
  { SC_DIV; Base: SP_EASY; Cost: 10; Level: 3; Purpose: EP_BUFF (VS_MELEE); 
    Flags: EF_SHOWNAME, EF_DLONG, EF_ONCEONLY, EF_NOTBAD;
    xval: ADJUST_INS; yval: A_DMG; pval: LEVEL_1PER1; 
    Desc: "Casting this spell reveals the hidden weaknesses of a target
      and the most perfect pattern of attack specific to a given target
      in a given instant, granting the caster a bonus to her next single
      physical attack's damage equal to her caster level plus her Wisdom
      modifier.";
    On Event EV_CALC_EFFECT {
      if (GetHandle(EActor))
        e.vDmg = e.vCasterLev + EActor->Mod(A_WIS);
      return NOTHING;
      };
  }
  
Wizard Spell "Warning" : EA_INFLICT
  { SC_DIV; Level: 3; IS_A_BUFF(COST_3); 
    Desc: "This spell grants the caster a preternatural awareness of danger
      and threats, giving her a +4 bonus to save versus traps as well as
      granting her the Improved Initiative feat while it is active.";
    xval: EXTRA_FEAT; yval: FT_IMPROVED_INITIATIVE; }
and EA_GRANT
  { xval: SAVE_BONUS; yval: SN_TRAPS; pval: +4; }     

/* --ENCHANTMENT 3-- */

Wizard Spell "Heroism" : EA_INFLICT
  { SC_THA; SC_ENC; IS_A_BUFF(COST_3); Level: 3; qval: Q_TAR;
    xval: ADJUST_MOR; yval: A_AID; pval: +2;
    Desc: "Grants the chosen subject a +2 morale bonus to attack
      rolls, damage rolls, and saving throws."; }

Wizard Spell "Deep Slumber" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 7; Level: 3; sval: WILL; 
    Purpose: EP_CURSE (VS_MENTAL); qval: Q_TAR | Q_LOC; 
    Flags: EF_DLONG, EF_MENTAL, EF_LIM_LEVEL, EF_CASTER_IMMUNE; lval: 2;
    xval: ASLEEP; yval: SLEEP_NATURAL; tval: LEVEL; 
	aval: AR_GLOBE; cval: AZURE;
    Desc: "Causes creatures whose levels are equal to your own 
      or less within a 20 foot (2 square) radius globe to 
      fall into slumber until woken or attacked.";
  }     
        
Wizard / Scroll / Priest Spell "Hold Person" : EA_INFLICT
  { SC_ENC; Level: 3; Cost: 6; Base: SP_MEDIUM; qval: Q_TAR;
    xval: PARALYSIS; sval: WILL; tval: MA_PERSON; 
    Purpose: EP_CURSE (VS_MENTAL); Flags: EF_LIM_MTYPE, EF_MENTAL;
    Desc: "Paralyzes one chosen humanoid, provided they fail a Will
      saving throw.";
  }

/* ww: before this was a two-target spell which meant that the enemy AI
 * could never user it -- I'm revamping it so that it has one target. It's
 * now more of a "tag, you're it!" kind of deal. */
Wizard Spell "Sign of Discord" : EA_GENERIC
  { SC_ENC; Base: SP_EASY; Cost: 6; Level: 3; lval: 12; 
    sval: WILL + 10; qval: Q_TAR; Flags: EF_CHAOTIC;
    Purpose: EP_CURSE | EP_FOIL_PURSUIT | AIM_AT_ENEMY;
    /* xval: ENEMY_TO; yval: -1; */ 
    Desc: "By making an archaic gesture, the caster curses a single
      creature, causing discord between it and all nearby creatures.
      All creatures within 120 feet, even the victim's allies, who
      fail a Will saving throw will view that creature as hostile
      and act accordingly to it. The target herself is not affected
      and does not make a saving throw. This spell is considered a
      considered a confusion effect, and save bonuses for such apply
      against it.";
    On Event EV_MAGIC_HIT {
      hObj hMon; 
      for (hMon=EMap->FirstThing();hMon;hMon=EMap->NextThing())
        if (hMon->isCreature() && hMon->DistFrom(EVictim) <
              ((e.MM & MM_EXTEND) ? 24 : 12))
          if (hMon != GetHandle(EActor) && hMon != GetHandle(EVictim))
            {
              if (hMon->ResistLevel(AD_MIND) == -1 ||
                  hMon->HasMFlag(M_MINDLESS))
                hMon->IDPrint("You are unaffected.",
                              "The <hObj> is unaffected.", hMon);
              else if (hMon->SavingThrow(WILL,e.saveDC,SA_SPELLS|SA_ENCH|SA_MAGIC|SA_CONF))
                hMon->IDPrint("You resist.", "The <hObj> resists.", hMon);
              else {
                if (hMon->isFriendlyTo(EVictim))
                  hMon->IDPrint("", "The <hObj> snaps and turns on the <hObj>!",
                                    hMon, EVictim);
                else
                  hMon->IDPrint("", "The <hObj> gets angry at the <hObj>!",
                                    hMon, EVictim); 
                hMon->TurnHostileTo(EVictim);
                hMon->GainTempStati(DIPLOMACY_TAG,EActor,6d20,SS_ENCH,0,0,$"Sign of Discord");
                }
            }
      return DONE;
      },
    MSG_CAST
      "You make an archaic gesture." /
      "The <EActor> makes an archaic gesture.";
  }

Wizard / Scroll Spell "Minor Malison" : EA_INFLICT
  { SC_ENC; Level: 3; Cost: 6; Base: SP_EASY; qval: Q_TAR;
    xval: ADJUST; yval: A_SAV; pval: -2; Purpose: EP_CURSE;
    Desc: "Afflicts a target with ill luck, causing him to suffer
      a -2 penalty to all saving throws.";
    On Event EV_MAGIC_HIT
      "You feel unlucky.";
  }
  
Wizard / Scroll Spell "Suggestion" : EA_INFLICT
  {
    SC_ENC; Level: 3; Cost: 7; Base: SP_EASY;
    xval: SKILL_BONUS; yval: SK_DIPLOMACY; pval: +10;
    Desc: "Casting this spell allows the wizard to weave a post-hypnotic
      suggestion into normal speech, leading others into doing what she
      wants imperceptably. In game terms, the dwenomer gives the mage a
      +10 magic bonus to her next single Diplomacy check, unless the target
      is immune to Enchantment magic, in which case the spell has no effect.
      Though there is no saving throw, if the target has a bonus to save
      versus Enchantment spells, that is applied as a penalty against the
      bonus given, to a minimum of 0. The Diplomacy check must be made
      shortly after casting the spell for it to be effective.";
    Flags: EF_SHOWNAME, EF_ONCEONLY;
  }

/* --EVOCATION 3-- */

Wizard Spell "Fireball" : EA_BLAST
  { SC_EVO|SC_FIRE; Base: SP_MEDIUM; Cost: 6; Level: 3; sval: REF partial;
    xval: AD_FIRE; pval: (LEVEL_SCALED)d6; Purpose: EP_ATTACK;
    aval: AR_BALL; qval: Q_DIR | Q_TAR | Q_LOC; cval: COL_FIRE; lval: 8;
    Flags: EF_COMMON;
    Desc: "Creates a volumetric blast of fire that inflicts 1d6 
      points of damage for every caster level. The blast can also
      disperse magical fog if it inflicts more than five times the 
      creator's caster level in fire damage.";
    On Event EV_MAGIC_XY {
      if (EMap->DispelField(e.EXVal,e.EYVal,0,$"Obscurement",e.vDmg / 5) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Fog Cloud",e.vDmg / 5) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Mind Fog",e.vDmg / 5) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Pyrotechnics;smoke",e.vDmg / 5) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Thunderbeast Fumes",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"Stinking Cloud",0) ||
          EMap->DispelField(e.EXVal,e.EYVal,0,$"fog;horn effect",e.vDmg / 5))
        APrint(e,"The fire burns away the fog!");
      return NOTHING;
      };
  }

Wizard / Scroll Spell "Flame Arrow" : EA_GENERIC
  { SC_EVO|SC_FIRE; Base: SP_EASY; Cost: 6; Level: 3;
    Desc: "This spell can be cast in one of two forms:\n
    __<9>Augment Existing Arrows:<1> This version of the spell imbues a
    stack of piercing missile weapons with the flaming quality for the
    next thirty turns.\n
    __<9>Conjure Arrows of Flame:<1> This version of the spell creates
    bolts of solid flame inflicting 5d6 points of fire damage. The caster gains
    one such bolt in the turn the spell was cast, and one bolt for every
    turn thereafer, until the spell is cancelled or the duration expires.
    An attack roll must be made to hit with the bolts. A reflex save may
    be made to halve the damage from a flame arrow."; 
    On Event META(EV_TURN) {
      e.eID = $"Flame Arrow;blast";
      if (!ETerm->EffectPrompt(e,Q_TAR,false,"Target Flame Arrow:"))
        {
          e.eID = (rID) 0;
          return NOTHING;
        }
      e.eID = (rID) 0;
      if (!GetHandle(EVictim))
        return NOTHING;
      e.vCasterLev = EActor->CasterLev();
      e.MM = EActor->GetEffStatiMag(EFF_FLAG1,$"Flame Arrow") +
             EActor->GetEffStatiMag(EFF_FLAG2,$"Flame Arrow") * 0xFFFF;
      RedirectEff(e,$"Flame Arrow;blast",EV_EFFECT);
      return NOTHING;
      },
    EV_MAGIC_HIT {
      EActor->GainTempStati(EFF_FLAG1,NULL,e.vDuration,SS_ENCH,
        e.MM & 0xFFFF,0,$"Flame Arrow",e.vCasterLev);
      EActor->GainTempStati(EFF_FLAG2,NULL,e.vDuration,SS_ENCH,
        (e.MM & 0xFFFF0000) << 16,0,$"Flame Arrow",e.vCasterLev);
      EActor->GainTempStati(TRAP_EVENT,NULL,e.vDuration,SS_ENCH,
        EV_TURN,0,$"Flame Arrow",e.vCasterLev);
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      RedirectEff(e,$"flame arrow",META(EV_TURN));
      return NOTHING;
      },
    PRE(EV_EFFECT) {
      char ch;
      ch = EActor->ChoicePrompt("Augment missiles or conjure arrows?","ac",'c'); 
      if (ch == 'a')
        {
          RedirectEff(e,$"flame arrow;augment",EV_EFFECT);
          return DONE;
        }
      return NOTHING;
      };
    Flags: EF_CANCEL, EF_LOSEMANA;
  }

Effect "Flame Arrow;blast" : EA_BLAST
  { xval: AD_FIRE; pval: 5d6; sval: REF partial;
    aval: AR_BOLT; cval: RED; 
    Flags: EF_ATTACK;
  }

Effect "Flame Arrow;augment" : EA_GENERIC
  {
    qval: Q_INV;
    On Event EV_ISTARGET {
      hObj it;
      for(it=EActor->FirstInv();it;it=EActor->NextInv()) {
        if (it->isType(T_MISSILE) && it->QualityOK(WQ_FLAMING))
          if (it->HasIFlag(WT_PIERCING))
            return SHOULD_CAST_IT; 
        }
      return CAN_CAST_IT; 
      },
    EV_RATETARG {
      if (!EItem->QualityOK(WQ_FLAMING))
        return ABORT;
      if (!EItem->isType(T_MISSILE))
        return ABORT;
      if (!EItem->HasIFlag(WT_PIERCING))
        return ABORT;
      return NOTHING;
      },  
    EV_CALC_EFFECT {
      e.vDuration = 30;
      return NOTHING;
      },
    EV_MAGIC_STRIKE {
      if (ETarget->isType(T_MISSILE) && ETarget->QualityOK(WQ_FLAMING))
        if (ETarget->HasIFlag(WT_PIERCING))
          ETarget->GainTempStati(EXTRA_QUALITY,EActor,e.vDuration,SS_ENCH,
            WQ_FLAMING,WQ_FLAMING,$"flame arrow"); 
      return DONE;
    }; 
  
  }

Wizard  Spell "Icelance" : EA_BLAST
  { SC_EVO|SC_COLD; Base: SP_MEDIUM; Cost: 6; Level: 3; sval: NOSAVE;
    xval: AD_COLD; pval: 5d6; Purpose: EP_ATTACK;
    aval: AR_BOLT; qval: Q_DIR | Q_TAR; cval: COL_COLD; 
    Desc: "This spell fires a magical lance of ice at a target of the caster's
    choosing.  It automatically hits, inflicting 5-30 points of damage and
    forcing the target to make a Fortitude save or be stunned for 1-4
    rounds.";
  }
  and EA_INFLICT
  { xval: STUNNED; sval: FORT; aval: AR_BOLT; flags: EF_DSHORT; }

Wizard  Spell "Lightning Bolt" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 6; Level: 3; sval: REF partial;
    xval: AD_ELEC; pval: (LEVEL_SCALED)d6; Purpose: EP_ATTACK;
    aval: AR_BEAM; qval: Q_DIR | Q_TAR; cval: YELLOW; lval: 15; 
    Desc: "Creates a bolt of lightning that inflicts 1d6 points 
      of damage for every caster level.";
    Flags: EF_COMMON;
  }

/* fjm: Renamed to coincide with a classic spell. */
Wizard / Scroll Spell "Thunderlance" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 6; Level: 3; sval: REF partial;
    xval: AD_BLUNT; pval: 5d4 + (LEVEL_2PER1); Purpose: EP_ATTACK;
    aval: AR_BEAM; qval: Q_DIR | Q_TAR; cval: PURPLE; lval: 6; 
    Flags: EF_SOUND;
    Desc: "This spell creates a lance of force, extending from the caster
    to a specified point 60 feet in the distance.  Any creatures in the
    lance's path take 5d4 points of crushing damage, +2 points of damage
    per level of the caster (maximum of +30).  Victims can Reflex save for
    half damage.";
  }

 Wizard / Priest Spell "Deeper Darkness" : EA_GENERIC
  { SC_EVO|SC_DARKNESS; Base: SP_MEDIUM; Cost: 4; Level: 3; qval: Q_LOC;
    aval: AR_FIELD; rval: FI_DARKNESS; lval: 6; cval: SHADOW; 
    Purpose: EP_STEALTH | EP_FOIL_PURSUIT; Flags: EF_DLONG;
    /* HACKFIX */ Purpose: EP_PLAYER_ONLY; 
    Desc: "Creates a 60' (6 squares) radius globe of inpenetrable
      magical darkness that obscures all natural and magical sight.
      The spell will also negate the effects of a <9>call light<1>
      spell existing in its area when it is cast.";
        On Event EV_MAGIC_XY {
      if (EMap->DispelField(e.EXVal,e.EYVal,0,$"call light",0))
        APrint(e,"The darkness snuffs out the magical light!");
      return NOTHING;
      };
  }


/* --ILLUSION 3-- */

Wizard / Scroll Spell "Displacement" : EA_INFLICT
  { IS_A_BUFF(COST_3X); SC_ILL; Level: 3;
    xval: MISS_CHANCE; yval: MISS_FULL; pval: 50;
    On Event MSG_CAST
      "Your image shifts two feet away from your location." /
      "The <EActor>'s image shifts two feet.",
    EV_REMOVED
      "Your image shifts back to your true position." /
      "The <EActor>'s image shifts two feet.";     
    Desc: "Causes the caster to appear to be about 2 feet from where
      he actually is, thereby giving all attacks -- ranged and physical --
      against him a 50% miss chance."; }

Wizard Spell "Group Invisibility" : EA_INFLICT
  { SC_ILL; Base: SP_MEDIUM; Cost: 6; Level: 3; aval: AR_GLOBE;
    xval: INVIS; yval: INV_NORMAL; pval: LEVEL_1PER1;
    lval: 6; tval: MA_ALLIES; Flags: EF_LIM_MTYPE, EF_NOTBAD; cval: BLUE;
    Purpose: EP_BUFF | EP_STEALTH;
    Desc: "Renders the caster and all allies within 60 feet (6 squares)
      of her invisible.";
  }

Wizard / Scroll Spell "Nondetection" : EA_GRANT
  { SC_ILL; IS_A_BUFF(COST_3); Level: 3; 
    xval: NONDETECTION; yval: 
      PER_DETECT|PER_SCENT|PER_TELE; 
    Purpose: EP_BUFF | EP_STEALTH ;
    Desc: "The warded creature or object becomes difficult to detect by
    divination or other non-standard means. Scent, 
    Telepathy and Detection are all blocked. The creature can
    still be tracked or perceived visually. Note that this does *not* by
    itself hide or otherwise make the wearer invisible."; 
    // ww: yes, I know this is more powerful than the SRD. Without granting
    // scent immunity and whatnot, it's very hard to play a rogue: all of
    // the cave orcs in the orc barracks head right to you!
    // fjm: I like this, but I'm going to knock Perception off of the
    // list. Perception effects are very rare, and monsters can't use
    // many of them anyway, so it has little impact on the actual game.
    On Event MSG_STATINAME "Nondet" / "ND"; 
    }

Wizard / Scroll Spell "Spectral Force" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 8; Level: 3; 
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_SPECTRAL; 
    rval: $"generic summons";
    Desc: "This spell creates an illusionary creature, force 
      or object, just as Phantasmal Force does, but the illusion
      has a greater depth and independance to it -- it does not wink
      out of existance when a single character sees through it,
      and any psychosomatic damage it inflicts lasts for (3d6 x 100)
      turns, as opposed to 3d6. More significantly, it is self-sustaining
      -- the caster does not need to concentrate to keep it active, and
      it can move outside the caster's line of sight."; 
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      };
    Flags: EF_DLONG;
    Lists:
      * SPELL_LIST $"magic missile" $"force bolt" $"burning hands"
                   $"ice dagger" $"sandblast" $"sunscorch"
                   $"scorcher" $"electric loop" $"fireball"
                   $"lightning bolt" $"thunderlance" $"ice storm"
                   $"force missiles" $"shout";
  }
  
Wizard Spell "Illusory Stance" : EA_INFLICT
  { SC_ILL; Base: SP_MEDIUM; IS_A_BUFF(COST_3); Level: 3;
    Desc: "Casting this spell causes the caster's body to become a
      confusing blur of afterimages, making it difficult for
      foes to perceive the real positioning of her arms and
      legs and the location of her melee attacks. She gains a
      +2 bonus to hit, and for every melee attack foes must
      make a successful opposed Spot test against her Illusioncraft
      skill or be treated as off-guard. \n
      __Possessing true sight negates these bonuses in regard
      to any true-seeing opponent, and they do not apply against
      mindless or blind opponents.";
    xval: TRAP_EVENT; yval: EV_STRIKE;
    On Event META(EV_STRIKE) {
      if (EVictim->HasStati(TRUE_SIGHT))
        return NOTHING;
      if (EVictim->HasMFlag(M_MINDLESS))
        return NOTHING;
      if (EVictim->HasMFlag(M_BLIND))
        return NOTHING;  
      if (e.AType == A_HURL || e.AType == A_FIRE ||
          e.AType == A_SPEL || is_postgrab_attk(e.AType))
        return NOTHING;
        
      e.vHit += 2;
      e.strHit += " +2 IS";
        
      if (EVictim->SkillCheck(SK_SPOT, 11 + 
            EActor->SkillLevel(SK_ILLUSION),true))
        return NOTHING;
      
      EMap->SetQueue(QUEUE_DAMAGE_MSG);
      TPrint(e,"Your afterimages confuse the <EVictim>!",
               "A bewildering miasma of images confuses you!",
               "The <EActor>'s afterimages confuse the <EVictim>!");
      EMap->UnsetQueue(QUEUE_DAMAGE_MSG);
      
      if (!EVictim->AbilityLevel(CA_UNCANNY_DODGE))
        e.isFlatFoot = true;
      
      /* ADD LATER:
        Finally, if this test
      is failed, foes cannot apply their parry bonus against her 
      attacks, even if they have the Expertise feat.
      */
      return NOTHING;
      };
  }
      
Wizard Spell "Animate Shadows" : EA_GENERIC
  {
    SC_ILL|SC_DARKNESS; Base: SP_MEDIUM; IS_A_BUFF(COST_3X); Level 3;
    Desc: "Casting this spell causes all of the shadows around the
      caster in a mobile globe with an 80-foot radius to begin to 
      pulse and writhe unnaturally. The effect is initially very 
      subtle, but increases as the victims of the spell become more
      and more agitated. Sometimes monstrous shapes can be seem
      within the area for a brief period of time, while at other
      times tendrils of shadow stroke at characters within the
      area almost lasciviously.\n
      __All hostile characters within the area of effect that are 
      not blind, mindless or gifted with true
      seeing must make a Will saving throw every turn or suffer a
      -1 morale penalty to all rolls. Multiple failed saving throws
      are culmulative; when the penalty exceeds -5, creatures enter
      a state of panic and flee. A <9>call light<1> spell or similarly
      bright, sustained radience will cancel the effect within its
      area, but a lantern is insufficient. Creatures immune to fear
      will not panic, but still suffer the morale penalty.\n
      __Any creatures in the area also suffer a -6 circumstance
      penalty to Spot checks.";
    aval: AR_MFIELD; rval: FI_CONTINUAL; lval: 8; cval: SHADOW;
    Flags: EF_CASTER_IMMUNE, EF_NOTBAD, EF_PERSISTANT;
    On Event EV_EFFECT {
      /* Store the save DC */
      EActor->RemoveEffStati($"Animate Shadows");
      EActor->GainPermStati(EFF_FLAG1,NULL,SS_MISC,0,e.saveDC,$"Animate Shadows");
      return NOTHING;
      },
    EV_MAGIC_HIT {
      if (GetHandle(EActor) == GetHandle(EVictim))
        return DONE;
      if (EVictim->isBlind() || EVictim->HasMFlag(M_MINDLESS))
        return DONE;
      if (EVictim->HasStati(TRUE_SIGHT))
        return DONE;
      if (!EVictim->isHostileTo(EActor))
        return DONE;
        
      if (!EVictim->HasEffStati(SKILL_BONUS,$"Animate Shadows;spot penalty"))
        RedirectEff(e,$"Animate Shadows;spot penalty",EV_MAGIC_HIT);
        
      e.saveDC = EActor->GetEffStatiMag(EFF_FLAG1,$"Animate Shadows");
      if (EVictim->SavingThrow(WILL,e.saveDC,SA_SPELLS|SA_MAGIC|SA_ILLUS))
        return DONE;
      if (EVictim->ResistLevel(AD_FEAR) == -1)
        return DONE;

      if (EVictim->GetEffStatiMag(ADJUST_MOR,$"Animate Shadows") <= -5 &&
            !EVictim->HasStati(AFRAID))
        {
          EVictim->IDPrint("You snap and panic!",
                           "The <hObj> snaps and panics!", EVictim);
          EVictim->GainTempStati(AFRAID,NULL,5d6,SS_MISC,FEAR_PANIC,0);
        }
      else {
        if (EVictim->HasEffStati(ADJUST_MOR,$"Animate Shadows")) {
          if (EVictim->GetEffStatiMag(ADJUST_MOR,$"Animate Shadows") <= -5) {
            EVictim->IPrint("The shadows ripple...");
            return DONE;
            }
          EVictim->IncEffStatiMag(ADJUST_MOR,$"Animate Shadows",SS_MISC,NULL,-1);
          }
        else
          EVictim->GainPermStati(ADJUST_MOR,NULL,SS_MISC,A_AID,-1,$"Animate Shadows");
        
        EVictim->IDPrint("The shadows ripple...",
                         "The <hObj> seems more paranoid.",EVictim);
        }
      return DONE;
      },
    EV_FIELDON
      "The shadows seem to ripple at the edges of your vision.",
    EV_FIELDOFF {
      EActor->IPrint("The shadows seem more stable now.");
      EActor->RemoveEffStati($"Animate Shadows;spot penalty");
      EActor->RemoveEffStati($"Animate Shadows");
      return NOTHING;
      };
  }

Effect "Animate Shadows;spot penalty" : EA_INFLICT
  { xval: SKILL_BONUS; yval: SK_SPOT; pval: -6; 
    Desc: "Creatures within the area of an <9>animate shadows<1> spell
      suffer a -6 penalty to Spot checks."; }       
  

Wizard Spell "Adamant Facade" : EA_INFLICT
  {
    SC_ILL; Level: 3; IS_A_BUFF(COST_3X);
    /* HACKFIX */ Purpose: EP_PLAYER_ONLY;
    xval: TRAP_EVENT; yval: POST(EVICTIM(EV_HIT));
    Desc: "This powerful spell wraps an illusion around the
      caster's body, causing her to appear to be in full
      health and unharmed by any attacks or maladies.
      Even should a sword stroke all but cripple her, it
      appears to onlookers as nothing more than a glancing
      blow.
      \n__This has the effect of causing sapient monsters to
      have a chance of retreating as if afraid after they or
      their allies strike the caster with no apparent effect.
      The chance of this happening is 1 in (10 - the caster's
      Charisma mod), and lowers by one for every attack from
      the same group of monsters after the first, until it
      reaches 1 in 1 and is certain. When it does occur, all
      members of the same group of monsters will flee at the
      same time. This is not magical fear, instead being a
      rational choice made in the face of a seemingly
      invincible foe. As such, it is unaffected by fear immunity
      and no saving throws apply.
      \n__Creatures with an Intelligence of 14 or higher have
      a chance of recognizing the guise for what it is and
      thus disbelieving it -- this chance is 5% per point of
      Intelligence above 14, rolled after every hit.
      \n__If this spell is cast at caster level 9 or higher,
      it conveys an additional benefit: when the caster is
      struck with a metal weapon, the weapon will seem to shatter
      upon hitting her, when in fact it merely falls from the
      attacker's hand and turns invisible to the attacker on
      the ground.";
    hObj hLeader, hAlly, hPlayer, hSword;
    On Event META(POST(EVICTIM(EV_HIT))) {
      int16 chance, x, y, count;
      hLeader = EActor->getLeaderOrFirst();
      /* Already Disbelieved the Facade? */
      if (hLeader->HasEffStati(EFF_FLAG1,$"Adamant Facade"))
        return NOTHING;
      if (1d100 <= (EActor->GetAttr(A_INT) - 14)*5)
        {
          EVictim->IPrint("The <hObj> disbelieves your adamant facade!",EActor);         
          EActor->IPrint("You realize that the <hObj>'s seeming
            invulnerability is merely an illusionary facade!",EVictim);
          EActor->GainTempStati(EFF_FLAG1,EVictim,-2,SS_MISC);
        }
      hLeader->IncEffStatiMag(EFF_FLAG2, $"Adamant Facade", SS_MISC, EVictim, +1);
      hLeader->SetEffStatiDur(EFF_FLAG2, $"Adamant Facade", -2);
      chance = 11 - EVictim->Mod(A_CHA);
      chance -= hLeader->GetEffStatiMag(EFF_FLAG2,$"Adamant Facade");
      if (1d(max(1,chance)) > 1)
        return NOTHING;
      hPlayer = NULL_OBJ;
      count = 0;
      for (x=hLeader->x-10;x <= hLeader->x+10;x++)
        for (y=hLeader->y-10;y <= hLeader->y+10;y++)
          if (EMap->InBounds(x,y))
            for(hAlly=EMap->FCreatureAt(x,y);hAlly;
                  hAlly=EMap->NCreatureAt(x,y))
              if (hAlly->isFriendlyTo(hLeader) && hAlly->Perceives(EVictim))
              {
                count++;
                SetSilence();
                hAlly->GainTempStati(AFRAID,NULL,-2,SS_MISC,
                          FEAR_SKIRMISH);
                if (hAlly->isPlayer())
                  hPlayer = hAlly;
                UnsetSilence();
              }
      VPrint(e,count > 1 ? "The <EActor> and <his:EActor> allies flee
        from your seeming invincibility!" : "The <EActor> flees from
        your seeming invincibility!", ""); 
      if (hPlayer != NULL_OBJ)
        hPlayer->IPrint("You feel certain that the <hObj> is utterly immune
                           to your attacks!", EVictim); 
      if (EVictim->CasterLev() >= 7)
        if (e.AType == A_SWNG || e.AType == A_GREA ||
            e.AType == A_DISA || e.AType == A_TRIP)
          if ((hSword = EActor->InSlot(SL_WEAPON)) && (EVictim->x != -1))
            {
              hSword->Remove(false);
              /* Invisibility for objects == problematic now.
              hSword->GainTempStati(INVIS,EActor,3d6,SS_MISC,INV_NORMAL,0,$"Adamant Facade",
                                      EVictim->CasterLev()); */
              hSword->PlaceAt(EMap, EVictim->x, EVictim->y);            
              EActor->IPrint("As you strike the <hObj>, your <hObj>
                                shatters!", EVictim, hSword);
              EVictim->IPrint("The <hObj1> drops <his:hObj1> <hObj2> at your feet,
                                believing it destroyed.", EActor, hSword);
            }
      return NOTHING;
      };
  }


  
/* --NECROMANCY 3-- */

 Wizard / Scroll Spell "Major Drain" : EA_BLAST
  { SC_NEC; Base: SP_EASY; Cost: 6; Level: 3; xval: AD_NECR; 
    Purpose: EP_ATTACK | EP_FIX_TROUBLE (TROUBLE_INJURY); cval: WHITE;
    pval: (LEVEL_SCALED)d4; sval: NOSAVE; 
    qval: Q_DIR|Q_TAR|Q_LOC; aval: AR_BOLT; 
    Desc: "With this spell, the wizard drains the life and vital force from
      a target and adds it to his own. The target creature suffers 1d4
      vampiric damage per caster level. If this spell kills a target and the
      caster is a specialist necromancer, she can gain potencies and resistances 
      as if he had devoured the corpse."; 
    On Event EV_MAGIC_HIT {
      EActor->cHP = min(EActor->mHP+EActor->GetAttr(A_THP),EActor->cHP + e.vDmg); 
      return NOTHING; 
    }; 
    On Event POST(EV_MAGIC_HIT) {
      if (ETarget->isDead() || e.Died) 
        if (GetHandle(EActor) && !EActor->isDead() && EActor->isCreature()
              && ETarget->isMonster())
          if ( EActor->GetStatiVal(SPECIALTY_SCHOOL) == 6 )
            EActor->DevourMonster(EVictim); 
    }; 
  } 

Wizard / Scroll Spell "Vampiric Touch" : EA_DRAIN
  { SC_NEC; Base: SP_TRIVIAL; Cost: 5; Level: 3; sval: FORT partial;
    aval: AR_TOUCH; lval: LEVEL_MIN3;
    xval: AD_VAMP; pval: (LEVEL_EVERY2)d6; cval: RED;
    tval: MA_LIVING; 
    Flags: EF_LIM_MTYPE, EF_DLONG, EF_NOTBAD, EF_CANCEL, EF_SHOWNAME; 
    Purpose: EP_ATTACK;
    Desc: "Causes your touch attack to inflict 1d6 points of necromantic
      damage per odd caster level to living creatures; you also heal 
      damage taken up to the damage this spell actually inflicts. One 
      casting of this spell gives you a number of touches equal to your 
      caster level.";
    On Event MSG_CAST
      "Your hands glow with a throbbing red aura." /
      "The <EActor>'s hands glow with a throbbing red aura.";
  }

Wizard / Scroll Spell "Spirit Armour" : EA_INFLICT
  { SC_NEC; IS_A_BUFF(COST_3X); Level: 3; 
    Flags: EF_NO_BONUS_DMG, EF_HARMOUR;
    xval: ADJUST; yval: A_ARM; pval: 9d1 + (LEVEL_1PER3); 
    On Event EV_EFFECT {
      ThrowDmg(EV_DAMAGE,AD_NORM,3d6,"casting spirit armour",EActor,EActor);
      if (EActor->Flags & F_DELETE)
        return DONE;
      return NOTHING;
      },
    MSG_CAST
      "A shimmering azure aura appears around you." /
      "A shimmering azure aura appears around the <EActor>.",
    PRE(EV_EFFECT) {
      if (EActor->InSlot(SL_ARMOUR) != NULL_OBJ)
        {
          EActor->IPrint("You cannot combine <9>spirit armour<7> with
            conventional armour.");
          return ABORT;
        }
      return NOTHING;
      },
    META(POST(EV_WIELD)) {
      if (EActor->InSlot(SL_ARMOUR) != NULL_OBJ)
        {
          EActor->IPrint("Your <9>spirit armour<7> is cancelled.");
          EActor->RemoveEffStati($"spirit armour");
        }
      return NOTHING;
      };
    Desc: "Forges a protective shield out of your own life essence, giving
      you defenses similar to plate armour (9 + 1/3 caster levels armour rating) 
      but costing you 3d6 of your own hit points. Spirit Armour counts as hwavy
      armour for the purposes of abilities like Defensive Roll, and is not
      compatable with mundane physical armour.";
  }
and EA_INFLICT
  { xval: TRAP_EVENT; yval: POST(EV_WIELD); }
  

Wizard  Spell "Blackmantle" : EA_INFLICT
  { SC_NEC; Base: SP_HARD; Cost: 5; Level: 3; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EVICTIM(PRE(EV_MAGIC_HIT));
    Purpose: EP_CURSE; 
    Flags: EF_DEATH, EF_SHOWNAME;
    On Event EV_MAGIC_HIT
      "A black aura surronds you." /
      "A black aura surronds the <EVictim>.",
    META(EVICTIM(PRE(EV_MAGIC_HIT))) {
      if (e.eval == EA_HEALING && EActor != NULL)
        if (((int32)e.xval) & HEAL_HP)
          {
            EActor->IPrint("Nothing happens.");
            return DONE;
          }
	  return NOTHING;
      };
    Desc: "Brings into existance around the target a black aura
      that prevents supernatural healing of any sort (but does not
      prevent regeneration).";
  }
  /* ww: this doesn't work: it wraps around and you end up with a free
   * 5 hp/round regen: 
and EA_INFLICT
  { xval: EXTRA_ABILITY; yval: CA_REGEN; pval: -250; } */

Wizard / Scroll Spell "Animate Dead" : EA_GENERIC
  { SC_NEC; Base: SP_VERY_HARD; Cost: 6; Level: 3; tval: T_CORPSE; cval: RED;
    Flags: EF_LIM_ITYPE, EF_AFFECTS_ITEMS, EF_ITEMS_ONLY, EF_LOSEMANA; 
    aval: AR_GLOBE; lval: 6; Purpose: EP_SUMMON (VS_ANIMATE_DEAD);
    int16 ch, first; 
    On Event EV_EFFECT {      
      ch = EActor->ChoicePrompt("Skeletons or Zombies?", "sz");
      first = 1;
      },      
    EV_MAGIC_HIT {
      rID cmID; hObj zom;
      ANIMATION_HEADER
      if (!ETarget->isType(T_CORPSE))
        return DONE;
      cmID = ETarget->GetCorpseType();
      if (!cmID)
        return DONE;
      /*
      if (!cmID->HasFlag(M_HUMANOID) || cmID->Siz > SZ_MEDIUM)
        {
          EActor->IPrint("Nothing happens.");
          return DONE;
        }
      */
      if (ResourceLevel(cmID) > max(1,e.vCasterLev/2))
        {
          APrint(e,"The <hObj> shifts briefly, but does not move.",ETarget);
          return DONE;
        }
      zom = CreateMonster(cmID);
      if (!zom)
        return ABORT;
      
      if (ch == 's')
        zom->AddTemplate($"skeleton");
      else
        zom->AddTemplate($"zombie");

      if (ETarget->Owner() == EActor)
        zom->PlaceAt(EMap,EActor->x,EActor->y);
      else
        zom->PlaceAt(EMap,ETarget->x,ETarget->y);
	    zom->Initialize();
      zom->PartyID = EActor->PartyID;

	    if (EActor->isPlayer()) {
	      SetSilence();
		    if (!zom->MakeCompanion(EActor,PHD_UNDEAD)) {
		      UnsetSilence();
		      APrint(e,"The <hObj> shifts briefly, but does not move.",ETarget);
            zom->Remove(true);
		      return DONE;
		      }
		    UnsetSilence();
		    }
      
      ETarget->Remove(true);
      if (first) {
        first = 0;
        APrint(e,"The dead rise!");
        e.isSomething = true;
        }
        
      ANIMATION_MORALITY(ETarget,zom)
        
      return DONE;
      };
    Desc: "Casting this spell causes humanoid corpses within 60 feet of the
      caster to animate, permanently taking on unlife as either skeletons
      or zombies (at the caster's elective), enslaved to her.\n
      __There are two metaphysical powers that can be invoked on Theyra to
      animate the dead. The first is various archfiends, notably Orcus --
      the demon lord of undead. The second is the goddess of death, Mara.
      As such, casting this spell is an evil act (as a result of allying
      with fiends) unless the caster is devoted to Mara or has earned at
      least two blessings from her as a lay worshipper.";
  }  

Wizard Spell "Skull Trap" : EA_GENERIC
  {
    SC_NEC; Base: SP_HARD; Level: 3; Cost: 9; qval: Q_LOC;
    Desc: "Casting this spell enchants a mundane skull, turning it into a
      malignant magical trap. The skull remains dormant until such a time
      as any living creature steps near it, at which point is rises up from
      the ground and spins around, jaw-bone clacking up and down as it
      emits a piercing howl inflicting 2d6 points of sonic damage and
      awakening all creatures within 60 squares. All creatures that witness
      this spectacle must make a Will saving throw or become afraid.
      Then, malignant red light begins to pour from the skull's eyes, and 
      after several seconds it explodes, inflicting 1d6 points of fire damage 
      per even caster level and 1d6 points of necromantic damage per odd 
      caster level, to the creature that awoke it. A Reflex saving throw 
      negates this damage.";
    On Event EV_MAGIC_HIT {
      hObj hSkull;
      hSkull = CreateTrap($"trap", $"skull trap;trap");
      if (EActor->isPlayer())
        hSkull->TrapFlags |= TS_FOUND;
      hSkull->SetImage();
      hSkull->PlaceAt(EMap,e.EXVal,e.EYVal);
      hSkull->GainPermStati(EFF_FLAG1,EActor,SS_MISC,0,0,$"Skull Trap");
      return DONE;
      };
  }

AI_TRAP Effect "skull trap;trap" : EA_BLAST
  {
    Desc: "A grinning human skull lies on the ground here.";
    Flags: EF_NOGEN, EF_EVIL; SC_NEC;
    On Event PRE(EV_EFFECT) {
      hObj hCaster;
      
      hCaster = EItem->GetEffStatiObj(EFF_FLAG1,$"Skull Trap");
      if (hCaster) {
        SetEActor(e,hCaster);
        /* Caster Lev determines damage, etc. */
        e.isTrap = false;
        }
      EActor->MakeNoise(60);
      return NOTHING;
      },
    POST(EV_EFFECT) {
      EItem->Remove(true);
      return NOTHING;
      },
    EV_MAGIC_HIT {
      if (e.efNum == 2)
        APrint(e,"The skull explodes!");
      return NOTHING;
      },
    MSG_CAST 
      "The skull rises from the ground, spins... and <12>*screams*<7>!";
    aval: AR_GLOBE; lval: 6; cval: RED; xval: AD_SONI; pval: 2d6;
  }
and EA_INFLICT
  { xval: AFRAID; yval: FEAR_MAGIC; sval: WILL; }
and EA_BLAST
  { xval: AD_FIRE; pval: (LEVEL_1PER2)d6; sval: REF; }
and EA_BLAST
  { xval: AD_NECR; pval: (LEVEL_EVERY2)d6; sval: REF; }
      
/* --THAUMATURGY 3-- */

Priest / Druid / Wizard / Scroll Spell "Water Walking" : EA_INFLICT
  { SC_THA|SC_WATER; IS_A_BUFF(COST_3); Level: 3; sval: NOSAVE;
    Purpose: EP_BUFF | EP_PASSAGE; qval: Q_TAR;
    xval: WATER_WALKING; 
    Desc: "Causes one target creature to be able to walk on 
      water. That creature will suffer no ill effects from crossing
      deep water and need not make swimming checks."; 
    On Event MSG_STATINAME "WtrWlk" / "WW"; 
  }

Wizard / Scroll Spell "Haste" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_3X); Level: 3; qval: Q_TAR;
    xval: ADJUST; yval: A_SPD; pval: +10; 
    Desc: "IMultiplies one chosen target's attack speed and movement by 
      150%, and grants that same target a +4 circumstance bonus to 
      Defense. Alternatively, negates slow.";
    On Event EV_MAGIC_HIT {
      if (EVictim->HasEffStati(-1,$"slow"))
        {
          EVictim->RemoveEffStati($"slow");
          e.efNum = 2;
          return DONE;
        }
      if (e.efNum == 0)
        VPrint(e,"You feel yourself speed up.",
                 "The <EVictim> seems to be moving faster.");
      },
    EV_REMOVED
      "You feel yourself slow down again." /
      "The <EVictim> slows back down.";
  }
and EA_INFLICT
  { xval: ADJUST; yval: A_MOV; pval: +10; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_DEF; pval: +4; }

Wizard / Sorcerer  Spell "Slow" : EA_INFLICT
  { SC_THA; Base: SP_EASY; Cost: 7; Level: 3; qval: Q_LOC; sval: WILL; 
    aval: AR_GLOBE; lval: 3; xval: ADJUST; yval: A_SPD; pval: -10;
    cval: GREEN; Purpose: EP_CURSE | EP_FOIL_PURSUIT;
    Desc: "Slows the motion of all creatures in a 30 foot (3 square)
      radius globe at the time the spell is cast, causing them to
      suffer a -50% attack speed and movement rate, and a -2 circumstance
      penalty to defense. Alternatively, cancels haste.";
    On Event EV_MAGIC_HIT {
      if (EVictim->HasEffStati(-1,$"haste"))
        {
          EVictim->RemoveEffStati($"haste");
          e.efNum = 2;
          return DONE;
        }
      if (EVictim->HasEffStati(-1,$"alacrity"))
        {
          EVictim->RemoveEffStati($"alacrity");
          e.efNum = 2;
          return DONE;
        }
      if (e.efNum == 0)
        VPrint(e,"You feel yourself slow down.",
                 "The <EVictim> seems to be moving slower.");
      },
    EV_REMOVED
      "You feel yourself speed up again." /
      "The <EVictim> is moving normally again.";
  }
and EA_INFLICT
  { xval: ADJUST; yval: A_MOV; pval: -10; aval: AR_GLOBE; sval: WILL; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_DEF; pval: -2; aval: AR_GLOBE; sval: WILL; }

Wizard / Scroll Spell "Polymorph Self" : EA_POLYMORPH
  { SC_THA; Base: SP_HARD; Cost: 10; Level: 3; 
    Flags: EF_LOSEMANA, EF_DLONG, EF_CANCEL; Purpose: EP_BUFF; 
    Desc: "Changes you into a random monster of your own challenge
      rating or lower, at the cost of 2 fatigue points."; 
    On Event PRE(EV_EFFECT) {
      if (EActor->HasStati(POLYMORPH))
        {
          EActor->IPrint("The interaction of multiple polymorph
            effects tears at your metabolism!");
          ThrowDmg(EV_DAMAGE,AD_MAGC,3d6,"polystrain",EActor,EActor);
        }
      if (EActor->isDead())
        return DONE;
      EActor->LoseFatigue(2,false);
      return NOTHING;
      };
  }

Wizard / Scroll Spell "Fly" : EA_INFLICT
  { SC_THA; IS_A_BUFF(COST_3X); Level: 3; 
    xval: LEVITATION; yval: 1; Purpose: EP_BUFF | EP_PASSAGE; 
    Desc: "Grants advantages similar to levitation, but without the
      penalties and grants an additional +2 circumstance bonus to
      attack rolls and defense class. You cannot fly while mounted,
      and the spell affects only humanoid casters. When flying, you
      need to make a Balance check to cast spells with somatic 
      components and potentially suffer knockback when you are 
      struck in combat."; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_HIT; pval: +2; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_DEF; pval: +2; }
and EA_INFLICT
  { xval: TRAP_EVENT; yval: PRE(EV_MOUNT);
    On Event PRE(EV_MAGIC_HIT) {
      if (EVictim->HasStati(MOUNTED))
        ThrowVal(EV_DISMOUNT,DSM_CHOICE,EVictim,
          EVictim->GetStatiObj(MOUNTED));
      if (EVictim->HasStati(MOUNTED))
        return ABORT;
      if (!EVictim->HasMFlag(M_HUMANOID))
        return ABORT;
      return NOTHING;
      },
    META(PRE(EV_MOUNT)) {
      EActor->IPrint("First, you cancel your <9>fly<7> spell.");
      EActor->RemoveEffStati($"Fly");
      return NOTHING;
      };
  }

Wizard / Scroll Spell "Gaseous Form" : EA_NOTIMP
  { SC_THA|SC_AIR; Base: SP_EASY; Cost: 1; Level: 3; Flags: EF_CANCEL;
    Desc: "Transforms the caster into an animate cloud of grey vapours.
      In this state the caster cannot cast spells, but it also immune
      to most forms of physical attack. The gaseous form moves very
      slowly at 30~ of normal human speed."; }


/* --WEAVECRAFT 3-- */

Wizard / Scroll Spell "Blink" : EA_INFLICT
  { SC_WEA; IS_A_BUFF(COST_3X); Level: 3; 
    xval: MISS_CHANCE; yval: MISS_FULL; pval: 50; 
    Desc: "Causes the caster to flicker in and out of the ethereal
      plane, giving attacks against him a 50~ miss chance. Creatures
      that can see invisible or are using a ghost touch weapon ssuffer only a 
	  25~ miss chance, and creatures who can do both do not suffer 
	  any miss chance at all.";
    On Event EV_MAGIC_HIT
      "Your body begins to flicker in and out of sight..." /
      "The <EVictim>'s body begins to flicker in and out of sight...",
    EV_REMOVED
      "You stop flickering." /
      "The <EVictim> stops flickering."; }

Wizard / Scroll Spell "Monster Summoning III" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 6; Level: 3; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"summoned monster"; pval: 3; 
    Desc: "Summons a living creature of CR 3 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(3) }

Wizard / Potion Spell "Dimension Door" : EA_TRAVEL
  { SC_WEA; Base: SP_EASY; Cost: 6; Level: 3; pval: 2d20+LEVEL_1PER1; 
    Purpose: EP_ESCAPE; xval: TRAVEL_ANYWHERE; 
    Flags: EF_STAPLE, EF_DEFENSIVE, EF_STAPLE;
    Desc: "Casting this spell teleports you randomly 2d20+(caster level) squares away."; }
  
Wizard / Scroll Spell "Rope Trick" : EA_GENERIC
  { SC_WEA; Base: SP_MEDIUM; Cost: 15; Level: 3;
    Purpose: EP_PLAYER_ONLY; Flags: EF_STAPLE;
    On Event EV_MAGIC_HIT {
      hObj hPortal;
      hPortal = CreatePortal($"dangling rope");
      hPortal->PlaceAt(EMap,EActor->x,EActor->y);
      return DONE;
      },
    PRE(EV_EFFECT) {
      if (EMap->RegionAt(EActor->x,EActor->y) ==
           $"Extradimensional Space;rope trick")
        {
          EActor->IPrint("Don't cross the streams!");
          return ABORT;
        }
      if (!EActor->ConsumeRope(15))
        return ABORT;
      };
    Desc: "Casting this spell enchants a rope, causing it to
      rise up and seem to hang down from empty air; when the 
      caster climbs the rope, she vanishes. In truth, the rope 
      leads to a tiny extradimensional space -- a kind of safe 
      sanctuary where the caster can rest and recuperate. 
      Casting this spell thus consumes 15 feet of rope.\n
      __The caster is safe to rest for as long as desired in
      the pocket space created by the spell, but as soon as
      she leaves the portal and re-enters the real world, the
      effect ends and the rope is drawn back up into the space.
      However, the tiny pocket dimension serves as only a weak
      bulkhead against the entropy and dissolution of the astral
      plane, and those who rest there often find that the mental
      plane's nearness saps away some of their recent learning
      and will -- in game terms, costing 150 XP.\n
      __Since the tiny pocket world is created anew with every 
      casting of the spell, any items the caster has left on
      the floor in the extradimensional space will be cast
      out into the depths of the astral plane when the caster
      herself leaves, thus being lost forever.\n
      __Taking other extradimensional spaces, such as a bag of
      holding or a Howard's Handy Haversack, into the space
      created by a rope trick causes a disasterous magical
      explosion with unpredictable effects.";
  }
  
Region "Extradimensional Space;rope trick" : RF_ROOM
  { Walls: $"Dungeon Wall"; Floor: $"Floor"; 
    Grid: {:
      ###################
      ######.......######
      ####...........####
      ###.............###
      ##...............##
      ##...............##
      #.................#
      #........>........#
      #.................#
      ##...............##
      ##...............##
      ###.............###
      ####...........####
      ######.......######
      ###################
      :};
    Flags: RF_NOGEN;
    Tiles:
      '>': $"floor" with $"portal;rope trick" [TILE_START];
    On Event POST(EV_REST) {
      EActor->IPrint("Resting so close to the magical radiations of
        the astral plane saps away some of your sense of identity
        and recent learning.");
      EActor->LoseXP(150);
      return NOTHING;
      };
  }

Feature "dangling rope" : T_PORTAL
  {
    Image: bright green GLYPH_USTAIRS;
    Mat:MAT_CLOTH;
    xval:POR_DUN_ENTRY;
    Target: $"Extradimensional Space;rope trick";
  }

Feature "portal;rope trick" : T_PORTAL
  {
    Image: bright green GLYPH_DSTAIRS;
    Mat:MAT_EMPTYNESS;
    xval:POR_RETURN;
    Target: $"dangling rope";
    On Event PRE(EV_ENTER) {
      hObj hDropped;
      for (hDropped = EMap->FirstThing(); 
             hDropped; hDropped = EMap->NextThing())
        if (!hDropped->isPlayer())
          if ((!hDropped->isFeature()) ||
               hDropped->fID != $"portal;rope trick")
            hDropped->Remove(true);
      return NOTHING;
      },
    POST(EV_ENTER) {
      hObj hRope;
      for (hRope = EMap->FFeatureAt(EActor->x,EActor->y);hRope;
             hRope = EMap->NFeatureAt(EActor->x,EActor->y))
        if (hRope->fID == $"dangling rope")
          hRope->Remove(true);
      return NOTHING;
      };
  }


Wizard Spell "Conjure Vortex" : EA_SUMMON
  { SC_WEA; Base: SP_HARD; Cost: 15; Level: 3; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"conjured vortex"; pval: 5;
    Flags: EF_DLONG, EF_XSUMMON; 
    Desc: "Casting this spell opens a conduit to the turbulent para-elemental
      or quasi-elemental planes, calling forth a vortex with a Challenge Rating
      of up to five. The creature lasts longer than one summoned with Monster
      Summoning III, and is typically more powerful, but opening the conduit is
      draining for the caster, costing her two Fatigue points. The caster also
      needs to succeed on a Knowledge (Planes) check against DC 10 to open the
      conduit, or the effect is wasted and the caster suffers 2d6 points of
      damage from trauma.";
    On Event EV_EFFECT {
      if (!EActor->LoseFatigue(2,true))
        return ABORT;
      if (!EActor->SkillCheck(SK_KNOW_PLANES,10,true))
        {
          EActor->IPrint("You fail to open the <hText>elemental conduit properly!",
                          1d2 == 1 ? "quasi" : "para");
          ThrowDmg(EV_DAMAGE,AD_FIRE+random(9),2d6, "a warped conduit",
            EActor, EActor);
          return DONE;
        }
      return NOTHING;
      };
  }

Priest / Scroll / Wizard Spell "Greater Magic Weapon" : EA_GENERIC
  { SC_WEA; IS_A_BUFF(COST_3); Level: 3; qval: Q_INV; 
    Desc: "Casting this spell temporarily enchants a single weapon (or
      a stack of ammunition) with a magical bonus of +1 per three caster
      levels, to a maximum of +5 at 15th. This bonus does 
      not stack with any other magical bonus the weapon may have. 
      Magical weapons strike true against undead, outsiders and many 
      other fiends."; 
    hObj it;
    On Event 
      EV_ISTARGET {
        if (ETarget->isType(T_WEAPON))
          if (ETarget->GetQuantity() == 1)
            return CAN_CAST_IT;
        if (ETarget->isType(T_MISSILE))
          return CAN_CAST_IT;
        if (ETarget->isMonster())
          if (ETarget->InSlot(SL_WEAPON) != NULL_OBJ)
            if (ETarget->InSlot(SL_WEAPON)->GetPlus() < 
                 max(1,min(5,EActor->CasterLev() / 3)))
              return SHOULD_CAST_IT;
        return CANNOT_CAST_IT; 
        },
      EV_RATETARG {
        if (EItem->isType(T_WEAPON))
          return NOTHING;
        return ABORT;
        },
      PRE(EV_EFFECT) {
        if (ETarget->isMonster())
          SetETarget(e,ETarget->InSlot(SL_WEAPON));
        return NOTHING;
        },
      EV_MAGIC_STRIKE {
        ETarget->GainTempStati(BOOST_PLUS,EActor,e.vDuration,SS_ENCH,1,
          max(1,min(5,e.vCasterLev / 3)), $"greater magic weapon", e.vCasterLev);
        VPrint(e,"","The <EVictim> gives off a soft silvery glow.");
        return DONE;
      }; 
    Constants:
      * SERVICE_SPELL_COST 150;
  }

/* ============================================================= 
 *                   Level Four ARCANE Spells
 * =============================================================
 * Abj: Prot. from X, Wandwierd, Dismissal, Endure the Elements, (Fire Trap)
 * Arc: Rock to Mud, Tremor, Solid Fog, Wall of Fire (Alchemy, Vanish, Copy)
 * Div: Trace Creature, Know Defense, (Detect Magic, Identify True, Arcane Eye)
 * Enc: Charm Monster, Confusion, (Bestow Curse? Preserve Item)
 * Evo: Shout, Wall of Fire, Wall of Ice, Ice Storm
 * Ill: Phantasmal Killer, Improved Invis.
 * Nec: Contagion, Enervation, Revenance, (Corpse Visage)
 * Tha: Polymorph Other, Stoneskin, Burning Blood, Force Shapechange
 * Wea: Summon Monster IV, (Phase Trap, Recharging I, etc.)
 * =============================================================

PRESENTLY UNIMPLEMENTED:

Vanish, Weavecraft
    Desc: "Causes a single targeted item to disappear into a specially-
      created pocket dimension tethered to the caster. In this space,
      the item is impervious to harm. The item can be retrieved instantly
      (and will be wielded as appropriate without timecost) using the
      Cancel ('x') command. You can have a maximum number of Vanished
      items equal to your caster level for this spell.";

 */



/* --ABJURATION 4-- */

Wizard / Priest / Druid  Spell "Protection from Fire" : EA_INFLICT
  { SC_ABJ|SC_FIRE; IS_A_BUFF(35); qval: Q_TAR; Level: 4; 
    xval: RESIST; yval: AD_FIRE; pval: 10d1 + (LEVEL_1PER1); 
    Desc: "Grants the target fire resistance equal to 10 plus
      her caster level."; }

Wizard / Priest / Druid  Spell "Protection from Cold" : EA_INFLICT
  { SC_ABJ|SC_COLD; IS_A_BUFF(35); qval: Q_TAR; Level: 4; 
    xval: RESIST; yval: AD_COLD; pval: 10d1 + (LEVEL_1PER1); 
    Desc: "Grants the target cold resistance equal to 10 plus
      her caster level."; } 

Wizard / Priest / Druid  Spell "Protection from Lightning" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(35); qval: Q_TAR; Level: 4; 
    xval: RESIST; yval: AD_ELEC; pval: 10d1 + (LEVEL_1PER1); 
    Desc: "Grants the target lightning resistance equal to 10 plus
      her caster level."; } 


Wizard / Priest / Druid  Spell "Protection from Acid" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(35); qval: Q_TAR; Level: 4; 
    xval: RESIST; yval: AD_ACID; pval: 10d1 + (LEVEL_1PER1); 
    Desc: "Grants the target acid resistance equal to 10 plus
      her caster level."; }

Wizard / Priest / Druid  Spell "Protection from Sound" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(35); qval: Q_TAR; Level: 4; 
    xval: RESIST; yval: AD_SONI; pval: 10d1 + (LEVEL_1PER1); 
    Desc: "Grants the target acid resistance equal to 10 plus
      her caster level."; }

Wizard / Druid Spell "Endure the Elements" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(10); Level: 4; qval: Q_TAR;
    xval: RESIST; yval: AD_SONI; pval: 3d1 + (LEVEL_1PER2); 
    On Event MSG_STATINAME "EndureElem" / "EE"; 
    Desc: "Grants the target resistance equal to 3 plus
      1 per 2 caster levels against Fire, Cold, Lightning, Acid and Sound."; }
  and EA_INFLICT { xval: RESIST; yval: AD_FIRE; 
                   flags: EF_DLONG; pval: 3d1+(LEVEL_1PER2); }
  and EA_INFLICT { xval: RESIST; yval: AD_COLD; 
                   flags: EF_DLONG; pval: 3d1+(LEVEL_1PER2); }
  and EA_INFLICT { xval: RESIST; yval: AD_ELEC; 
                   flags: EF_DLONG; pval: 3d1+(LEVEL_1PER2); }
  and EA_INFLICT { xval: RESIST; yval: AD_ACID; 
                   flags: EF_DLONG; pval: 3d1+(LEVEL_1PER2); }

Wizard Spell "Wandwierd" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_4); Level: 4; aval: AR_MFIELD;
    cval: MAGENTA; lval: 9; rval: FI_MODIFIER;
    xval: TRAP_EVENT; yval: PRE(EV_ZAP); Flags: EF_CASTER_IMMUNE;
    On Event META(PRE(EV_ZAP)) {
      DPrint(e,"Nothing happens.",
               "The <EActor> zaps an <EItem>, but nothing happens.");
      return DONE;
      };
      // ww: 60 is not sufficient! those guys stand way the heck away
      // and nuke you!
    Desc: "Creates a zone 90 feet (9 squares) in radius that moves with the
      caster in which nobody other than the caster can use wands.";
  }

Wizard / Priest / Scroll Spell "Dismissal" : EA_TRAVEL
  { SC_ABJ; SC_WEA; Base: SP_HARD; Cost: 8; Level: 4; pval: 4d12+LEVEL_2PER1; 
    Purpose: EP_ESCAPE | EP_CURSE | AIM_AT_ENEMY; 
	  xval: TRAVEL_ANYWHERE; sval: WILL; qval: Q_TAR;
	  Flags: EF_CASTER_IMMUNE, EF_HARDSAVE4;
    Desc: "Teleports an enemy who fails a Will save 4d12+(caster level x 2) 
      squares away. The save DC of Dismissal gains a +4 spell bonus."; }

#if 0
Wizard Spell "Fire Trap" : EA_INFLICT
  { SC_ABJ; Base 70; Cost 30; Level: 4; pval: (LEVEL_1PER1)d6;
    Purpose: EP_PLAYER_ONLY;
    Desc: "Enchants a single chest for 1 day per three levels, such that
      any creature other than the caster attempting to remove an item
      from it is struck by a burst of flame inflicting 1d6 points of fire
      damage per caster level."; }
#endif

Wizard Spell "Aura of Abjuration" : EA_INFLICT
  { SC_ABJ; SC_WEA; IS_A_BUFF(COST_4X); Level: 4; Purpose: EP_BUFF;
    Desc: "This spell evokes an invisible aura around the caster's body
      that casts away anyone who tries to contact her physically, whether
      with an unarmed attack or a melee weapon -- thrown or fired weapons
      do not trigger the effect. For every such attack, the victim must
      make a Will saving throw or be teleported away from the caster as
      per the spell <9>phase door<1>. A single successful save renders
      that given creature immune to the spell for the remainder of the
      day, but does not break the spell with regard to other creatures.";
    xval: TRAP_EVENT; yval: EVICTIM(PRE(EV_STRIKE)); sval: WILL + 10;
    On Event POST(EV_MAGIC_HIT) {
      /* Store the Save DC */
      EVictim->GainTempStati(EFF_FLAG2,NULL,e.vDuration,
        SS_ENCH,e.MM,e.saveDC,$"Aura of Abjuration", e.vCasterLev);
      return NOTHING;
      },
    META(EVICTIM(PRE(EV_STRIKE))) {
      int16 svDC;
      if (e.AType == A_SPEL || 
          e.AType == A_HURL || 
          e.AType == A_FIRE)
        return NOTHING;
      if (EActor->HasEffStati(EFF_FLAG1,$"Aura of Abjuration"))
        return NOTHING;
      if (EActor->GetAttr(A_MR) > 1d100)
        return NOTHING;
      svDC = EVictim->GetEffStatiMag(EFF_FLAG2,$"Aura of Abjuration");
      if (EActor->SavingThrow(WILL,svDC,SA_MAGIC|SA_SPELLS))
        {
          VPrint(e,"The <EActor> breaks your <9>Aura of Abjuration<7>!",
                   "You overcome a nearly tangible resistance to strike 
                     the <EVictim>!");
          EActor->GainTempStati(EFF_FLAG1,EVictim,-2,SS_MISC,0,0,
            $"Aura of Abjuration");
          return NOTHING;
        }
      if (!(EActor->HasStati(ANCHORED) || EVictim->HasStati(ANCHORED)))
        VPrint(e,"As <he:EActor> moves to strike you, the <EActor> is cast back!", 
                 "You are cast away from the <EVictim>!");
      ThrowEff(EV_MAGIC_STRIKE,$"phase door",EVictim,EActor);
      return ABORT;
      };
  }

/* --ARCANA 4-- */

Wizard / Druid / Scroll Spell "Solid Fog" : EA_TERRAFORM
  { SC_ARC|SC_AIR|SC_WATER; Base: SP_EASY; Cost: 8; Level: 4; qval: Q_LOC; sval: NOSAVE;
    Purpose: EP_CURSE | EP_FOIL_PURSUIT | AIM_AT_ENEMY; /* Flags: EF_DLONG;  */
    xval: TERRA_OPEN; rval: $"solid fog bank"; aval: AR_GLOBE; lval: 4;
    Desc: "Creates a bank of solid fog. Solid fog reduces movement to 15~
    of normal and deflects all physical missiles.";
    On Event MSG_CAST
      "A bank of solid fog appears!",
    EV_ELAPSED
      "The bank of solid fog fades away."; }

Wizard / Druid / Scroll Spell "Transmute Rock to Mud" : EA_TERRAFORM
  { SC_ARC|SC_EARTH; Base: SP_EASY; Cost: 8; Level: 4; aval: AR_GLOBE; lval: 3;
    xval: TERRA_ROCK; rval: $"shallow mud"; Purpose: EP_PASSAGE | AIM_AT_SELF; 
    qval: Q_LOC; Flags: EF_PERMANANT;
    Desc: "Turns all walls within a 30 foot (3 square) radius of the
      targeted square into mud."; 
    On Event EV_MAGIC_HIT
      "The rock collapses into thick mud!"; }

Wizard Spell "Tremor" : EA_DRAIN
  { SC_ARC|SC_EARTH; Base: SP_EASY; Cost: 8; Level: 4; 
    aval: AR_GLOBE; lval: 6; qval: Q_LOC;
    xval: AD_TRIP; sval: REF + 10; cval: BROWN;
    Purpose: EP_CURSE;
    On Event EV_ISTARGET {
      if (!ETarget->isCreature())
        return CANNOT_CAST_IT;
      if (ETarget->isAerial())
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT; },
    EV_EFFECT
      "The floor shakes violently!",
    EV_MAGIC_HIT 
      "The <EVictim> falls down." /
      "You fall down!" /
      "The <EVictim> falls down.",
    PRE(EV_MAGIC_HIT) {
      /* If you didn't get knocked down, don't do the damage. */
      if ((e.efNum == 1) && !EVictim->HasStati(PRONE))
        return DONE;
      return NOTHING;
      };
    Desc: "Causes a 60 foot (6 square) radius area to shake violently,
      knocking anyone who fails a Reflex save off their feet and inflicting
      2d12 points of blunt damage to those who fall.";
  }
and EA_BLAST
  { xval: AD_BLUNT; pval: 2d12; }

Wizard / Druid / Scroll Spell "Wall of Fire" : EA_TERRAFORM
  { SC_EVO|SC_FIRE; Base: SP_EASY; Cost: 8; Level: 4; lval: 6; 
    qval: Q_DIR;
    xval: TERRA_OPEN; aval: AR_BARRIER; Flags: EF_DLONG;
    rval: $"curtain of flame"; pval: 2d6 + (LEVEL_MAX20);
    Purpose: EP_BARRIER | EP_CURSE | EP_FOIL_PURSUIT | AIM_AT_ENEMY;
    On Event EV_EFFECT {
      switch (e.DType) {
        case AD_FIRE: e.rval = $"curtain of flame"; break;
        case AD_COLD: e.rval = $"curtain of frost"; break;
        case AD_ACID: e.rval = $"curtain of acid"; break;
        case AD_SONI: e.rval = $"curtain of vibrating air"; break;
        case AD_TOXI: e.rval = $"curtain of toxic gas"; break;
        case AD_ELEC: e.rval = $"curtain of lightning"; break;
        }
      APrint(e,"A <Res> flares into existance!",e.rval);
      return NOTHING; };
    Desc: "Creates a curtain of violet flames which causes (2d6
      + caster level) points of fire damage to any creature
      which passes through it."; }

Terrain "curtain of flame"
  { Image: magenta ';'; Mat:MAT_MINERAL; /* The *floor* */
    Flags: TF_SPECIAL, TF_SHOWNAME, TF_WARN;
    On Event EV_MON_CONSIDER {
      int16 rl;
      rl = EActor->ResistLevel(AD_FIRE);
      if (/* EActor->GetAttr(A_INT) > 4 && */ rl != -1) 
        return ABORT;
      return NOTHING; 
    } ; 
    On Event EV_SPECIAL {
      DPrint(e,"Flames sear you!","Flames sear the <EActor>!");
      ThrowTerraDmg(EV_DAMAGE,AD_FIRE,EMap->GetTerraDmg(e.EXVal,e.EYVal),
        "moving through a wall of fire",EActor, $"curtain of flame");
      return DONE;
      };
  }

Terrain "curtain of frost"
  { Image: bright cyan ';'; Mat:MAT_MINERAL; /* The *floor* */
    Flags: TF_SPECIAL, TF_SHOWNAME, TF_WARN;
    On Event EV_MON_CONSIDER {
      int16 rl;
      rl = EActor->ResistLevel(AD_COLD);
      if (/* EActor->GetAttr(A_INT) > 4 && */ rl != -1) 
        return ABORT;
      return NOTHING; 
    } ; 
    On Event EV_SPECIAL {
      DPrint(e,"Frost chills you!","Frost chills the <EActor>!");
      ThrowTerraDmg(EV_DAMAGE,AD_COLD,EMap->GetTerraDmg(e.EXVal,e.EYVal),
        "moving through a wall of frost",EActor, $"curtain of frost");
      return DONE;
      };
  }

Terrain "curtain of acid"
  { Image: bright green ';'; Mat:MAT_MINERAL; /* The *floor* */
    Flags: TF_SPECIAL, TF_SHOWNAME, TF_WARN;
    On Event EV_MON_CONSIDER {
      int16 rl;
      rl = EActor->ResistLevel(AD_ACID);
      if (EActor->GetAttr(A_INT) > 4 && rl != -1) 
        return ABORT;
      return NOTHING; 
    } ; 
    On Event EV_SPECIAL {
      DPrint(e,"Acid burns you!","Acid burns the <EActor>!");
      ThrowTerraDmg(EV_DAMAGE,AD_ACID,EMap->GetTerraDmg(e.EXVal,e.EYVal),
        "moving through a wall of acid",EActor, $"curtain of acid");
      return DONE;
      };
  }

Terrain "curtain of vibrating air"
  { Image: bright white ';'; Mat:MAT_MINERAL; /* The *floor* */
    Flags: TF_SPECIAL, TF_SHOWNAME, TF_WARN;
    On Event EV_MON_CONSIDER {
      int16 rl;
      rl = EActor->ResistLevel(AD_SONI);
      if (EActor->GetAttr(A_INT) > 4 && rl != -1) 
        return ABORT;
      return NOTHING; 
    } ; 
    On Event EV_SPECIAL {
      DPrint(e,"Sonic vibration tears at you!","Sonic vibration tears at the <EActor>!");
      ThrowTerraDmg(EV_DAMAGE,AD_SONI,EMap->GetTerraDmg(e.EXVal,e.EYVal),
        "moving through a wall of vibrating air",EActor, $"curtain of vibrating air");
      return DONE;
      };
  }

Terrain "curtain of toxic gas"
  { Image: green ';'; Mat:MAT_MINERAL; /* The *floor* */
    Flags: TF_SPECIAL, TF_SHOWNAME, TF_WARN;
    On Event EV_MON_CONSIDER {
      int16 rl;
      rl = EActor->ResistLevel(AD_TOXI);
      if (EActor->GetAttr(A_INT) > 4 && rl != -1) 
        return ABORT;
      return NOTHING; 
    } ; 
    On Event EV_SPECIAL {
      DPrint(e,"Toxins poison you!","Toxins poison the <EActor>!");
      ThrowTerraDmg(EV_DAMAGE,AD_TOXI,EMap->GetTerraDmg(e.EXVal,e.EYVal),
        "moving through a wall of toxic gas",EActor, $"curtain of toxic gas");
      return DONE;
      };
  }

Terrain "curtain of lightning"
  { Image: bright yellow ';'; Mat:MAT_MINERAL; /* The *floor* */
    Flags: TF_SPECIAL, TF_SHOWNAME, TF_WARN;
    On Event EV_MON_CONSIDER {
      int16 rl;
      rl = EActor->ResistLevel(AD_ELEC);
      if (EActor->GetAttr(A_INT) > 4 && rl != -1) 
        return ABORT;
      return NOTHING; 
    } ; 
    On Event EV_SPECIAL {
      DPrint(e,"Lightning shocks you!","Lightning shocks the <EActor>!");
      ThrowTerraDmg(EV_DAMAGE,AD_ELEC,EMap->GetTerraDmg(e.EXVal,e.EYVal),
        "moving through a wall of lightning",EActor, $"curtain of lightning");
      return DONE;
      };
  }

Wizard Spell "Copy" : EA_GENERIC
  { SC_ARC; Base: SP_TRIVIAL; Cost: 50; Level: 4; qval: Q_INV;
    Flags: EF_LOSEMANA, EF_AFFECTS_ITEMS, EF_LIM_ITYPE; 
    Purpose: EP_PLAYER_ONLY; 
    tval: T_BOOK;
    Desc: "Creates a duplicate copy of any spellbook that you choose
      to cast it upon.";
    On Event EV_MAGIC_HIT {
      hObj new_book;
      new_book = CreateItem(ETarget->iID);
      if (!new_book)
        return ERROR;
      EActor->GainItem(new_book,false);
      return DONE;
      };
  }
  
Wizard / Scroll Spell "Fabricate" : EA_INFLICT
  { SC_ARC; Base: SP_MEDIUM; Cost: 25; Level: 4;
    Desc: "Casting this spell allows a mage to shape inanimate material
      with her mind alone, doing the work of a master craftsman without
      the need for tools. Raw material can be turned into a finished
      product with ease. In game terms, casting this spell grants the
      mage a +10 bonus on her next single Craft skill check, and also
      frees her from the requirement to have a skill kit or forge to 
      perform certain functions with Crafts.";
    xval: SKILL_BONUS; yval: SK_CRAFT; pval: +10; }
and EA_INFLICT
  { xval: INNATE_KIT; yval: SK_CRAFT;
    Flags: EF_ONCEONLY, EF_SHOWNAME; }

/* --DIVINATION 4-- */

Wizard Spell "Track Monster" : EA_GENERIC
  { SC_DIV; Base: SP_TRIVIAL; Cost: 3; Level: 4; qval: Q_TAR;
    Purpose: EP_PLAYER_ONLY; /* Or by specific script. */
	  Flags: EF_PERSISTANT;
    On Event EV_ISTARGET {
      if (ETarget->HasMFlag(M_MINDLESS))
        return CANNOT_CAST_IT;
      if (!ETarget->isMType(MA_LIVING))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_MAGIC_HIT {
      EActor->RemoveEffStati($"track monster");
      EActor->GainTempStati(TRACKING,EVictim,e.vDuration,SS_ENCH,0,
        126,$"track monster");
      EActor->IPrint("You psychically lock on to the <hObj>'s mind.", EVictim); 
      };
	Desc: "Allows you to mystically track a single creature in 
	  a manner similar to a ranger's tracking ability. Mindless and
	  non-living creatures are immune.";
  }

Wizard / Scroll Spell "Premonition" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(3); Level: 4;
    xval: ADJUST_INS; yval: A_DEF; pval: 15;
    Desc: "Gives you forewarning of the next attack made against you,
      granting a +15 insight bonus to your Defense Class versus the
      next single melee, unarmed or missile attack made against you."; }
and EA_INFLICT 
  { xval: TRAP_EVENT; yval: EVICTIM(POST(EV_ATTACKMSG));
    On Event META(EVICTIM(POST(EV_ATTACKMSG)))
      { EVictim->RemoveEffStati($"Premonition"); 
        return NOTHING; },
    MSG_STATINAME "Premonition" "Prem"; }
       
Wizard Spell "Detect Magic" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_4X); Level: 4; xval: DETECTING_TYPE; 
    yval: 0; pval: 25d1 + (LEVEL_2PER1); 
    Desc: "Reveals all magical items or creatures carrying magical
      items, seen or unseen, within (25 + [caster level x 2]) 
      squares of you."; 
    On Event MSG_STATINAME "DetMag" / "DMag",
      EV_ISDETECT
        {
          hObj h;
          if (EActor->isType(T_ITEM))
            if (EActor->isMagic()) 
              return 1;
          if (EActor->isType(T_CREATURE))
            for(h = EActor->FirstInv(); h ; h = EActor->NextInv())
              if (h->isMagic())
                return 1;
          return -1;
        };
  }
  
Wizard Spell "Nemesis Spell" : EA_GENERIC
  { SC_DIV; Base: SP_HARD; Cost: 26; Level: 4; pval: 5;
    Purpose: EP_CURSE (VS_MELEE);
    On Event EV_ISTARGET {
      if (EVictim->ChallengeRating() > e.vCasterLev)
        return CANNOT_CAST_IT;
      if (EVictim->HasMFlag(M_MINDLESS))
        return CANNOT_CAST_IT;
      if (EVictim->isMType(MA_OUTSIDER))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_CALC_EFFECT {
      e.vDuration = 13;
      if (e.MM & MM_ANCHOR)
        e.vDuration *= 2;
        return NOTHING;
      },
    EV_MAGIC_HIT {
      EActor->GainTempStati(TRAP_EVENT,EVictim,e.vDuration,SS_ENCH,
                EV_STRIKE, e.vDmg, $"Nemesis Spell", e.vCasterLev);
      EActor->GainTempStati(TRAP_EVENT,EVictim,e.vDuration,SS_ENCH,
        EVICTIM(EV_STRIKE), e.vDmg, $"Nemesis Spell", e.vCasterLev);
      EActor->IPrint("You invoke the Fates to declare yourself the
                        <hObj>'s mortal nemesis!", EVictim);
      EVictim->IPrint("You feel very gravely threatened.");
      return DONE;
      },
    META(EV_STRIKE) {
      int16 bonus;
      bonus = EActor->GetEffStatiVal(TRAP_EVENT,$"Nemesis Spell");
      if (GetHandle(EVictim) == EActor->GetEffStatiObj(
            TRAP_EVENT,$"Nemesis Spell")) {
        if (EVictim->XORStatiVal(NONDETECTION) & PER_DETECT)
          return NOTHING;
        e.vHit += bonus;
        e.vDmg += bonus;
        e.strHit += Format(" %+d NS", bonus);
        e.strDmg += Format(" %+d NS", bonus);
        }
      else {
        e.vHit -= bonus;
        e.vDmg -= bonus;
        e.strHit += Format(" %+d NS", -bonus);
        e.strDmg += Format(" %+d NS", -bonus);
        }
      return NOTHING;
      },
    META(EVICTIM(EV_STRIKE)) {
      int16 bonus;
      bonus = EVictim->GetEffStatiVal(TRAP_EVENT,$"Nemesis Spell");
      if (GetHandle(EActor) == EVictim->GetEffStatiObj(
            TRAP_EVENT,$"Nemesis Spell")) {
        if (EActor->XORStatiVal(NONDETECTION) & PER_DETECT)
          return NOTHING;
        e.vDef += bonus;
        e.strDef += Format(" %+d NS", bonus);
        }
      else {
        e.vDef -= bonus;
        e.strDef += Format(" %+d NS", -bonus);
        }
      return NOTHING;
      },
    EV_ELAPSED {
      EActor->IPrint("The Fates extract their grim price!");
      if (EActor->isCharacter())
        EActor->LoseXP(2000);
      };
    Desc: "Casting this spell, the wizard designates herself as the Fates'
      chosen instrument of vengeance against a single chosen target, which
      must be a creature possessed of a mind and native to the Prime
      Material plane -- outsiders are not influenced by fate in the sense
      this spell affects. Once cast, for the next 13 rounds the wizard 
      gains such exceptional insight into the target creature that she
      receives a +5 bonus to hit and damage that creature, and a +5 bonus 
      to defense class against that creature's attacks.\n
      __However, this power comes at a price. All attacks made against
      other creatures while the spell is active suffer a -5 penalty to
      hit and damage, and the caster has a -5 penalty to her Defense Class
      against others' attacks on her. If the caster has not
      destroyed the target by the time the spell expires, the fates extract
      a penalty from her own karma, costing her 2000 XP permanently.\n
      __If the target is subject to <9>nondetection<1> or a similar effect,
      no insight (and thus no bonuses) are gained, but the penalties remain
      and the creature must still be destroyed within 13 rounds.";
  }

Wizard Spell "Mord's Lucubration" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_3X); Level: 4;
    xval: LUCUBRATION; yval: 6; pval: 1d4+LEVEL_1PER5;
    Desc: "Casting this spell allows you to cast any other arcane
      spell of up to sixth level that you know but do not have a 
      scroll or spellbook for -- the Lucubration allows perfect 
      recall of the spell's details without a physical referance. 
      A single casting of Lucubration allows you to so recall 1d4 
      spells, plus 1 per 5 caster levels."; }
and EA_INFLICT
  { xval: TRAP_EVENT; yval: POST(EV_CAST);
    On Event META(POST(EV_CAST))
      {
        hObj h; int16 i;
        for(h=EActor->FirstInv();h;h=EActor->NextInv()) 
          {
            if (h->isType(T_SCROLL))
              if (h->ieID == e.eID)
                return NOTHING;
            if (h->isType(T_BOOK))
              if (h->HasSpell(e.sp))
                return NOTHING;
          }
        i = EActor->GetEffStatiMag(LUCUBRATION,$"Mord's Lucubration");
        if (i <= 1)
          EActor->RemoveEffStati($"Mord's Lucubration");
        else
          EActor->SetEffStatiMag(LUCUBRATION,$"Mord's Lucubration",i-1);
        return NOTHING;
      },
    EV_CAST
      {
        if (EActor->HasEffStati(LUCUBRATION,$"Mord's Lucubration"))
          {
            EActor->IPrint("You cannot stack multiple castings of 
              <9>Mord's Lucubration<7>.");
            return ABORT;
          }
        return NOTHING;
      },
    MSG_STATINAME "MordLuc" / "Luc";
  }

            
/* --ENCHANTMENT 4-- */

Wizard / Scroll Spell "Charm Monster" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 9; Level: 4; sval: WILL;
    Purpose: EP_CURSE (VS_MENTAL); qval: Q_TAR;
    xval: CHARMED; yval: CH_CHARM; Flags: EF_DLONG, EF_MENTAL; 
    Desc: "Improves a hostile, sapient creature's temperment
      towards you, such that it ceases attacking and becomes a
      neutral creature."; 
	  On Event EV_MAGIC_HIT
	    "The <EVictim> gives way to your charm." /
	    "You fall under the influence of the <EActor>." /
	    "The <EVictim> falls under the influence of the <EActor>.",
	  EV_ELAPSED
	    "You shake off the effect of the charm." /
	    "The <EActor> shakes off the effect of the charm.";
  }

Wizard Spell "Confusion" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 8; Level: 4; sval: WILL;
    xval: CONFUSED; aval: AR_GLOBE; lval: 3; cval: CYAN;
    Purpose: EP_CURSE | EP_FOIL_PURSUIT; qval: Q_LOC;
  	Flags: EF_CASTER_IMMUNE, EF_MENTAL;
    Desc: "Causes all living creatures within 30 feet of the target
      point to become confused, if they fail a Will saving throw.";
  }

/* Wizard Spell "Fear" */

/* Wizard Spell "Emotion" 
   (Love)     Target serves caster briefly
   (Hate)     Attack target of your choice as Dire Charm
   (Despair)  Inaction (STUNNED) for 1d4 rounds
   (Fear)     Target drops weapons and flees
   (Fury)     Target gains RAGING (+2/+2) stati
   (Hope)     +2 A_AID morale bonus
   
     We should rewrite this to use RedirectEff, because as
   it stands it doesn't work with Slippery Mind.
*/

Wizard / Scroll  Spell "Emotion" : EA_GENERIC
  { SC_ENC; Base: SP_MEDIUM; Cost: 8; Level: 4; sval: WILL; 
    qval: Q_TAR; Flags: EF_MENTAL; char ch;
    Purpose: EP_PLAYER_ONLY; 
    /*Purpose: EP_BUFF | EP_ATTACK;*/
    On Event EV_EFFECT {
      if (EActor->isPlayer())
        ch = EActor->ChoicePrompt("Love, Hate, Despair, Terror, Fury or Hope?","lhdtfo");
      else if (EActor->isHostileTo(EVictim))
        {
          if (random(2))
            ch = 't';
          else 
            ch = 'l';
        }
      else
        {
          if (random(2))
            ch = 'o';
          else 
            ch = 'f';
        }
      return NOTHING;
      },
    EV_MAGIC_HIT {
      hObj h;
      switch (ch) {
        case 'l':
          TPrint(e,"The <EVictim> falls under your sway.",
                   "You are in thrall to the <EActor>.",
                   "The <EVictim> falls under the <EActor>'s sway.");
          EVictim->GainTempStati(CHARMED,EActor,e.vCasterLev+10,SS_ENCH,CH_ALLY,0,$"emotion");
         break;
        case 'h':
          VPrint(e,"You feel an unspeakable hate well up within you.",
                   "The <EVictim>'s face twists with hatred.");
          EVictim->GainTempStati(ENRAGED,EActor,e.vDuration,SS_ENCH,0,0,$"emotion");
         break;
        case 'd':
          VPrint(e,"You are is overcome with despair.",
                   "The <EVictim> is overcome with despair.");          
          EVictim->GainTempStati(PARALYSIS,EActor,1d4+1,SS_ENCH,PARA_HYPNOTIZED,0,$"emotion");
         break; 
        case 't':
          VPrint(e,"You feel panic overwhelm your reason.",
                   "The <EVictim> turns and runs.");   
          if (h = EVictim->InSlot(SL_WEAPON))
            if (!h->isCursed())
              {
                h->Remove(false);
                h->PlaceAt(EMap,EVictim->x,EVictim->y);
              }      
          if (h = EVictim->InSlot(SL_READY))
            if (!h->isCursed())
              {
                h->Remove(false);
                h->PlaceAt(EMap,EVictim->x,EVictim->y);
              }      
          EVictim->GainTempStati(AFRAID,EActor,e.vDuration,SS_ENCH,0,0,$"emotion");
         break; 
        case 'f':
          VPrint(e,"You fly into a berzerk rage!",
                   "The <EVictim> flies into a berzerk rage.");   
          EVictim->GainTempStati(RAGING,EActor,e.vDuration,SS_ENCH,0,+2,$"emotion");
         break;
        case 'o':
          VPrint(e,"You feel uplifted.",
                   "The <EVictim> gets a second wind!");
          EVictim->GainTempStati(ADJUST,EActor,e.vDuration,SS_ENCH,A_AID,+1,$"emotion");
         break;
        }
      return DONE;
      };
    Desc: "Allows you to inflict one of six emotions (love, hate, despair,
      terror, fury or hope) on a single target, with varying game effects.";
  }

Wizard / Scroll Spell "Fear" : EA_GENERIC
  { SC_ENC; Base: SP_MEDIUM; Cost: 7; Level: 4; sval: WILL; 
    qval: Q_DIR; Flags: EF_MENTAL, EF_HARDSAVE4, EF_FEAR; aval: AR_BEAM;
    Purpose: EP_CURSE (VS_MENTAL); lval: 8; cval: PURPLE;
    On Event EV_MAGIC_HIT {
      hObj h;
      if (EVictim->ResistLevel(DF_FEAR) == -1) {
        e.Immune = true;
        return DONE; 
      } 
      VPrint(e,"You feel panic overwhelm your reason.",
               "The <EVictim> turns and runs.");   
      if (h = EVictim->InSlot(SL_WEAPON))
        if (!h->isCursed())
          {
            h->Remove(false);
            h->PlaceAt(EMap,EVictim->x,EVictim->y);
          }      
      if (h = EVictim->InSlot(SL_READY))
        if (!h->isCursed())
          {
            h->Remove(false);
            h->PlaceAt(EMap,EVictim->x,EVictim->y);
          }      
      EVictim->GainTempStati(AFRAID,EActor,e.vDuration,SS_ENCH,0,0,$"emotion");
      };
    Desc: "Produces an invisible cone of terror out to a range of 80 feet, causing 
      all creatures with minds within its area of effect to drop their weapons and 
      flee if they fail a Will saving throw; this spell grants a +4 bonus to its 
      save DC."; 

  }

/* fjm: Removed the saving throw -- otherwise, this is very suboptimal
   compared to Emotion, above. */

Wizard / Sorcerer Spell "Crushing Despair" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 7; Level: 4; aval: AR_BEAM; qval: Q_DIR|Q_TAR;
    xval: ADJUST_MOR; yval: A_AID; pval: -2; lval: 3;
    Purpose: EP_CURSE; cval: SHADOW; Flags: EF_MENTAL;
    Desc: "Projects a ray of despair at the caster's enemies inflicting
      at -2 morale penalty on attack rolls, saving throws, 
      spellcasting, and weapon damage rolls. There is no resistance
      to this effect."; } 
  and EA_INFLICT 
  { aval: AR_BEAM; 
    xval: ADJUST_MOR; yval: A_DMG; pval: -2; lval: 3; } 

Wizard Spell "Fire Charm" : EA_INFLICT
  { SC_ENC|SC_FIRE; Base: SP_EASY; Cost: 9; Level: 3; sval: WILL;
    aval: AR_GLOBE; lval: 6; cval: RED; qval: Q_LOC;
    Flags: EF_MENTAL, EF_CASTER_IMMUNE, EF_HARDSAVE4;
    xval: PARALYSIS; yval: PARA_HYPNOTIZED;
    /* It's design that you can't use your own torch -- this
       spell is not supposed to be applicable in every single
       situation. */
    Desc: "This spell enchants a source of open, sustained 
      flame or molten stone (such as a wall torch, fire elemental
      or magma square), causing it to be hypnotically compelling
      and forcing creatures to stare at it blankly, paralyzed.
      You must target a square with a source of flame for this
      spell to be effective, and it only affects creatures who
      can see and have a mind.";
    On Event PRE(EV_EFFECT) {
      rID terID; hObj hMon;
      terID = EMap->TerrainAt(e.EXVal, e.EYVal);
      if (terID == $"magma" || terID == $"Wall Torch")
        return NOTHING;
      for (hMon = EMap->FCreatureAt(e.EXVal, e.EYVal);hMon;
           hMon = EMap->NCreatureAt(e.EXVal, e.EYVal))
        {
          if ((hMon != ((hObj)0)) && 
                hMon->isMType(MA_ELEMENTAL) && 
                hMon->isMType(MA_FIRE))
            return NOTHING;
          if ((hMon != ((hObj)0)) && 
                hMon->tmID == $"flaming sphere")
            return NOTHING;
        }
      EActor->IPrint("You must target a square with a source of
        flame to use that spell.");
      return ABORT;
      },
    EV_ISTARGET {
      if (EVictim->HasMFlag(M_BLIND) || EVictim->HasMFlag(M_MINDLESS))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      };
  }


/* --EVOCATION 4-- */


// 7th -        2d4 +7
// 10th -       4d4 +10*2
// 13th -       6d4 +13*3

Wizard  Spell "Force Missiles" : EA_BLAST
  { SC_EVO|SC_FORCE; Base: SP_EASY; Cost: 7; Level: 4; sval: NOSAVE; 
    xval: AD_MAGC; pval: (LEVEL_2PER3)d4; 
    Purpose: EP_ATTACK;
    aval: AR_BOLT; qval: Q_DIR | Q_TAR; cval: COL_MAGIC; 
    Desc: "This spell creates a brilliant globe of magical energy that
    streaks forth from the caster's hand to unerringly strike its target,
    much like a Magic Missile spell. Each missile does 2d4 points of damage
    and the caster fires one missile for every three caster levels. In
    addition, the missiles burst on impact and deal concussive damage
    equal to twice the caster's level to all creatures within a 10 foot
    (1 square) radius."; 
  } and EA_BLAST {
    sval: REF; xval: AD_BLUNT; pval: (LEVEL_2PER1)d1; aval: AR_BALL; 
    lval: 2; cval: COL_MAGIC; Flags: EF_CASTER_IMMUNE; 
  } 

Wizard / Scroll Spell "Shout" : EA_BLAST
  { SC_EVO; Base: SP_EASY; Cost: 12; Level: 4; lval: 5; cval: COL_SONIC; 
    qval: Q_DIR; xval: AD_SONI; sval: FORT partial; Flags: EF_SOUND;
    pval: (LEVEL_1PER2)d10; aval: AR_BEAM; Purpose: EP_ATTACK; }
and EA_INFLICT
  { xval: STUNNED; sval: WILL; aval: AR_BEAM; lval: 5; 
    Desc: "Amplifies a shout into a shattering cone of sound that
      inflicts 1d10 points of damage for every 2 caster levels (Fortitude 
      save for half) and stuns anyone who fails a Will save."; 
    On Event MSG_BLASTNAME "deafening shout"; }

Wizard / Druid Spell "Ice Storm" : EA_BLAST
  { SC_EVO|SC_COLD; Base: SP_MEDIUM; Cost: 8; Level: 4; lval: 6; aval: AR_BALL;
    xval: AD_COLD; sval: REF partial; pval: 3d10+(LEVEL_1PER1);
    Flags: EF_HALF_UNTYPED, EF_COMMON; Purpose: EP_ATTACK; cval: AZURE;
	On Event MSG_BLASTNAME "storm of hail";	qval: Q_LOC;
    Desc: "This spell can be cast in one of two forms, at the caster's
      elective, as follows:\n
      __<9>Hail Storm:<1> Conjures a brief storm of biting cold and huge, hard 
      hailstones in a 60 foot (6 square) radius area, inflicting 3d10 points of
      damage, plus one per caster level. Half this damage is cold damage; the
      other half is trauma damage, and cannot be avoided by resistances.\n
      __<9>Sleet Storm:<1> Driving sleet blocks all sight (even darkvision) 
      within it and causes the ground in the area to be icy. A creature can 
      walk within or through the area of sleet at half normal speed with a DC 
      15 Balance check. Failure means it can't move in that round, while 
      failure by 5 or more means it falls.";
    On Event PRE(EV_EFFECT) {
      char ch;
      ch = EActor->ChoicePrompt("Hail or sleet?","hs",(1d2 == 2) ? 'h' : 's'); 
      if (ch == 's')
        {
          RedirectEff(e,$"sleet storm",EV_EFFECT);
          return DONE;
        }
      return NOTHING;
      };
  }

Effect "Sleet Storm" : EA_TERRAFORM
  { SC_EVO|SC_COLD; aval: AR_GLOBE; lval: 8;
    xval: TERRA_OPEN; rval: $"storm of sleet"; qval: Q_LOC;
    Purpose: EP_FOIL_PURSUIT | EP_CURSE | AIM_AT_ENEMY;
	Flags: EF_AFFECTS_ITEMS; /* Can anchor to an item */
    sval: NOSAVE; 
    Desc: "";
    On Event MSG_CAST
      "A storm of sleet materializes out of nowhere!",
    EV_ELAPSED
      "The sleet storm stops."; }



Wizard Spell "Vitriolic Sphere" : EA_BLAST
  { SC_EVO; Base: SP_MEDIUM; Cost: 8; Level: 4; Purpose: EP_ATTACK;
    xval: AD_ACID; pval: (LEVEL_SCALED2)d8;
    aval: AR_BOLT; qval: Q_DIR | Q_TAR; cval: GREEN;
    Desc: "Projects a emerald globe of acid that strikes a target
      to inflict 1d8 damage per two caster levels (max 5d8) instantly, 
      plus 1d4 points of lingering acid damage every turn thereafter for
      the duration (1 round/caster level).";  }
and EA_INFLICT {
    aval: AR_BOLT; xval: TRAP_EVENT; yval: EV_TURN;
    On Event META(EV_TURN) {
      hObj killer;
      ThrowDmg(EV_DAMAGE,AD_ACID,1d4,"lingering acid",EActor,EActor);
  	  DPrint(e,"The acid sears!", "Acid sears the <EActor>!");
      if (EActor->isDead()) {
        killer = EActor->GetEffStatiObj(TRAP_EVENT,$"vitriolic sphere");
        if (killer)
          killer->KillXP(EActor);
        }
      return NOTHING;
      },
    MSG_BLASTNAME "globe of acid"; 
  }
    
Wizard / Scroll Spell "Fire Shield" : EA_INFLICT
  { SC_EVO|SC_FIRE; IS_A_BUFF(COST_4); Level: 4; 
    Purpose: EP_BUFF | EP_COUNTER (VS_COLD);
    xval: RESIST; yval: AD_COLD; pval: 12d1 + LEVEL_1PER2; }
and EA_INFLICT
  { xval: TRAP_EVENT; yval: EVICTIM(POST(EV_HIT)); pval: (LEVEL_MAX15);
    On Event META(POST(EVICTIM(EV_HIT))) {
      if (!EActor->isBeside(EVictim))
        return NOTHING;
      if (e.AType == A_SPEL || e.AType == A_FIRE)
        return NOTHING;

      TPrint(e,"The <EVictim>'s flame aura sears you!",
               "Your flames burn the <EActor>!",
               "The <EVictim>'s flame aura sears the <EActor>!");
      ThrowDmg(EV_DAMAGE,AD_FIRE,1d8+EVictim->GetEffStatiVal(TRAP_EVENT,$"fire shield"),
        "a nimbus of fire", EVictim, EActor);
      if (EActor->Flags & F_DELETE)
        e.ADied = true;
      return NOTHING;  
      },
    EV_EFFECT {
      if (e.MM & MM_TRANSMUTE)
        {
          EActor->IPrint("This spell can't be transmuted.");
          return ABORT;
        }
      },
    MSG_STATINAME "FShield" / "FSh", 
    MSG_CAST
      "You are wreathed in a shroud of flames!" /
      "The <EActor> is wreathed in a shroud of flames!",
    EV_REMOVED
      "Your fiery shroud fades." /
      "The <EActor>'s fiery shroud fades.";  
    Desc: "Envelops you in a shroud of flames with give you cold resistance
      (12 + [caster level / 2]) and inflicts 1d8+caster level (max 1d8+15)
      points of fire damage on anyone who attacks you in melee.";
  } and EA_INFLICT { 
    xval: TRAP_EVENT; yval: EVICTIM(POST(EV_MISS)); pval: (LEVEL_MAX15);
    On Event META(POST(EVICTIM(EV_MISS))) {
      if (!EActor->isBeside(EVictim))
        return NOTHING;
      if (e.AType == A_SPEL || e.AType == A_FIRE)
        return NOTHING;

      TPrint(e,"The <EVictim>'s flame aura sears you!",
               "Your flames burn the <EActor>!",
               "The <EVictim>'s flame aura sears the <EActor>!");
      ThrowDmg(EV_DAMAGE,AD_FIRE,1d8+EVictim->GetEffStatiVal(TRAP_EVENT,$"fire shield"),
        "a nimbus of fire", EVictim, EActor);
      if (EActor->Flags & F_DELETE)
        e.ADied = true;
      return NOTHING;  
      };
    } 

Wizard Spell "Chill Shield" : EA_INFLICT
  { SC_EVO|SC_COLD; IS_A_BUFF(COST_4); Level: 4; 
    Purpose: EP_BUFF | EP_COUNTER (VS_FIRE);
    xval: RESIST; yval: AD_FIRE; pval: 12d1 + LEVEL_1PER2; }
and EA_INFLICT
  { xval: TRAP_EVENT; yval: EVICTIM(POST(EV_HIT)); pval: (LEVEL_MAX15);
    On Event META(POST(EVICTIM(EV_HIT))) {
      if (!EActor->isBeside(EVictim))
        return NOTHING;
      if (e.AType == A_SPEL || e.AType == A_FIRE)
        return NOTHING;
      TPrint(e,"The <EVictim>'s icy aura sears you!",
               "Your aura chills the <EActor>!",
               "The <EVictim>'s icy aura sears the <EActor>!");
      ThrowDmg(EV_DAMAGE,AD_COLD,1d8+EVictim->GetEffStatiVal(TRAP_EVENT,$"chill shield"),
        "an aura of frost", EVictim, EActor);
      if (EActor->Flags & F_DELETE)
        e.ADied = true;
      return NOTHING;  
      },
    EV_EFFECT {
      if (e.MM & MM_TRANSMUTE)
        {
          EActor->IPrint("This spell can't be transmuted.");
          return ABORT;
        }
      },
    MSG_STATINAME "CShield" / "CSh", 
    MSG_CAST
      "You are wreathed in a shroud of frost!" /
      "The <EActor> is wreathed in a shroud of frost!",
    EV_REMOVED
      "Your chill aura fades." /
      "The <EActor>'s chill aura fades.";  
    Desc: "Envelops you in an aura of frost with give you fire resistance
      (12 + [caster level / 2]) and inflicts 1d8+caster level (max 1d8+15)
      points of cold damage on anyone who attacks you in melee.";
  }                          
and EA_INFLICT
  { xval: TRAP_EVENT; yval: EVICTIM(POST(EV_MISS)); pval: (LEVEL_MAX15);
    On Event META(POST(EVICTIM(EV_MISS))) {
      if (!EActor->isBeside(EVictim))
        return NOTHING;
      if (e.AType == A_SPEL || e.AType == A_FIRE)
        return NOTHING;
      TPrint(e,"The <EVictim>'s icy aura sears you!",
               "Your aura chills the <EActor>!",
               "The <EVictim>'s icy aura sears the <EActor>!");
      ThrowDmg(EV_DAMAGE,AD_COLD,1d8+EVictim->GetEffStatiVal(TRAP_EVENT,$"chill shield"),
        "an aura of frost", EVictim, EActor);
      if (EActor->Flags & F_DELETE)
        e.ADied = true;
      return NOTHING;  
      };
    } 


/* --ILLUSION 4-- */

Wizard Spell "Phantasmal Killer" : EA_GENERIC
  { SC_ILL; Base: SP_HARD; Cost: 8; Level: 4; qval: Q_TAR; sval: WILL;
    Desc: "Summons a phantasm of the target's worst fear, which the
      target may make a Will save to disbelieve absolutely. If the
      target fails, a second Fortitude save determines if the target
      is slain outright, or merely becomes Afraid and suffers 1d6
      points each of Wisdom and Charisma damage.";
    On Event EV_MAGIC_HIT {
      if (ETarget->ResistLevel(AD_FEAR) == -1) {
        VPrint(e,"You see your worst fear, but courage lets you turn aside an icy feeling!",
               "The <EVictim> looks resolute.");
        return DONE;
      }
      VPrint(e,"You feel your heart turn to ice!",
               "The <EVictim> turns deathly pale!");
      if (ETarget->SavingThrow(FORT,e.saveDC,SA_ILLUS|SA_DEATH|SA_FEAR))
      {
        ThrowDmg(EV_DAMAGE,AD_DAWI,1d6,"a phantasm",EActor,EVictim);
        ThrowDmg(EV_DAMAGE,AD_DAWI,1d6,"a phantasm",EActor,EVictim);
        EVictim->GainTempStati(AFRAID,EActor,e.vDuration,SS_ENCH,0,0,$"Phantasmal Killer");
        EVictim->IPrint("You narrowly avoid death by terror!");
        return DONE;
      }
      ThrowDmg(EV_DEATH,AD_NECR,0,"a phantasmal killer",EActor,EVictim);
      return DONE;
      };
    Flags: EF_MENTAL, EF_DEATH, EF_FEAR; Purpose: EP_ATTACK (VS_MENTAL);
  }
  
Wizard Spell "Improved Spectral Force" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 10; Level: 4; 
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_SPECTRAL|IL_IMPROVED; 
    rval: $"generic summons";
    Desc: "This spell creates an illusionary creature, force 
      or object, combining the advantages of both Spectral
      Force (resilience, independence, longer-lasting psychosomatic 
      damage) and Improved Phantasmal Force (affecting all senses)."; 
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      };
    Flags: EF_DLONG, EF_SHOWNAME;
    Lists:
      * SPELL_LIST $"magic missile" $"force bolt" $"burning hands"
                   $"ice dagger" $"sandblast" $"sunscorch"
                   $"scorcher" $"electric loop" $"fireball"
                   $"lightning bolt" $"thunderlance" $"ice storm"
                   $"force missiles" $"shout";
  }

Wizard Spell "Improved Invisibility" : EA_INFLICT
  {
    SC_ILL; Level: 4; IS_A_BUFF(COST_4X);
    xval: INVIS; yval: INV_NORMAL;
    Desc: "As one might expect from the name, this is a superior
      version of the 2nd-level spell <9>invisibility<1>. It
      functions like that spell in all respects, except that if
      the invisibility effect is broken due to attacking or a
      similar cause, it will automatically recur in 1d4+1 rounds,
      at no cost in mana or time and with no chance of failure.
      Improved Invisibility lasts a full day, but if dispelled
      or cancelled by means other than attacking, it does not
      recur.";
    On Event EV_REMOVED {
      EActor->GainTempStati(EFF_FLAG1,NULL,1d4+1,SS_ENCH,0,0,
          $"Improved Invisibility;renewal", EActor->CasterLev());
      return NOTHING;
      },
    EV_ELAPSED, EV_DISPELLED {
      return DONE;
      },
    MSG_STATINAME "ImpInv" / "IInv";
  }
  
Effect "Improved Invisibility;renewal" : EA_GENERIC
  {
    Desc: "As one might expect from the name, this is a superior
      version of the 2nd-level spell <9>invisibility<1>. It
      functions like that spell in all respects, except that if
      the invisibility effect is broken due to attacking or a
      similar cause, it will automatically recur in 1d4+1 rounds,
      at no cost in mana or time and with no chance of failure.
      Improved Invisibility lasts a full day, but if dispelled
      or cancelled by means other than attacking, it does not
      recur.";
    On Event EV_ELAPSED {
      EActor->IPrint("You turn invisible again!");
      ThrowEff(EV_EFFECT,$"Improved Invisibility",EActor,EActor);
      };
  }
  
Wizard Spell "Hallucinatory Terrain" : EA_GENERIC
  { SC_ILL; Base: SP_MEDIUM; Cost: 16; Level: 4; qval: Q_LOC;
    yval: IL_SPECTRAL; aval: AR_FIELD; rval: FI_ITERRAIN; lval: 3; 
    Flags: EF_DLONG, EF_CANCEL;
    Desc: "Casting this spell weaves an elaborate illusion of terrain
      features over a globe 30 feet in radius, with a point of origin
      that you select. The illusory terrain appears only in map squares
      containing a normal floor, and can simulate magma, a deep pool of 
      water, a gaping chasm, entangling webs or sticky slime. Just like 
      an illusionary creature, the effects of this terrain are real in the
      case of those who believe in it, and can inflict psychosomatic
      damage normally, though it can have no effect on those who are
      able to see through the illusion. Like the spell <9>phantasmal
      force<1>, this illusion affects only sight and hearing, and is
      thus automatically seen though by sharpened senses, blindsight,
      tremorsense or scent, as well as magics designed specifically to
      penetrate illusions, like <9>true seeing<1>.\n
      __However, hallucinatory terrain does not require concentration
      or line of sight in order to maintain.";
    On Event EV_EFFECT {
      char ch;
      if (EActor->HasEffStati(EFF_FLAG1,$"Hallucinatory Terrain") ||
          EActor->HasEffStati(EFF_FLAG1,$"Mirage Arcana"))
        {
          EActor->IPrint("You can only have one terrain illusion active at a time.");
          return ABORT;
        }
      
      ch = EActor->ChoicePrompt("Magma, Chasm, Slime, Pool or Webbing?", "mcspw", 'm', BLUE, AZURE);
      EActor->GainTempStati(EFF_FLAG1,NULL,e.vDuration,SS_ENCH,ch,e.saveDC, $"Hallucinatory Terrain");
      return NOTHING;
    },
    EV_REMOVED {
      EMap->RemoveEffField($"Hallucinatory Terrain");
      return NOTHING;
    },
    EV_ITERRAIN {
      char ch; rID tID;
      tID = EMap->TerrainAt(e.EXVal, e.EYVal);
      if ((tID->Image & GLYPH_ID_MASK) == GLYPH_ID(GLYPH_FLOOR) ||
          (tID->Image & GLYPH_ID_MASK) == GLYPH_ID(GLYPH_FLOOR2))
        {
          ch = EActor->GetEffStatiVal(EFF_FLAG1,$"Hallucinatory Terrain");
          switch (ch)
            {
              case 'm': e.eID = $"magma"; break;
              case 'c': e.eID = $"chasm"; break;
              case 's': e.eID = $"pool of slime"; break;
              case 'p': e.eID = $"deep water"; break;
              case 'w': e.eID = $"webbing"; break;
            }
        }
      else
        e.eID = tID;
      return DONE;
      };
  }      

Wizard Spell "Shadow Monsters" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 10; Level: 4; 
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_SPECTRAL|IL_SHADE20; 
    rval: $"generic summons";
    Desc: "This spell draws material from the Demiplane of Shadow in 
      order to form partially real illusions of one or more monsters
      to fight in the caster's name. These creatures are functionally
      identical to the creature illusions created by <9>spectral force<1>, 
      but they are 20~ real -- their attacks inflict 20~ real damage to
      all creatures (and 80~ psychosomatic damage to any creatures that
      do not see through the illusion). Likewise, they can affect inanimate
      objects with a Strength score equal to 20~ of the Strength of a real
      creature of their type.\n
      __The downside of this is that they only have 20~ of the hit points
      of a normal creature of their type -- if a creature that sees through
      the illusion strikes them for damage, or they suffer damage from an
      inanimate source such as a trap, and this damage brings their current
      hit points to less than 80~ of their total, they are dispelled and
      cease to exist with regard to all characters."; 
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      };
    Flags: EF_DLONG, EF_SHOWNAME, EF_IMONSTERS;
  }

Wizard Spell "Shadow Magic" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 15; Level: 4; 
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_SPECTRAL|IL_SHADE20|IL_SHADE10; 
    Desc: "This spell draws forth matter from the Demiplane of Shadows in order
      to create a blast of elemental force duplicating certain wizard evocation
      spells of 3rd or 4th level. However, the magic, created from shadow, is
      only 30~ real, and all creatures who are subject to it receive an immediate
      chance to disbelieve. All creatures suffer 30~ of the duplicated spell's
      normal damage; creatures who fail the disbelief check also suffer the
      remaining 70~ as psychosomatic damage."; 
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      };
    Flags: EF_IBLAST;
    Lists:
      * SPELL_LIST $"fireball" $"flame arrow" $"lightning bolt"
                   $"thunderlance" $"force missiles" $"ice storm"
                   $"shout";
  }

/* --NECROMANCY 4-- */

Wizard / Priest / Druid Spell "Contagion" : EA_GENERIC
  { SC_NEC; Base: SP_EASY; Cost: 7; Level: 4; qval: Q_TAR;
    rID diseaseID; sval: FORT; Purpose: EP_CURSE;
    On Event EV_EFFECT {
      if (EActor->isMonster()) 
        switch(random(7)) {
          case 0: diseaseID = $"blinding sickness"; break;
          case 1: diseaseID = $"cackle fever"; break;
          case 2: diseaseID = $"filth fever"; break;
          case 3: diseaseID = $"red ache"; break;
          case 4: diseaseID = $"mindfire"; break;
          case 5: diseaseID = $"the shakes"; break;
          case 6: diseaseID = $"slimy doom"; break;
          }
      else {
        ETerm->LOption("blinding sickness",(int32)$"blinding sickness");
        ETerm->LOption("cackle fever",(int32)$"cackle fever");
        ETerm->LOption("filth fever",(int32)$"filth fever");
        ETerm->LOption("red ache",(int32)$"red ache");
        ETerm->LOption("mindfire",(int32)$"mindfire");
        ETerm->LOption("the shakes",(int32)$"the shakes");
        ETerm->LOption("slimy doom",(int32)$"slimy doom");
        diseaseID = (rID) ETerm->LMenu(0,"Choose a disease:");
        }
      if (diseaseID == (rID)0)
        {
          Error("Undefined disease in $Contagion::EV_EFFECT!");
          return ABORT;
        }
      },
    EV_MAGIC_HIT {
      EVictim->GainPermStati(DISEASED,NULL,SS_MISC, 0, 0, diseaseID);
      EVictim->StatiMessage(DISEASED,0,0);
      return DONE;
      };
	Desc: "Infects a living creature with one of the following diseases
	  if they fail a Fortitude saving throw: blinding sickness, cackle
	  fever, filth fever, red ache, mindfire, the shakes or slimy doom.";
  }

Wizard Spell "Enervation" : EA_INFLICT
  { SC_NEC; Base: SP_EASY; Cost: 7; Level: 4; qval: Q_DIR | Q_TAR;
    xval: ADJUST_DMG; yval: A_AID; pval: 1d4+1; aval: AR_BOLT;
    tval: MA_LIVING; Flags: EF_LIM_MTYPE, EF_ATTACK; cval: BLUE;
    Purpose: EP_ATTACK;
    Desc: "Produces a bolt of negative energy that inflicts a
      -(1d4+1) general penalty if it strikes a living target.
      You must make a ranged attack roll to hit with this spell.";
    On Event EV_MAGIC_HIT {
	  if (e.vDmg > 0)
	    e.vDmg = -e.vDmg;
	  VPrint(e, "You feel like someone just walked over your grave.",
                "The <EVictim> shivers.");
	  e.Terse = true;
	  return NOTHING;
	  };
  }

Wizard Spell "Revenance" : EA_INFLICT
  { SC_NEC; IS_A_BUFF(COST_4); Level: 4; 
    xval: ADJUST_SAC; yval: A_AID; pval: +2; tval: MA_UNDEAD;
    Flags: EF_LIM_MTYPE; 
    aval: AR_GLOBE; lval: 6; cval: COL_NECRO;
    Desc: "Channels negative energy to strengthen all undead
      within 60 feet (6 squares) of you, giving
      them all a +2 profane bonus to hit, damage and saves, and
      a +4 turn resistance."; 
    On Event EV_ISTARGET {
      if (!EActor->isMType(MA_UNDEAD)) {
	  VPrint(e, "EV_TARGET not undead.",
                "EV_TARGET not undead.");        
        return CANNOT_CAST_IT;
      } else {
	  VPrint(e, "EV_TARGET undead.",
                "EV_TARGET undead.");        
        return SHOULD_CAST_IT;
      }
    },
    EV_MAGIC_HIT
      "You feel empowered!" /
      "A roiling aura of negative energy strengthens the <EVictim>!";
  }
and EA_INFLICT
  { aval: AR_GLOBE; lval: 6; 
    xval: EXTRA_ABILITY; yval: CA_TURN_RESISTANCE; pval: +4; }

/* This is necromancy because shadows are undead, and illusion
   because one of the functions of illusion is drawing upon the
   Demiplane of Shadows. */
Wizard / Sorcerer  Spell "Summon Shadows" : EA_SUMMON
  { SC_NEC; SC_ILL; Base: SP_MEDIUM; Cost: 7; Level: 4; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"mass summons"; pval: 6;
    Flags: EF_XSUMMON; 
    Desc: "Summons a group of shadows worth CR 6. Casting this spell
      costs one fatigue point.";
    Flags: EF_MULTIPLE; 
    On Event PRE(EV_ENGEN) {
      e.enConstraint = (int32) $"shadow";
      EActor->LoseFatigue(1,false);
      return NOTHING;
      };
    }


/* --THAUMATURGY 4-- */

Wizard / Scroll Spell "Polymorph Other" : EA_POLYMORPH
  { SC_THA; Base: SP_MEDIUM; Cost: 8; Level: 4; sval: FORT; qval: Q_TAR; 
    Flags: EF_DXLONG; Purpose: EP_CURSE;
    Desc: "Changes one target creature into a different, random creature
      of the same challenge rating or lower.";
    On Event EV_MAGIC_HIT {
      if (GetHandle(EActor) == GetHandle(EVictim))
        {
          EActor->IPrint("You need <9>Polymorph Self<7> to change your
            own form.");
          return DONE;
        }
      };
  }

Wizard Spell "Stoneskin" : EA_INFLICT
  { SC_THA|SC_EARTH; IS_A_BUFF(COST_4); Level: 4; 
    xval: TRAP_EVENT; yval: EVICTIM(EV_HIT); pval: 1d4+LEVEL_1PER2;
    Flags: EF_SHOWVAL;
    Desc: "Turns your skin as hard as rock, automatically and completely
      negating 1d4+(caster level/2) blows from any weapon of less than +5
      enchantment. Critical hits damage you, but only as much as a normal
      hit would usually.";
    On Event META(EVICTIM(EV_HIT)) {
      int16 count;
      if (e.DType != AD_SLASH && e.DType != AD_PIERCE && e.DType != AD_BLUNT)
        return NOTHING;
      /* Roguelike players should be able to interpret somewhat
         obscure messages -- especially when the PC has no way
         to know what's happening either! -- fjm */
      DPrint(e,"Click.","Click.");
      // DPrint(e,"(Stoneskin).","(Stoneskin).");
      count = EVictim->GetEffStatiVal(TRAP_EVENT,$"stoneskin");
      if (count == 1)
        EVictim->RemoveEffStati($"stoneskin");
      else
        EVictim->SetEffStatiVal(TRAP_EVENT,$"stoneskin",count - 1);
      if (GetHandle(EItem))
        if (EItem->GetPlus() >= 5)
          return NOTHING;
      if (e.isCrit) {
        e.isCrit = false;
        return NOTHING;
        }
      return DONE;
      };
    On Event EV_MAGIC_HIT
      "Your skin turns to stone!" /
      "The <EVictim>'s skin turns to stone!",
    MSG_STATINAME
      "Stoneskin" / "SS";
  }

Wizard Spell "Burning Blood" : EA_INFLICT
  { SC_THA|SC_FIRE; Base: SP_EASY; Cost: 7; Level: 4; qval: Q_TAR;
    xval: TRAP_EVENT; yval: EV_TURN; Purpose: EP_ATTACK | EP_CURSE; 
    On Event EV_ISTARGET {
      if (!EVictim->isMType(MA_HAS_BLOOD))
        return CANNOT_CAST_IT;
      if (EVictim->ResistLevel(AD_FIRE) == -1)
        return CAN_CAST_IT;
      return SHOULD_CAST_IT;
    }, EV_MAGIC_HIT 
        "You feel your blood begin to boil!" /
        "The <EVictim> screams in agony!",
       EV_ELAPSED
         "Your blood stops boiling." /
         "The <EActor>'s blood stops boiling.",
    META(EV_TURN) {
      hObj killer;
      killer = EActor->GetEffStatiObj(TRAP_EVENT,$"burning blood");
      if (killer) {
        ThrowDmg(EV_DAMAGE,AD_FIRE,2d6,"burning blood",killer,EActor);
        ThrowDmg(EV_DAMAGE,AD_NORM,1d6,"burning blood",killer,EActor);
      } else {
        ThrowDmg(EV_DAMAGE,AD_FIRE,2d6,"burning blood",EActor,EActor);
        ThrowDmg(EV_DAMAGE,AD_NORM,1d6,"burning blood",EActor,EActor);
      }
      if (EActor->isDead())
        DPrint(e,"Your blood foams out of your body, killing you.",
  "The <EActor>'s blood foams out of <his:EActor> body, killing <him:EActor>.");
      else
        DPrint(e,"Your blood boils!",
                 "The <EActor>'s blood boils!");
      if (EActor->isDead()) {
        if (killer)
          killer->KillXP(EActor);
      }
      return NOTHING;
    };
    Desc: "Causes a victim's blood to boil, dealing 2d6 points of fire
      damage and 1d6 points of unblockable damage to him every turn for
      your caster level in rounds. Can only be cast on victims that
      possess blood.";
  }
  
Wizard / Scroll Spell "Evard's Black Tentacles" : EA_GENERIC
  { SC_THA; Base: SP_MEDIUM; Cost: 12; Level: 4; qval: Q_LOC;
    Purpose: EP_SUMMON|EP_FOIL_PURSUIT; pval: 1d4 + LEVEL_1PER1;
    /* HACKFIX */ Purpose: EP_PLAYER_ONLY;
    On Event EV_MAGIC_HIT {
      int16 i, j, x, y; hObj hTent;
      for (i=0;i<=e.vDmg;i++)
        {
          for (j=0;j<20;j++)
            {
              x = e.EXVal - 6 + 1d11;
              y = e.EYVal - 6 + 1d11;
              if (EMap->InBounds(x,y))
                if (!(EMap->SolidAt(x,y) || 
                      EMap->FallAt(x,y)))
                  if (dist(EActor->x,EActor->y,x,y) > 2)
                    {
                      hTent = CreateMonster($"black tentacle");
                      hTent->PartyID = 76;
                      hTent->PlaceAt(EMap,x,y);
                      hTent->Initialize();   
                      j = 20;
                    }
            }
        }
      return DONE;
      },
    MSG_CAST
      "Ropy black tentacles grow from the walls and floor!";
    Desc: "This spell causes 1d4 tentacles, plus one per caster
      level, to grow out of the nearby stone, earth, wood or any
      other surface and lash out mindlessly to entangle whatever
      might be nearby. The tentacles have Strength 18, Dexterity
      18, 3 hit dice, a +3 base attack bonus and are DC 13 with
      +5 natural armour. The tentacles cannot move from the spot
      they first appear, which will be within 50 feet of the 
      spell's chosen point of origin.\n
      __The tentacles are <9>not<1> summoned creatures -- they
      are grown by thaumaturgic means out of nothing -- and are
      unaffected by spells and powers which affect summoned beings.
      Further, they are <9>not<1> subservient to the caster, attacking
      him as casually as anyone else who comes within their reach.
      Fortunately, no tentacles will grow in the squares directly
      surronding the caster.\n
      __If the spell is cast is a very constricted area such as a
      corridor, less than the normal number of tentacles may appear.";
  }
  
Monster "black tentacle" : MA_ABERRATION
  {
    Image: black '{'; Size: SZ_LARGE; Arm: 5;
    CR: 2; HD: 3; Hit: +3; Def: 14; Mov: 0%; Spd: 70%;
    Str 18, Dex 18, Con 14, Int 2, Wis 13, Cha 4;
    Attk: A_TENT for AD_GRAB (DC 17),
          A_CONS for 1d6 AD_BLUNT;
    ABILITY(CA_TREMORSENSE, 6);
    Feats: FT_NATURAL_GRAB;
    Flags: M_NEUTER, M_NOHANDS, M_NOHEAD, M_DEAF, M_MINDLESS,
           M_NOBODY, M_BLIND, M_REACH, M_NO_BREATH, 
           M_NO_CARRY_LOADS, M_NOPOLY, M_NOGEN, M_NOGENO, 
           M_AMPHIB, M_HOSTILE, M_PSYCHO; 
    Desc: "A slick, black tentacle ten feet long and as thick
      across as a man's arm, this horror is no natural thing,
      growing out of stone or earth, but obviously the working
      of a powerful wizard's spell.";
  }
      
Wizard / Scroll Spell "Waves of Weariness" : EA_GENERIC
  { SC_THA; Base: SP_EASY; Cost: 7; Level: 4; qval: Q_DIR;
    lval: 6; aval: AR_BEAM; sval: FORT; pval: 2d8; cval: GRAY;
    tval: MA_LIVING; Flags: EF_LIM_MTYPE; Purpose: EP_CURSE;
    Desc: "Creates a grey wave which saps vitality from
      everyone it strikes, draining 2d8 fatigue points
      from any living creature that fails a Fortitude
      save.";
    On Event EV_MAGIC_HIT {
      EVictim->IPrint("You suddenly feel exhausted!");
      EVictim->LoseFatigue(e.vDmg,false);
      return DONE;
      },
    MSG_CAST
      "A grey wave ripples forth from your hands!" /
      "A grey wave ripples forth from the <EActor>'s hands!";
  }

/* --WEAVECRAFT 4-- */

Wizard / Sorcerer  Spell "Monster Summoning IV" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 12; Level: 4; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"summoned monster"; pval: 4; 
    Desc: "Summons a living creature of CR 4 to fight in the 
      caster's name."; 
    ALIENIST_CLAUSE(4) }

Wizard / Priest Spell "Dimensional Anchor" : EA_INFLICT
  { SC_WEA; Base: SP_EASY; Cost: 7; Level: 4; qval: Q_TAR | Q_DIR;
    aval: AR_BOLT; Purpose: EP_CURSE | EP_COUNTER (VS_TELEPORT);
    xval: ANCHORED; cval: EMERALD; Flags: EF_ATTACK;
    Desc: "Produces a thin bolt of green energy that, upon
      striking a target (ranged attack roll), locks that
      target into place and prevents them from teleporting,
      being teleported or plane-shifting. Creatures already
      phased will be forcibly returned to their natural plane
      of existance.";
	On Event EV_MAGIC_HIT
	  "You feel a strange wrenching sensation." /
	  "The <EVictim> suddenly seems more solid, somehow.";
  }

Wizard Spell "Shift Level" : EA_GENERIC
  { SC_WEA; Base: SP_EASY; Cost: 12; Level: 4; Purpose: EP_ESCAPE;
    Desc: "This unusual variant of <9>dimension door<1> allows the
      caster to travel on the vertical plane, either ascending by
      teleporting through the ceiling to the next stable surface
      that can support her weight above her, or similarly travelling
      through the floor and whatever depth of stone seperates her
      from the nearest open area immediately below her.";
    On Event EV_MAGIC_HIT {
      char ch;
      ch = EActor->ChoicePrompt("Ascend or descend?", "ad", 'd');
      if ( (EMap->dID == NULL_ID) ||
          (ch == 'a' && EMap->Depth == 1) || EActor->HasStati(ANCHORED) ||
          (ch == 'd' && EMap->Depth >= EMap->dID->GetConst(DUN_DEPTH)))
        {
          VPrint(e,"You flicker for a brief instant, but remain where you are.",
             "The <EVictim> flickers in place.");
          return DONE;
        }
      VPrint(e,NULL,"The <EVictim> vanishes!");
      EVictim->MoveDepth(EMap->Depth + ((ch == 'a') ? -1 : 1),true);
      VPrint(e,NULL,"An <EVictim> appears!");
      return DONE;
      };
  }
  
Wizard Spell "Lesser Planar Conjuration" : EA_SUMMON
  {
    SC_WEA; Base: SP_HARD; Cost: 65; Level: 4; Purpose: EP_PLAYER_ONLY;
    Desc: "This spell -- the first hint young mages receive of the true
      art of conjuration -- allows a caster to summon a powerful creature
      with a CR of up to (6 + caster's Charisma mod) from the outer planes 
      in order to serve her for a full day. This kind of summoning is
      extremely difficult -- in addition to a staggering mana cost, it
      requires that the caster stand next to a specially perpared summoning
      circle (which, fortunately, are sometimes found in dungeons already
      prepared by ancient mages) to conduct a two hour ritual, and it costs 
      the caster 2 fatigue points.\n
      __Opening the outer-planar conduit correctly requires a Knowledge
      (Planes) check against DC 15 -- if this check fails, the creature
      is unbound and arrives hostile. If the check is successful, however,
      the caster can proceed to negotiate terms of service with the creature
      by means of an opposed Diplomacy test. [ For now, if the creature wins,
      it just leaves -- later, the spell will have more complexity, allowing
      the caster to pay the creature to stay, maybe stays for a shorter term,
      different modifiers, etc. Creatures summoned with this spell have +200~
      movement until we can fix the companion AI.]\n
      __A caster can only have one creature summoned with <9>lesser planar
      conjuration<1> at a time, though she may summon others with spells 
      like <9>planar conjuration<1> or <9>conjure earth elemental<1>.";
    Flags: EF_XSUMMON, EF_LOSEMANA; bool hostile_flag; rval: $"conjured outsider";
    On Event EV_CALC_EFFECT {
      SetPVal(e,6 + EActor->Mod(A_CHA));
      return NOTHING;
      },
    PRE(EV_EFFECT) {
      int16 dir;
      e.isLoc = false;
      for(dir=0;dir!=8;dir++)
        {
          if (EMap->TerrainAt(EActor->x + DirX(dir), EActor->y + DirY(dir))
               == $"Summoning Circle")
            {
              e.isLoc = true;
              e.EXVal = EActor->x + DirX(dir);
              e.EYVal = EActor->y + DirY(dir);
            }
        }
      if (!e.isLoc)
        {
          EActor->IPrint("You need to stand directly beside a summoning circle
            to cast this spell.");
          return ABORT;
        }
      if (!EActor->LoseFatigue(2,true))
        return ABORT;
      EActor->IPrint("You begin an elaborate ritual...");
      if (EActor->isPlayer())
        if (EActor->SpendHours(2,2) != DONE)
          return ABORT;
      
      if (!EActor->SkillCheck(SK_KNOW_PLANES,15,true))
        { hostile_flag = true;
          EActor->IPrint("You evoke the conduit imprecisely!
            You are in mortal danger!");
          EActor->GainTempStati(STUNNED,NULL,3d6,SS_MISC); }
      else
        hostile_flag = false;
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      hObj hDemon; int16 a, b;
      hDemon = EMap->GetEncounterCreature(0);
      if (hDemon == NULL_OBJ)
        return NOTHING;
      if (hostile_flag)
        {
          hDemon->TurnHostileTo(EActor);
          return NOTHING;
        }
      EActor->IPrint("You negotiate terms of service with the <hObj>.",hDemon);
      EActor->SkillCheck(SK_DIPLOMACY,0,true);
      a = LastSkillCheckResult();
      hDemon->SkillCheck(SK_DIPLOMACY,0,true);
      b = LastSkillCheckResult();
      if (b >= a)
        {
          EActor->IPrint("Unable to form a binding pact, 
            you dismiss the <hObj>.", hDemon);
          hDemon->Remove(true);
        }
      else
        {
          EActor->IPrint("You successfully form a service pact with
            the <hObj>. The summoning circle fades.", hDemon);
          EMap->WriteTerra(hDemon->x,hDemon->y,$"floor");
        }
        
      /* Let's at least let the caster's shiny new toy keep up with
         her... */
      hDemon->GainPermStati(ADJUST_INH,NULL,SS_MISC,A_MOV,+40);
        
      return NOTHING;
      };
  }    

/* ============================================================= 
 *                   Level Five ARCANE Spells
 * =============================================================
 * Abj: Energy Buffer, Ironguard, Dispelling Screen, Preserve Item
 * Arc: Cloudkill, Wall of Stone, Major Creation, Mind Fog
 * Div: Wizard Sight, Contact Other Plane?, PW: Stop, Dream
 * Enc: Dominate Person, Hold Monster, Mind Fog, Feeblemind, Preserve Item
 * Evo: Cone of Cold, Interposing Hand, Wall of Force, Sighing Chain
 * Ill: Colour Burst, Dream, Nightmare, Shadow Evocation, Persistant Illusion 
 * Nec: Eldritch Bolt, Magic Jar, Wraithform, Spiritwall, Fleshshiver
 * Tha: Force Shapechange, Fleshshiver, Claws of the Umber Hulk, Blood Lightning
 * Wea: Summon Monster V, Teleport, Synostodwenomer, Shift Level
 * =============================================================

ABJURATION

Ironguard
  This spell renders the caster incorporeal to weapons composed
of iron, including wrought iron. Weapons with the Ghost Touch
quality can strike the caster normally, and she is able to use
iron weapons herself normally.

Preserve Item
  This spell, which lasts until cancelled, increases the hardness
of an item by twice the caster's level. The mana used in its
casting remains gone from the caster's pool until it is cancelled.

Dispelling Screen
  This spell creates an invisible magical screen permeable to
living creatures that, when crossed, subjects any creature other
than its original creator to a <9>dispel magic<7> effect at the
same caster level as the <9>dispelling screen<7> was cast.

ARCANA

Major Creation
  This spell creates any mundane item of the caster's choice.

Mind Fog
  This spell creates a bank of fog that inflicts a -4 circumstance
penalty on all saving throws versus enchantment upon all breathing
creatures within its area.

DIVINATION

Contact Other Plane
  This spell simulates the effects of prayer to an athiest caster,
or a caster who has already prayed recently or does not wish to
pray for whatever reason -- but the risks are grave indeed,
including insanity (i.e., potentially lethal damage to mental
attributes), summoning of hostile creatures and other effects.
  The caster may choose to contact an inner (elemental) plane,
the ethereal plane, the astral plane or an outer plane -- the
risks and rewards both increase in the order those planes are
listed. 
  Each casting of this spell costs the caster five mana permanently.

Dream
  Casting this spell sends a beguiling and seductive dream to all
sleeping creatures on the current level within [caster level x 50]
feet, even those outside your sight. Failing a Will save causes an
affected creature to be charmed. Regardless, you sense their
presence.

Power Word: Stop
  Reveals to you knowledge of an ancient word that, when spoken,
will freeze a single sapient creature in place with no saving
throw. The creature can act normally and use ranged attacks, but
cannot run, jump or otherwise move mundanely from where it stands,
though teleportation remains possible.
  Magic resistance does not apply against Power Words, and the
mana spent casting them does not recover until you rest. Power
words do not affect unique creatures.

ENCHANTMENT

Dominate Person
  This spell turns any one humanoid creature into your willing slave,
a being who will serve you willingly and utterly through telepathic
bondage until you release them or a full day has passed.

Hold Person
  Paralyzes any one creatures of your choice.

Feeblemind
  Reduces any one chosen target to 1 Intelligence if they fail to
save, rendering most spellcasters useless and severely impairing
other monsters. The save DC of this spell is increased by +4 versus
creatures with arcane casting ability.

Mind Fog, Preserve Item
  See Above

EVOCATION

Interposing Hand
  Conjures a hand made of magical force that can grapple another
character, holding them in place but preventing them from moving.

ILLUSION

Dream
  See Above.

Nightmare
  Casting this spell sends a horrific nightmare to all the sleeping
creatures on the current level within [caster level x 50] feet, even
outside your sight. The creatures suffer 2d6 points of fatigue loss,
1d8 damage to Wisdom and Charisma and 1d6 points of psychic damage
per caster level, capping off at 10d6.
  [ lose mana -- can't regain spells per SRD version? ]

Shadow Evocation
  Creates an evocation with an area of effect (cone, ball, beam or
bolt) and elemental form (fire, cold, lightning, sound, acid or
poison) of your choice. The evocation is an illusion, however, and
is only partly real, inflicting 25% real damage and 75% illusionary
damage. Creatures who are immune to illusion or who successfully
disbelieve suffer do not suffer the illusionary damage.

THAUMATURGY

Claws of the Umber Hulk
  Grants the caster two claw attacks that inflict 1d12 points of
damage each, and temporarily gives the caster the base attack
bonus of a fighter of equal level.

Blood Lightning
  Enchants the caster's blood such that any attack against him
with a slashing weapon by an adjacent creature that inflicts at
least one point of damage invokes a retributive blast of crimson
lightning inflicting 2d12 points of lightning damage.


NECROMANCY

Magic Jar
  Allows you to temporarily take possession of another creature's
body, leaving your own in a comatose and vulnerable state. This is
in some ways similar to polymorph, but if the creature dies you
are able to return safely to your own body. If your body is destroyed,
however, you will die when the spell duration expires.

Wraithform
  Casting this spell turns you into an incorporeal creature tied to
the negative plane similar to a wraith. You have a life-draining
touch, can pass through walls and are vulnerable to holy weapons,
being turned ans sun-based attacks.

Spirit Wall
  Casting this spell creates a wall of trapped undead spirits,
ghostly beings pressed together to form a solid surface. Creatures
passing through the spirit wall gain a negative level, suffer
2d12 points of cold damage and must make a Will save or become
frightened.

Fleshshiver
  Creates a wave of necromantic energy which briefly liquifies
any flesh it comes in contact with -- this inflicts 2d12 points
of necromantic damage, 1d4 points of Dexterity damage and stuns 
and nauseates any creature who fails a Fortitude save for one 
full round. 

WEAVECRAFT

Shift Level
  Casting this spell teleports you directly up or down one dungeon
level instantly, just as using the stairs would.

Synostodwenomer
  This spell converts the magical energy within an item into life
force, acting as an emergency healing ability. At the cost of the
selected permanent magical item, you will be healed a number of
hit points commensurate with the power of the sacrificed item.

 */

/* --ABJURATION 5-- */

Wizard / Scroll Spell "Energy Buffer" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_5); Level: 5; 
    xval: TRAP_EVENT; yval: EVICTIM(EV_DAMAGE);	pval: (LEVEL_1PER1)d12; 
    Flags: EF_SHOWVAL;	
       On Event META(EVICTIM(EV_DAMAGE)) {
         int16 buff;
         if (e.DType != AD_FIRE && e.DType != AD_COLD &&
             e.DType != AD_ACID && e.DType != AD_TOXI &&
             e.DType != AD_ELEC && e.DType != AD_SONI)
           return NOTHING;
         buff = EVictim->GetEffStatiVal(TRAP_EVENT,$"Energy Buffer");
         if (e.vDmg < buff) {
           EVictim->SetEffStatiVal(TRAP_EVENT,$"Energy Buffer",buff - e.vDmg);
           e.Immune = true;
           return DONE;
         }
         else {
           EVictim->RemoveEffStati($"Energy Buffer",EV_REMOVED);
           if (e.vDmg == buff)	{
             e.Immune = true;
             return DONE;
           }
           e.vDmg -= buff;
           return NOTHING;
         }
       },
      MSG_STATINAME "Energy Buffer" / "EBuf",
      EV_MAGIC_HIT {
        e.vDmg = min(126, e.vDmg);
        return NOTHING;
        };
      Desc: "Absorbs the first [1d12 / caster level] points of damage you take
        from elemental (i.e., fire, cold, lightning, poison, sonic or acid)
        sources. ";
}

Wizard Spell "Mooncloak" : EA_INFLICT
  {
    SC_ABJ; SC_EVO; Level: 5; IS_A_BUFF(COST_5);
    Desc: "Casting this spell evokes a shimmering silver
      luminescence around the mage's body not unlike that
      produced by <9>faerie fire<1>, but the Mooncloak
      has a much greater effect than that. The dweomer
      abjures several kinds of protection against the next
      applicable attack she suffers -- a Cold Resistance of
      7, a +5 bonus on saving throws versus paralyzation
      and petrification and absolute immunity to a single
      negative energy effect. Once the Mooncloak has offered
      its protection against one of these effects, it is
      expended and the radiance vanishes.\n
      __Alternatively, once the Mooncloak is in effect, the
      caster can choose to expend its magic at any time (by
      'a'ctivating it) as a destructive silvery bolt. This
      bolt inflicts 5d6 points of pure magic damage, triple
      that against lycanthropes. If victims fail a Fortitude
      save for half damage, they are also confused for 3d6
      rounds -- literally, they are moonstruck. The bolt hits
      a single creature and requires a ranged attack roll to
      successfully impact.";
    xval: ILLUMINATED; pval +1;
    Flags: EF_ACTIVATE3, EF_ACTIVATE2, EF_ONCEONLY, EF_ATTACK;
  }
and EA_BLAST
  { xval: AD_MAGC; pval: 3d6; aval: AR_BOLT; sval: FORT;
    On Event EV_MAGIC_HIT {
      if (e.efNum == 1)
        if (EVictim->isMType(MA_LYCANTHROPE))
          e.vDmg *= 3;
      return NOTHING;
      },
    POST(EV_EFFECT) {
      if (e.isActivation)
        EActor->RemoveEffStati($"Mooncloak");
      return NOTHING;
      };
  }
and EA_BLAST
  { xval: AD_CONF; pval: 3d6; aval: AR_BOLT; sval: FORT; }
and EA_INFLICT
  { xval: RESIST; yval: AD_COLD; pval: 7; aval: 0; sval: NOSAVE;}
and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_PARA; pval: +5; }
and EA_INFLICT
  { xval: SAVE_BONUS; yval: SN_PETRI; pval: +5; }
and EA_INFLICT
  { xval: TRAP_EVENT; yval: PRE(EVICTIM(EV_DAMAGE)); 
    On Event META(PRE(EVICTIM(EV_DAMAGE))) {
      if (e.DType == AD_DREX)
        {
          APrint(e,"A tremendous burst of positive enery
                        deflects the life-drain!");
          EVictim->RemoveEffStati($"Mooncloak");
          return DONE;
        }
      return NOTHING;
      };
  }
and EA_INFLICT
  { xval: ACTIVATION; qval: Q_TAR; } 


Wizard / Priest / Druid Spell "Resist the Elements" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(35); Level: 5; qval: Q_TAR;
    xval: RESIST; yval: AD_FIRE; pval: 5d1 + (LEVEL_2PER3); 
    On Event MSG_STATINAME "ResistElem" / "ResE"; 
    Desc: "Grants the target resistance equal to 5 plus
      2 per 3 caster levels against Acid, Cold, Lightning, Fire and Sound."; 
    }
  and EA_INFLICT { xval: RESIST; yval: AD_COLD; 
                   flags: EF_DLONG; pval: 5d1+(LEVEL_2PER3); }
  and EA_INFLICT { xval: RESIST; yval: AD_ELEC; 
                   flags: EF_DLONG; pval: 5d1+(LEVEL_2PER3); }
  and EA_INFLICT { xval: RESIST; yval: AD_ACID; 
                   flags: EF_DLONG; pval: 5d1+(LEVEL_2PER3); }
  and EA_INFLICT { xval: RESIST; yval: AD_SONI; 
                   flags: EF_DLONG; pval: 5d1+(LEVEL_2PER3); }



/* --ARCANA 5-- */

Wizard / Scroll Spell "Cloudkill" : EA_BLAST
  { SC_ARC|SC_AIR; Base: SP_MEDIUM; Cost: 10; Level: 5; qval: Q_DIR | Q_TAR | Q_LOC;
    lval: 8; 
    xval: AD_TOXI; pval: (LEVEL_SCALED)d4; aval: AR_BALL;
    cval: COL_POISON;	Purpose: EP_ATTACK; sval: FORT;
    Flags: EF_PARTIAL, EF_LIM_MTYPE, EF_GLYPH_FOG, EF_CASTER_IMMUNE; 
    tval: MA_BREATHER;
		On Event POST(EV_MAGIC_HIT) {
		  if (e.Immune || EVictim->isDead())
			  return NOTHING;
			if (EVictim->ChallengeRating() <= 2 || ((!e.Resist) &&
			  EVictim->ChallengeRating() <= 5))	{
				ReThrow(EV_DEATH,e);
				}
			return NOTHING;
			};
    Desc: "Creates a cloud of poisonous gas that kills outright
        any creature of CR 2 or less, kills any creature of CR 3
        to CR 5 on a failed saving throw, and inflicts 1d4 toxic
        damage per caster level on everything else (Fortitude for
        half). Only creatures who breathe are affected. The caster is
        immune. ";
	}

Wizard / Druid / Priest  Spell "Wall of Stone" : EA_TERRAFORM
  { SC_ARC|SC_EARTH; Base: SP_EASY; Cost: 10; Level: 5; lval: 10; qval: Q_DIR;
    xval: TERRA_OPEN; aval: AR_BARRIER; Flags: EF_DLONG;
    rval: $"dungeon wall"; pval: 2d6 + (LEVEL_MAX20); 
    Purpose: EP_FOIL_PURSUIT|EP_ESCAPE|EP_BARRIER|AIM_AT_ENEMY;
    Desc: "Conjures a solid stone wall, displacing any creatures in 
      its path and blocking further passage."; 
    On Event MSG_CAST
      "Solid stone appears out of nowhere!",
    EV_ELAPSED
      "The stone wall vanishes."; }

Wizard / Scroll Spell "Major Creation" : EA_GENERIC
  {
    SC_ARC; Base: SP_EASY; Cost: 15; Level: 5; Purpose: EP_PLAYER_ONLY;
    Desc: "This spell functions similarly to <9>minor creation<1>, but
      the restrictions on items which may be created are less severe.
      The mage can now conjure crafted metal, including swords, armour
      and other steelworks. She may also create exceptionally rare
      special materials like adamant, silver, gold or mithril -- but
      doing so increases the experience cost of the spell based on
      the specific rare material she chooses to conjure.";
    On Event EV_MAGIC_HIT {
      hObj it; int16 CraftDC, XPCost, mat;
      it = ETerm->AcquisitionPrompt(ACQ_MAJOR,0,0,0);
      if (it == NULL_OBJ)
        return DONE;
      XPCost = 25;
      if (it->isType(T_TRAP))
        {
          e.vRange = 1;
          if (!ETerm->EffectPrompt(e,Q_LOC,false,"Trap Location"))
            { it->Remove(true); return DONE; }
          it->PlaceAt(EActor->m,e.EXVal,e.EYVal);
        }
      else
        {
          if (it->isType(T_FOOD) || it->HasIFlag(IT_ROPE) ||
              it->iID == $"club" || it->iID == $"large club" ||
              it->iID == $"quarterstaff" || it->iID == $"torch")
            CraftDC = 0;
          else 
            CraftDC = 15;
          if (CraftDC && !EActor->SkillCheck(SK_CRAFT,CraftDC,true))
            {
              EActor->IPrint("You fail to shape the created matter properly!");
              if (EActor->isPlayer())
                EActor->LoseXP(25 /* + it->Cost() / 25 */);
              it->Remove(true);
              return DONE;
            }
          
          if (it->iID == $"small glass vial" && it->ieID != NULL_ID)
            if (!EActor->SkillCheck(SK_POISON_USE,PoisonDC(it->ieID)+5,true))
              {
                EActor->IPrint("You fail to synthesize the poison properly!");
                it->ieID = NULL_ID;
              }
          
          if (it->isMetallic() || it->Material() == MAT_WOOD)
            if (EActor->yn("Alter default material?",'n'))
              {
                ETerm->LOption(it->isMetallic() ? "Iron" : "Wood", 0);
                if (it->QualityOK(IQ_SILVER))
                  ETerm->LOption("Silver (+5 XP)",    IQ_SILVER);
                if (it->QualityOK(IQ_ADAMANT))
                  ETerm->LOption("Adamant (+100 XP)", IQ_ADAMANT);
                if (it->QualityOK(IQ_IRONWOOD))
                  ETerm->LOption("Ironwood (+50 XP)", IQ_IRONWOOD);
                if (it->QualityOK(IQ_MITHRIL))
                  ETerm->LOption("Mithril (+50 XP)",  IQ_MITHRIL);
                if (it->QualityOK(IQ_DARKWOOD))
                  ETerm->LOption("Darkwood (+75 XP)", IQ_DARKWOOD);
                mat = ETerm->LMenu(MENU_BORDER, "Choose a Material:");
                switch (mat)
                  {
                    case IQ_SILVER:    XPCost += 5;   break;
                    case IQ_ADAMANT:   XPCost += 100; break;
                    case IQ_IRONWOOD:  XPCost += 50;  break;
                    case IQ_MITHRIL:   XPCost += 50;  break;
                    case IQ_DARKWOOD:  XPCost += 75;  break;
                  }
                if (mat)
                  it->AddQuality(mat);
                
              }
          if (it->HasIFlag(IT_ROPE))
            it->SetQuantity(30);
          else if (it->HasIFlag(IT_BGROUP))
            it->SetQuantity(e.MM & MM_MAXIMIZE ? 100 : 10d10);
          else if (it->HasIFlag(IT_GROUP))
            it->SetQuantity(e.MM & MM_MAXIMIZE ? 24 : 2d12);
          
          if (e.MM & MM_EMPOWER)
            it->SetQuantity((it->GetQuantity()*3)/2);

          EActor->GainItem(it,false);
        }
      if (EActor->isPlayer())
        EActor->LoseXP(XPCost /* + it->Cost() / 25 */);
      return DONE;
      };
  }

Wizard Spell "Watery Double" : EA_GENERIC
  { SC_ARC|SC_WATER; Base: SP_HARD; Cost: 22; Level: 5; qval: Q_TAR;
    Purpose: EP_CURSE; Flags: EF_CANCEL, EF_LOSEMANA;
    Desc: "To cast this spell, a wizard must target an opponent
      standing in a water square, whose Challenge Rating is less
      than or equal to her caster level. A watery duplicate of the
      target rises up -- a creature identical to the target with the
      aqueous template applied. This creature is not considered
      summoned, but can be dispelled. It cannot be ordered, and
      fights relentlessly with only one goal in mind: to slay
      utterly the creature the spell targeted.\n
      __The watery double is immune to fear, mind-affecting
      spells and death magic. A given caster can sustain only one
      watery double at once, and the spell can be cancelled at any
      time.";
    On Event EV_ISTARGET {
      rID trID;
      if (EVictim->isCharacter())
        return CANNOT_CAST_IT;
      if (!EVictim->CanAddTemplate($"aqueous"))
        return CANNOT_CAST_IT;
      if (EVictim->onPlane() != PHASE_MATERIAL)
        return CANNOT_CAST_IT;
      trID = EMap->TerrainAt(EVictim->x, EVictim->y);
      if (!ResourceHasFlag(trID,TF_WATER))
        return CANNOT_CAST_IT;
      if (EActor->HasEffStati(EFF_FLAG1,$"Watery Double"))
        return CAN_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_EFFECT {
      if (EActor->HasEffStati(EFF_FLAG1,$"Watery Double")) {
          EActor->IPrint("You can only sustain one watery double at a time.");
          return ABORT;
        }
      EActor->GainPermStati(EFF_FLAG1,EVictim,SS_MISC,0,0,$"Watery Double");
      return NOTHING;
      },
    EV_MAGIC_HIT {
      hObj hDouble;
      hDouble = CreateMonster(EVictim->tmID);
      hDouble->CopyStati(EVictim,TEMPLATE);
      hDouble->AddTemplate($"aqueous");
      hDouble->TurnHostileTo(EVictim);
      hDouble->GainTempStati(EFF_FLAG2,EActor,e.vDuration,SS_ENCH,0,0,$"Watery Double");
      hDouble->PlaceAt(EMap,EVictim->x,EVictim->y);
      hDouble->Initialize();
      EVictim->IDPrint("A duplicate of you rises up, formed out of the water!",
        "A duplicate of the <hObj> rises up, formed out of the water!", EVictim);
      return DONE;
      },
    EV_REMOVED {
      /* Expiration or Dispelling */
      if (e.EParam == EFF_FLAG2)
        {
          EActor->IDPrint("","The <hObj> collapses back to inanimate water!", EVictim);
          EActor->Remove(true);
          return NOTHING;
        }
      /* Cancellation */
      EVictim->IDPrint("","The <hObj> collapses back to inanimate water!", EVictim);
      EVictim->Remove(true);
      return NOTHING;
      };
  }
      

/* --DIVINATION 5-- */



Wizard / Scroll Spell "Wizard Sight" : EA_INFLICT
  { SC_DIV; IS_A_BUFF(COST_5X); Level: 5; 
    xval: PERCEPTION; pval: 6; 
    Desc: "Allows the caster to perceive everything within 60 feet
            of himself, even through walls.";
          On Event MSG_STATINAME "Wizard Sight" / "WizSi"; }

Wizard Spell "Open the Third Eye" : EA_GENERIC
  { SC_DIV; SC_THA; Base: SP_VERY_HARD; Cost: 100; Level: 5; qval: 0;
    Purpose: EP_BUFF; Flags: EF_NOTBAD, EF_LOSEMANA;
    On Event EV_ISTARGET {
      if (EActor->CanAddTemplate($"three-eyed"))
         return SHOULD_CAST_IT;
      return CANNOT_CAST_IT; 
    },
    EV_MAGIC_STRIKE {
      EVictim->AddTemplate($"three-eyed");
      if (EActor->isCharacter())
        EActor->LoseXP(5000);
      return DONE;
    } ;
    Desc: "Casting this irrevocable spell opens a mystical third eye in
    the center of the caster's forehead. 
    The caster gains a +6 racial bonus to Spot and Search checks as
    well as 60 feet of infravision. The caster also gains a gaze attack
    that confuses victims for 1d8 rounds (Fortitude save, DC 14).\n
    __Casting this spell costs the caster 5000 XP."; 
  }

Wizard / Scroll Spell "Power Word: Stop" : EA_INFLICT
  { SC_DIV; Base: SP_VERY_HARD; Cost: 30; Level: 5; qval: Q_TAR;
    Purpose: EP_CURSE; xval: TRAP_EVENT; yval: PRE(EV_MOVE);
    Flags: EF_SOUND, EF_BLIND_PROMPT; sval: NOSAVE;
    Desc: "Power words are ancient pieces of the sorcerous truespeak
      from the dawn times of the world. They are inherently unknowable,
      and creatures who hear one spoken irresistably forget the exact
      structure of its syllables immediately after hearing it. They
      can not be recorded, transcribed or preverved by any mortal
      magic; however, certain powerful divinations can grant a skilled
      mage knowledge of a Power Word just long enough to speak it once,
      allowing its terrible effect to take hold on the world.\n
      __One of the earliest and simplest power words, 'Stop' freezes a
      single target creature in place, preventing it from walking,
      running, jumping or otherwise moving naturally. The effect does
      not prevent teleportation, nor does it stop the creature from
      being knocked prone or bull rushed. The creature is not paralyzed,
      simply fixed in place, and can still make melee and ranged attacks.
      Free action negates this power word, but like all power words there
      is no saving throw against its effects.";
    On Event META(PRE(EV_MOVE)) {
      EActor->IPrint("You find yourself unable to move!");
      return ABORT;
      },
    EV_ISTARGET {
      if (EVictim->ResistLevel(AD_PLYS) == -1)
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    MSG_CAST
      "You point at the <EVictim> and speak an ineffable word!" /
      "The <EActor> points at you and speaks an ineffable word!" /
      "The <EActor> points at the <EVictim> and speaks an ineffable word!";
  }
  
/* --ENCHANTMENT 5-- */

Wizard Spell "Dominate Person" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 10; Level: 5; sval: WILL;
    Purpose: EP_CURSE (VS_MENTAL); qval: Q_TAR;
    xval: CHARMED; yval: CH_DOMINATE; tval: MA_PERSON;
    Flags: EF_DLONG, EF_MENTAL, EF_LIM_MTYPE, EF_COMPULSION; 
    Desc: "Gives you telepathic control over a single intelligent,
      medium-sized humanoid."; 
	On Event EV_MAGIC_HIT
	  "You sieze control of the <EVictim>'s mind!" / 
	  "The <EActor> siezes control of your mind!" / "",
	EV_ELAPSED
	  "You shake off the effect of the domination." /
	  "The <EActor> shakes off the effect of the domination.";
  }

Wizard / Scroll / Priest Spell "Hold Monster" : EA_INFLICT
  { SC_ENC; Level: 5; Cost: 10; Base: SP_MEDIUM; qval: Q_TAR;
    xval: PARALYSIS; sval: FORT; 
    Purpose: EP_CURSE (VS_MENTAL); Flags: EF_MENTAL;
    Desc: "Paralyzes one chosen creature, provided they fail a Fortitude
      save.";
  }

Wizard / Priest / Scroll Spell "Lower Resistance" : EA_INFLICT
  {
    SC_ENC; SC_WEA; Base: SP_EASY; Cost: 9; Level: 5; qval: Q_LOC;
    aval: AR_GLOBE; lval: 6; cval: SKYBLUE; sval: NOSAVE;
    xval: ADJUST_DMG; yval: A_MR; Purpose: EP_CURSE;
    Flags: EF_ALLIES_IMMUNE;
    Desc: "This dwenomer strips outsiders, creatures of the Underdark
      and powerful supernatural horrors like hags of their inherent
      resistance to magic. The spell must first penetrate that resistance
      to take effect, but once it does no saving throw applies and the
      creature's Magic Resistance is halved; this is a damage penalty.
      The spell is targeted on a point, affecting all creatures within
      60 feet of that point, but is selective and excludes the caster
      and her allies.";
    On Event EV_ISTARGET {
      if (EVictim->GetAttr(A_MR) == 0)
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      },
    EV_CALC_EFFECT, PRE(EV_MAGIC_HIT) {
      /* -50 is a LevelAdjust constant! D'oh! So we need to set this
          manually for it to work! */
      if (e.MM & MM_EMPOWER)
        e.vDmg = -75;
      else
        e.vDmg = -50;
      return NOTHING;
      },
    EV_MAGIC_HIT
      "You feel threatened!" /
      "The <EVictim>'s resistance is lowered!";
  }

/* --EVOCATION 5-- */

Wizard  Spell "Fire Lotus" : EA_BLAST
  { SC_EVO|SC_FIRE; Base: SP_EASY; Cost: 10; Level: 5; sval: REF partial;
    xval: AD_FIRE; pval: (LEVEL_SCALED)d4; Purpose: EP_ATTACK;
    aval: AR_GLOBE; cval: COL_FIRE; lval: 6;
    Flags: EF_CASTER_IMMUNE; 
    Desc: "A fire lotus is an explosive burst of flame similar to a fireball,
    but centered on the caster. All creatures (except the caster!) within
    60 feet (6 squares) of the caster take 1d4 points of fire damage per
    caster level (scaled after 9th). A Reflex save halves the damage."; 
  }

Wizard / Scroll Spell "Cone of Cold" : EA_BLAST
  { SC_EVO|SC_COLD; Base: SP_MEDIUM; Cost: 10; Level: 5; aval: AR_BEAM; qval: Q_DIR;
    xval: AD_COLD; lval: 7; sval: REF partial; pval: (LEVEL_SCALED)d8;
    Purpose: EP_ATTACK (VS_COLD); cval: AZURE; 
		On Event MSG_BLASTNAME "cone of cold"; Flags: EF_COMMON;
    Desc: "Projects a cone of numbing frost out in a direction you
		  select, inflicting 1d8 points of damage per caster level, scaled
			after 9th level."; }

/* Right now there's so many problems with this spell.
   I need to streamline the code in Player.Cpp before
   I want to consider fixing many of them, though, or
   it's just going to be a mess of special conditions. */
Wizard Spell "Telekinesis" : EA_GRANT
  { SC_EVO|SC_FORCE; Base: SP_EASY; Cost: 10; Level: 5; Purpose: EP_BUFF;
    Desc: "__This spell can be enacted in one of two
      forms, as chosen when the spell is cast:\n
      __<9>Violent Thrust:<1> This form of Telekinesis
      targets a single creature of your choice,
      causing them to be knocked down and back
      up to one square per caster level and to
      suffer 1d4 points of blunt damage for
      every caster level, scaled after 10th.\n
      __<9>Sustained Force:<1> This version of the
      spell allows you to exert force at a range
      of 10 feet per caster level. You can use
      the combat maneuvers Grapple, Punch, Trip
      and Bull Rush in this manner, with your
      Wisdom standing in for Strength and
      Intelligence for Dexterity. You can also
      open or kick doors, pick up items or try 
      to disarm traps at range.";
    xval: TELEKINETIC; pval: LEVEL_1PER1;
    Flags: EF_SHOWNAME;
    Lists:
      * SUBEFFECTS $"telekinesis;thrust";
    On Event EV_EFFECT {
      if (EActor->ChoicePrompt("Violent thrust or sustained force?",
                   "vs",'s', PURPLE, MAGENTA) == 'v')
        {
          if (!ETerm->EffectPrompt(e,Q_TAR,false,"Target:"))
            return ABORT;
          return RedirectEff(e,$"Telekinesis;thrust");
        }
      return NOTHING;
      },
    MSG_STATINAME "Telekinesis" / "T-K";
  }
  
Effect "Telekinesis;thrust" : EA_BLAST
  { xval: AD_BLUNT; pval: (LEVEL_SCALED)d4; Purpose: EP_ATTACK;
    aval: AR_BOLT; cval: WHITE; }
and EA_BLAST
  { xval: AD_KNOC; pval: LEVEL_SCALED; }


/* --ILLUSION 5-- */

Wizard Spell "Advanced Illusion" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 12; Level: 5; 
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_SPECTRAL|IL_IMPROVED|IL_ADVANCED; 
    rval: $"generic summons";
    Desc: "An advanced illusion is a complex and responsive dwenomer
      that includes all the properties of an <9>improved spectral force<1>,
      as well as a powerful enhancement: the illusion can spawn secondary
      illusionary effects that are consequences of its actions or existance.
      This means that an illusionary monster can make use of that monster's
      special attacks or equipment typical to a monster of its type -- an
      illusionary dragon can produce an illusionary blast of fire, and an
      illusionary kobold can fire illusionary crossbow bolts. The illusion
      is still unreal and can't affect inanimate matter in any way, but it
      can simulate those effects remarkably -- an illusionary basilisk's
      gaze would cause people to become paralyzed for a period, for example,
      believing they had been petrified.\n
      __This facility also allows the illusion takes active and
      intelligent measures to preserve its own believability:
      the shadows cast by an illusionary fountain change position
      as new light sources manifest, an illusionary wall creates
      illusionary dust as it is hacked apart, and even the illusion
      of the scent of cooler air wafting in through a created hole
      into the room beyond. Illusions that inflict damage create
      illusionary blood and bruises rather than merely psychosomatic
      shock. As a result of these improvements, advanced illusions are not
      subject to disbelief checks when they appear out of nowhere, someone
      passes through them or ignores their attacks, they cause a victim to
      fall unconscious or so forth. The magic creates secondary illusions
      to cover over the things which might cause disbelief checks -- an
      adavanced illusion appearing out of nowhere might seem to jump out
      of a previously unnoticed illusionary skylight in a shadowy area of
      the ceiling, for example."; 
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      };
    Flags: EF_DLONG, EF_SHOWNAME;
    Lists:
      * SPELL_LIST $"magic missile" $"force bolt" $"burning hands"
                   $"ice dagger" $"sandblast" $"sunscorch"
                   $"scorcher" $"electric loop" $"fireball"
                   $"lightning bolt" $"thunderlance" $"ice storm"
                   $"force missiles" $"shout" $"cone of cold"
                   $"fire lotus" $"chain lightning";
  }


Wizard / Sorcerer Spell "Colour Burst" : EA_GENERIC
  {
    SC_ILL|SC_LIGHT; Base: SP_MEDIUM; Cost: 9; Level: 5; sval: REF;
    Purpose: EP_ATTACK (VS_GENERAL); lval: 8;
    cval: COL_RAINBOW; aval: AR_BALL; 
	Flags: EF_CASTER_IMMUNE, EF_ALLIES_IMMUNE;
    On Event EV_ISTARGET {
  	  if (!ETarget->isCreature())
	      return CANNOT_CAST_IT;
      if (EVictim->ChallengeRating() > (e.vCasterLev + 4))
        return CANNOT_CAST_IT;
      if (EVictim->HasMFlag(M_BLIND))
        return CANNOT_CAST_IT;
      if (EVictim->HasMFlag(M_MINDLESS))
        return CANNOT_CAST_IT;
	    return SHOULD_CAST_IT;
      },
  	EV_MAGIC_STRIKE {
      TPrint(e,"Your spray of colours strikes an <EVictim>.",
               "The <EActor>'s spray of colours strikes you.",
               "The <EActor>'s spray of colours strikes an <EVictim>.");
	    return NOTHING;
	    },
    EV_MAGIC_HIT {
      if (EVictim->ChallengeRating() < (e.vCasterLev / 2)) {
        EVictim->GainTempStati(STUNNED, NULL, 1d6+1, SS_ENCH, -1, -1);
        EVictim->GainTempStati(BLIND, NULL, 1d6+1, SS_ENCH, -1, -1);
		    EVictim->StatiMessage(STUNNED);
    		EVictim->StatiMessage(BLIND);
        }
      else if (EVictim->ChallengeRating() < e.vCasterLev) {      
        EVictim->GainTempStati(STUNNED, NULL, 2, SS_ENCH, -1, -1);
        EVictim->GainTempStati(BLIND, NULL, 1d6+1, SS_ENCH, -1, -1);
		    EVictim->StatiMessage(STUNNED);
    		EVictim->StatiMessage(BLIND);
        }
      else {
        EVictim->GainTempStati(STUNNED, NULL, 2, SS_ENCH, -1, -1);
		    EVictim->StatiMessage(STUNNED);
		    }
      return DONE;
      };
    Desc: "Projects a burst of multicoloured light that may blind or stun
      creatures it strikes briefly, dependant on their CR in contrast
      to the spell's caster level. The spell is selective -- the caster
      and her allies are immune, but neutral creatures are not.";

  }

/* The extremely high mana cost represents the fact that this is a
   VERY efficiant spell -- it can hit a number of different creatures
   on the level at the same time, weakening them before a fight even
   begins. IMO, it's a worthy investment. */
Wizard Spell "Nightmare;spell" : EA_BLAST
  { SC_ILL; Level: 5; Cost: 45; Base: SP_HARD;
    Desc: "Casting this spell sends a horrific nightmare to all the 
      sleeping creatures on the current level within [caster level x 
      50] feet, even outside your sight. The creatures suffer 2d6 
      points of fatigue loss, 1d8 damage to Wisdom and Charisma and 
      1d6 points of psychic damage per odd caster level.\n
      __(Remember that spells have verbal components, and casting near
      sleeping creatures will awaken them before they can be affected -- 
      but Nightmare has a greater range than the 120 feet away from which
      spellcasting can be heard.)";
    aval: AR_GLOBE; cval: AZURE; Flags: EF_DISTANT;
    On Event EV_CALC_EFFECT {
      e.vRange = 5 * e.vCasterLev;
      return NOTHING;
      },
    PRE(EV_MAGIC_XY) {
      return DONE;
      },
    EV_ISTARGET {
      if (!ETarget->isCreature())
        return CANNOT_CAST_IT;
      if (EVictim->HasStati(ASLEEP))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      },
    EV_MAGIC_HIT {
      if (e.efNum == 0)
        {
          EVictim->LoseFatigue(2d6,false);
          EActor->GainTempStati(TRACKING,EVictim,-2,SS_MISC,
                                0,e.vRange,$"Nightmare;spell");
          EVictim->Awaken();
        }
      return NOTHING;
      },
    MSG_CAST 
      "You project a horrific nightmare..." / "";
    xval: AD_PSYC; pval: (LEVEL_EVERY2)d6;
  }
and EA_BLAST
  { xval: AD_DAWI; pval: 1d8; }
and EA_BLAST
  { xval: AD_DACH; pval: 1d8; }
  
Wizard Spell "Dream" : EA_INFLICT
  { SC_ILL; SC_DIV; SC_ENC; Level: 5; Cost: 20;  Base: SP_HARD;
    Desc: "Casting this spell sends a beguiling and seductive dream 
      to all sleeping creatures on the current level within [caster 
      level x 50] feet, even those outside your sight, leading them to
      see you as a friend and ally -- failing a Will save causes the 
      affected creature to be charmed. Regardless of whether you manage
      to ensnare a creature with this spell, you can sense their presence
      for the remainder of the day in which it was cast.\n
      __(Remember that spells have verbal components, and casting near
      sleeping creatures will awaken them before they can be affected -- 
      but Dream has a greater range than the 120 feet away from which
      spellcasting can be heard.)";
    aval: AR_GLOBE; cval: AZURE; sval: WILL + 10; 
    Flags: EF_DISTANT, EF_PERMANANT, EF_NOTBAD;
    On Event EV_CALC_EFFECT {
      e.vRange = 5 * e.vCasterLev;
      return NOTHING;
      },
    PRE(EV_MAGIC_XY) {
      return DONE;
      },
    EV_ISTARGET {
      if (!ETarget->isCreature())
        return CANNOT_CAST_IT;
      if (EVictim->HasStati(ASLEEP))
        return SHOULD_CAST_IT;
      return CANNOT_CAST_IT;
      },
    PRE(EV_MAGIC_HIT) {
      EActor->GainTempStati(TRACKING,EVictim,-2,SS_MISC,
                              0,e.vRange,$"Dream");
      if (EVictim->SavingThrow(WILL,e.saveDC,SA_ILLUS|SA_MAGIC|SA_SPELLS|SA_ENCH))
        { e.Resist = true; return DONE; }
      return NOTHING;
      },
    MSG_CAST 
      "You weave a beguiling dream..." / "";
    xval: CHARMED; yval: CH_CHARM;
  }

Wizard Spell "Misdirection" : EA_INFLICT
  { SC_ILL; Level: 5; IS_A_BUFF(COST_5); Purpose: EP_BUFF;
    Desc: "This clever deception weaves an illusion over a large
      area, causing hostile enemies to mistake other characters 
      for you, directing their ranged attacks against others -- 
      potentially including their teammates -- believing them 
      to be you. The delusion affects all enemies within a 90 
      foot radius field that moves with you, but if the only 
      creature in the field perceived by a given enemy is you, 
      that enemy will target you normally.\n
      __Intelligent enemies receive a chance to disbelieve this
      spell when they hit the wrong target; this chance is 5% per
      point of Intelligence about 12.";
    aval: AR_MFIELD; cval: EMERALD; lval: 9; rval: FI_MODIFIER;
    xval: TRAP_EVENT; yval: EV_RATTACK;
    hObj hCaster, hTarg; int16 x, y;
    On Event META(EV_RATTACK) {
      hCaster = EActor->GetEffStatiObj(TRAP_EVENT,$"Misdirection");
      if (hCaster == NULL_OBJ)
        return NOTHING;
      
      if (!EVictim->isFriendlyTo(hCaster))
        return NOTHING;
        
      if (EActor->HasEffStati(EFF_FLAG1,$"Misdirection"))
        return NOTHING;
        
      if (EActor->HasStati(TRUE_SIGHT))
        return NOTHING;
      
      ClearCandidates();
      for (x = EActor->x - 10; x != EActor->x + 10; x++)
        for (y = EActor->y - 10; y != EActor->y + 10; y++)
          for (hTarg=EMap->FCreatureAt(x,y);hTarg;hTarg=EMap->NCreatureAt(x,y))
            if (EMap->LineOfFire(EActor->x,EActor->y,x,y,EActor))
              if (!hTarg->isFriendlyTo(hCaster))
                AddCandidate((int32)hTarg);
      
      /* No one to redirect attack at */
      if (!nCandidates())
        return NOTHING;
        
      hTarg = (hObj) GetCandidate((1d(nCandidates()))-1);
      
      SetEVictim(e,hTarg);
      
      EMap->SetQueue(QUEUE_DAMAGE_MSG);
      
      if (hCaster->Perceives(EActor))
        hCaster->IPrint("The <hObj>'s attack is misdirected!",EActor);
        
      if (1d100 <= (EActor->GetAttr(A_INT)-12)*5)
        {
          hCaster->IPrint("The <hObj> disbelieves your misdirection!",EActor);
          EActor->IPrint("You disbelieve the misdirection effect!");
          EActor->GainTempStati(EFF_FLAG1,hCaster,-2,SS_MISC,0,0,$"Misdirection");
        }
      
      EMap->UnsetQueue(QUEUE_DAMAGE_MSG);
      
      return NOTHING;
      };
  }

Wizard Spell "Demi-Shadow Monsters" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 10; Level: 5; 
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_SPECTRAL|IL_SHADE40|IL_SHADE10; 
    rval: $"generic summons";
    Desc: "This spell functions identically to <9>shadow monsters<1>,
      except that the created creatures are 50~ real, and thus inflict
      50~ if their normal damage on disbelieving characters and can suffer
      up to 50~ of their total hit points from disbelievers before being
      dispelled."; 
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      };
    Flags: EF_DLONG, EF_SHOWNAME, EF_IMONSTERS;
  }


/* --NECROMANCY 5-- */

#if 0

Wizard Spell "Vampirism" : EA_GENERIC
  { SC_NEC; SC_THA; Base: SP_VERY_HARD; Cost: 100; Level: 5; qval: 0;
    Purpose: EP_BUFF; Flags: EF_DLONG, EF_NOTBAD, EF_EVIL;
    On Event EV_ISTARGET {
      if (EActor->CanAddTemplate($"vampire"))
         return SHOULD_CAST_IT;
      return CANNOT_CAST_IT; 
    },
    EV_MAGIC_STRIKE {
      EVictim->AddTemplate($"vampire");
    } ;
    Desc: "Casting this irrevocable spell turns the caster into an undead
    vampire. The caster retains all thoughts, willpower and motivations. 
    The caster gains +9 strength, +6 dexterity, +3 intelligence and wisdom,
    and +6 charisma. The caster also gains four hit dice, a +5 bonus to
    hit, a +6 bonus to defense, and casts spells as if two levels higher. 
    The caster gains a +10 natural armour bonus. The caster gains a
    vampire's draining bite, fearsome gaze, gaseous form, regeneration (5
    hit points per round), 120 foot infravision, and racial skill bonuses
    to Bluff, Hide, Listen, Move Silently, Search and Spot (+8 to each) as
    well as four levels of turn resistance. All of these bonuses are
    template bonuses. The caster also gains all of the traditional undead
    weaknesses. The lure of renewing, enduring unlife is very strong, but
    many a skilled necromancer has met his ultimate doom after casting this
    spell."; 
  }
#endif

Wizard Spell "Skeletal Spikes" : EA_GENERIC
  { SC_NEC; IS_A_BUFF(COST_5); qval: Q_TAR; Level: 5;
    On Event EV_ISTARGET {
      if (EVictim->CanAddTemplate($"spiked;template"))
         return SHOULD_CAST_IT;
      return CANNOT_CAST_IT; 
    },
    EV_MAGIC_STRIKE {
      if (EVictim->CanAddTemplate($"spiked;template")) {
        EVictim->GainTempStati(TEMPLATE,EActor,e.vDuration,SS_ENCH,
            0, 1, $"spiked;template", 
            e.vCasterLev + (e.MM & MM_FORTIFY ? 5:0));
      } else return ABORT; 
    } ;
    Desc: "This spell causes the target's bones to warp and writhe until
    large, wickedly sharp spikes burst forth from under its skin. These
    bony spikes grant three additional goring attacks, each one of which
    deals 1d6 piercing damage, as well as the multiattack feat. Only 
    undead and constructs can be targeted by this spell.";  
  }

Wizard / Priest Spell "Lesser Symbol" : EA_GENERIC
  {
    SC_NEC; SC_ENC; Cost: 10; Level: 5; Base: SP_HARD;
    Desc: "This spell creates an ornate rune imbued with magical power,
      a kind of mystic trap that is triggered whenever a character comes
      close enough to see it by stepping onto the square which contains
      it. A symbol trap is very difficult to detect and disarm (DC 30).
      When the spell is cast, the caster can determine what effect
      the symbol will have from the following options:\n
      __<9>Symbol of Sleep:<1> All creatures with Challenge Rating less 
      than or equal to 10 within 60 feet (6 squares)) fall asleep for 
      3d6x10 minutes. The caster is not immune.\n
      __<9>Symbol of Pain:<1> When the trap is triggered, all creatures 
      within 60 feet (6 squares)) suffers wracking pain that imposes a 
      -4 circumstance penalty on attack, defense, saving throw, spell 
      success, damage and attack speed. These effects last for one hour. 
      The caster is not immune.";
    On Event PRE(EV_EFFECT) {
      char ch;
      ch = EActor->ChoicePrompt("Sleep or Pain?","sp",'s'); 
      switch (ch)
        {
          case 's':
            RedirectEff(e,$"symbol of sleep",EV_EFFECT);
            return DONE;
          case 'p':
            RedirectEff(e,$"symbol of pain",EV_EFFECT);
            return DONE;
        }
      return NOTHING;
      };
  }

Effect "Symbol of Pain" : EA_CREATION
{ SC_NEC; Base: SP_TRIVIAL; Cost: 10; Level: 5; qval: Q_LOC; 
  xval: CREA_TRAP | CREA_TEMP | CREA_XY; rval: $"symbol of pain;trap";
  Purpose: EP_CURSE | EP_FOIL_PURSUIT | AIM_AT_ENEMY;
} 

Effect "Symbol of Sleep" : EA_CREATION
{ SC_ENC; Base: SP_TRIVIAL; Cost: 10; Level: 5; qval: Q_LOC; 
  xval: CREA_TRAP | CREA_TEMP | CREA_XY; rval: $"symbol of sleep;trap";
  Purpose: EP_CURSE | EP_FOIL_PURSUIT | AIM_AT_ENEMY;
} 

Wizard Spell "Eldritch Bolt" : EA_BLAST
  { SC_NEC; Base: SP_MEDIUM; Cost: 10; Level: 5; qval: Q_DIR | Q_TAR; aval: AR_BOLT;
    xval: AD_NECR; pval: (LEVEL_SCALED)d8; sval: FORT; tval: MA_LIVING;
    cval: PURPLE; Purpose: EP_ATTACK;	
    Flags: EF_ATTACK, EF_PARTIAL, EF_DEATH, EF_LIM_MTYPE;
    Desc: "Projects a bolt of negative energy that, with a successful
    ranged attack roll, inflicts 1d8 points of necromantic damage per
    caster level (scaled beginning at 10th level), allowing a Fortitude
    save for half damage.	A target who fails their save also gains a
    negative level."; 
  } and EA_INFLICT
	{ xval: ADJUST_DMG; yval: A_AID; pval: -1;
	  aval: AR_BOLT; sval: FORT; }			  

/* --THAUMATURGY 5-- */

Wizard / Scroll Spell "Force Shapechange" : EA_DRAIN
{ SC_THA; Base: SP_HARD; Cost: 9; Level: 5; aval: AR_BALL; lval: 8;
  cval: MAGENTA; Flags: EF_DLONG, EF_CASTER_IMMUNE;	
  xval: AD_NORM; pval: 3d12;
  Purpose: EP_ATTACK | EP_CURSE; 
  On Event EV_MAGIC_HIT {
    EVictim->GainTempStati(IMMUNITY,NULL,e.vDuration,SS_MISC,AD_POLY);
    if (EVictim->HasStati(POLYMORPH)) {
      EVictim->RemoveStati(POLYMORPH,EV_REMOVED);
      return NOTHING;
    }
    else {
      e.Immune = true;
      return DONE;
    }
  };
    Desc: "Forces shapechanged and polymorphed creatures back to their
          natural form and prevents them from changing form for a while,
        inflicting 3d12 damage in the process.";
  }
	
/* --WEAVECRAFT 5-- */

Wizard Spell "Distance Distortion" : EA_GRANT
  { SC_WEA; Base: SP_MEDIUM; Cost: 16; Level: 5; qval: Q_LOC;
    Purpose: EP_CURSE|AIM_AT_SELF; aval: AR_FIELD; lval: 6; cval: BLUE;
    rval: FI_MODIFIER; sval: NOSAVE; Flags: EF_NOTBAD, EF_PERSISTANT,
                                            EF_LOSEMANA;
    xval: ADJUST_CIRC; yval: A_MOV; pval: +20; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_MOV; pval: -10; }
and EA_INFLICT
  { xval: NAUSEA;
    Desc: "Casting this spell produces a globe 60 feet in radius,
      targeted on a point of the caster's choice, where distance
      and geometry simply do not work in normal Euclidean ways,
      instead melting and flowing in a perverse and disturbing
      manner to make distances shorter for the caster's allies
      and the reverse for her enemies. Creatures within the spell's
      area of effect may suffer one or more of the following 
      effects:\n
      __<7>*<1> The caster and her allies find that their movement
      rates are doubled within the area.\n
      __<7>*<1> Enemies of the caster find that their movement rate
      is halved as long as they are in the area.\n
      __<7>*<1> Any creatures of Challenge Rating 4 or lower are
      automatically nauseated while inside the area; this element
      of the effect does not discriminate between friend and
      enemies.";
    On Event PRE(EV_MAGIC_HIT) {
      switch (e.efNum)
        {
          case 0:
            return EVictim->isFriendlyTo(EActor) ? NOTHING : DONE;
          case 1:
            return EVictim->isHostileTo(EActor)  ? NOTHING : DONE;
          case 2:
            return EVictim->ChallengeRating() <= 4 ? NOTHING : DONE;
        }
      return ERROR;
      },
    MSG_CAST
      "Distance and geometry warp and flow like melting butter!",
    EV_FIELDON
      "You enter the globe of sundered geometry!",
    EV_FIELDOFF
      "You leave the globe of sundered geometry.";
  }

Wizard / Scroll Spell "Monster Summoning V" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 10; Level: 5; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"summoned monster"; pval: 5; 
    Desc: "Summons a living creature of CR 5 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(5) }

Wizard / Scroll Spell "Teleport" : EA_TRAVEL
  { SC_WEA; Base: SP_MEDIUM; Cost: 10; Level: 5; qval: 0;
	  xval: TRAVEL_TO_TARG;	Purpose: EP_ESCAPE;	pval: 127;
		Flags: EF_DEFENSIVE;
    Desc: "Teleports you up to 120 squares away in the general direction
    you specify."; 
    On Event EV_EFFECT {
		  if (EActor->isPlayer()) {
			  if (e.MM & MM_CONTROL) {
				  e.vRange = 127;
				  if (!ETerm->EffectPrompt(e,Q_LOC,false,"Teleport Location"))
					  return ABORT;
					}
				else {
				  if (!ETerm->EffectPrompt(e,Q_DIR,false,"Teleport Direction"))
					  return ABORT;
					e.isDir = false;
					e.isLoc = true;
					
					if (DirX(e.EDir) == 1)
					  e.EXVal = (EActor->x + EMap->SizeX()) / 2;
					else if (DirX(e.EDir) == -1)
					  e.EXVal = EActor->x / 2;
					else
					  e.EXVal = EActor->x;

					if (DirY(e.EDir) == 1)
					  e.EYVal = (EActor->y + EMap->SizeY()) / 2;
					else if (DirY(e.EDir) == -1)
					  e.EYVal = EActor->y / 2;
					else
					  e.EYVal = EActor->y;
					}
				}
			if (e.EDir == CENTER || !EActor->isPlayer()) {
			  e.isLoc = true;
				do {
				  e.EXVal	= random(EMap->SizeX() - 4)+2;
				  e.EYVal	= random(EMap->SizeY() - 4)+2; 
					}
				while ( EMap->SolidAt(e.EXVal,e.EYVal) ||
				        ((bool)EMap->FTrapAt(e.EXVal,e.EYVal)) );	
				}
			return NOTHING;
			};
	}
	
Wizard Spell "Steal Magic" : EA_GENERIC
  {
    SC_WEA; Level: 5; Cost: 7; Base: SP_EASY;
    aval: AR_TOUCH; lval: LEVEL_1PER3; sval: WILL;
    Desc: "Casting this spell grants you a touch attack which allows
      you to steal the innate magic of supernatural creatures. Only
      those abilities which mimic spells (arcane, divine or otherwise)
      can be stolen in this manner. When you touch a creature with
      innate spell-like abilities, they must succeed in a Will saving
      throw or they lose access to one of their spell-likes for the
      remainder of the day, and you gain same.\n
      __Casting this spell gives you one touch per three caster levels,
      so you have the potential to steal several different spells from
      one or more creatures while the effect is active. This spell
      itself only lasts a short time, but any spells stolen remain
      usable by you all day.";
    On Event EV_MAGIC_HIT {
      bool found; int16 i; rID spID;
      
      found = false;
      ClearCandidates();
      for(i=0;i!=theGame->LastSpell();i++)
        {
          spID = theGame->SpellID(i);
          if (EVictim->HasInnateSpell(spID))
            if (!ResourceHasFlag(spID,EF_SPECABIL))
              if (!EVictim->HasEffStati(EFF_FLAG1,
                    $"Steal Magic",i))
                {
                  AddCandidate((int32)spID);
                  found = true;
                }
        }
      if (!found)
        {
          EActor->IPrint("That creature has no <hText>innate magic to steal.",
            EVictim->HasEffStati(EFF_FLAG1,$"Steal Magic") ? "more " : "");
          return DONE;
        }
      spID = (rID) RandCandidate();
      
      if (!EVictim->HasEffStati(TRAP_EVENT,$"Steal Magic"))
        EVictim->GainTempStati(TRAP_EVENT,NULL,-2,SS_MISC, PRE(EV_INVOKE),
                                0, $"Steal Magic"); 
      EVictim->GainTempStati(EFF_FLAG1,NULL,-2,SS_MISC,
        theGame->SpellNum(spID),0,$"Steal Magic");
      EActor->GainTempStati(INNATE_SPELL,NULL,-2,SS_MISC,0,0,spID);
      EActor->IPrint("You steal the <hObj>'s <9><Res><7> power!", EVictim, spID);
      EVictim->IPrint("The <hObj> steals your <9><Res><7> power!", EActor, spID);
      return DONE;
      },
    META(PRE(EV_INVOKE)) {
      if (EActor->HasEffStati(EFF_FLAG1,$"Steal Magic",
                     theGame->SpellNum(e.eID)))
        {
          if (EActor->isPlayer())
            {
              APrint(e,"Nothing happens.");
              EActor->Timeout += 20;
              return DONE;
            }
          return ABORT;
        }
      return NOTHING;
      },
    EV_ISTARGET {
      if ((EVictim->isMType(MA_OUTSIDER) &&
             !EVictim->isMType(MA_ELEMENTALKIN) ) ||
          EVictim->isMType(MA_DRAGON) ||
          EVictim->isMType(MA_DROW) ||
          EVictim->isMType(MA_ILLITHID))
        return SHOULD_CAST_IT;
      return CAN_CAST_IT;
      },
    MSG_CAST
      "Your hands glow with a dissonant white light." /
      "The <EActor>'s hands glow with a dissonant white light.";
  }

/* ============================================================= 
 *                   Level Six ARCANE Spells
 * =============================================================
 * Abj: Antimagic Field, Banishment, Globe of Invuln., Ruby Ray
 * Arc: Acid Fog, Disintigrate, Sand Storm, Sign of Sealing 
 * Div: Analyze Dwenomer, True Seeing, Legend Lore, Reveal Depths
 * Enc: Eyebite, Mass Charm, 
 * Evo: Chain Lightning, Forceful Hand, 
 * Ill: Shades, Mislead, Demishadow Evocation, Shadow Conjuration 
 * Nec: Control Undead, Ghostgrail, Life Drain, 
 * Tha: Flesh to Stone, Stone to Flesh, Fiendform, Primal Trans., Mass Haste
 * Wea: Contingency, Monster Summoning VI, Lesser Planar Binding, Spelltrap
 * =============================================================

Flesh to Stone
  Instantly petrifies a target creature of your choice, turning
it into a statue of the creature in question.

Stone to Flesh
  Turns a petrified statue back into the creature it once was,
any other statue into a permanant companion (if your party hit
dice can accomidate such) or other stone into a mess of warped
living tissue.

*/

Wizard / Scroll Spell "Chain Lightning" : EA_BLAST
  { 
    SC_EVO; Base: SP_EASY; Cost: 18; Level: 6; 
    Desc: "Casting this spell causes a stroke of lightning to arc
      from the caster's hand to an enemy of her choice, inflicting
      1d6 points of damage per caster level with no scaling. After
      striking the first foe, the lightning arcs to the next
      creature hostile to the caster nearest to the original target,
      and from there to the next, and so forth. The lightning can
      arc up to one time for every four caster levels, so at 12th
      level it hits a minimum of four targets -- the original and
      three arcs. Every arc decreases the damage by 2d6.\n
      __Note that the lightning can concievably hit a creature more 
      than once in the process of arcing from creature to creature
      (but it only *arcs to* any given creature once); furthermore,
      it can strike creatures the player does not perceive, for
      example turning 90 degrees to strike a hiding creature further 
      down an unexplored hallway."; 
    aval: AR_CHAIN; cval: YELLOW; xval: AD_ELEC;
    pval: (LEVEL_1PER1)d6; qval: Q_TAR; sval: REF;
    Flags: EF_PARTIAL;
    On Event EV_CALC_EFFECT 
      {
        /* Number of Arcs */
        e.vChainMax = e.vCasterLev / 3;
        
        /* Damage Decrease per Arc */
        e.vCasterLev -= e.vChainCount*2;
        
        return NOTHING;
      };
  }
  
/* This spell isn't as unfair or arbitrary as it looks at
   first; there's lots of possible defenses for a prepared
   player:
   * Fortification Armour
   * Spell Immunity
   * Spellblade (disintegrate)
   * Stoneskin
   * Diamond Body
   * etc.
     I HATE-HATE-HATE the 3.5 version of this where it's
   just another damaging spell. 
   
   Enhancements:
   * Disintegrating water should only work on a single
     isolated square; otherwise more will rush in to fill
     the area.
   * Disintegrating down stairs should leave a hole.
   * Disintegrating currently leaves a corpse (d'oh!)
   * 
   
   
   */
  
Wizard / Scroll Spell "Disintegrate" : EA_BLAST
  { SC_ARC; Base: SP_MEDIUM; Cost: 22; Level: 6; 
    Purpose: EP_ATTACK; qval: Q_TAR|Q_INV|Q_LOC;
    sval: FORT; aval: AR_RAY; cval: GREEN; pval: 20d6; 
    xval: AD_NORM; Flags: EF_AFFECTS_ITEMS, EF_NO_BONUS_DMG;
    Desc: "This terrifying spell creates a wan green ray that
      utterly destroys anything it touches, erasing up to 10 
      cubic feet of matter and leaving behind only a tiny
      trace remnant of grey dust. If a creature, or an item
      in a creature's possession, is the target of this spell,
      the victim receives a Fortitude save to negate the
      effect. Since disintegration utterly destroys the target,
      no body remains for resurrection.\n
      __There are some other defenses against disintegration,
      of course. It's a ray, so reflection and absorbtion both
      negate it. Huge or larger creatures lose 10 cubic feet
      of mass on a failed save, suffering 20d6 points of untyped
      damage and possibly losing limbs or being otherwise maimed.
      Creatures wearing armour with the Fortification quality are
      resistant to this spell -- a creature with Light Fortification
      takes 20d6 (and possible maiming) on a failed save, Medium 
      Fortification reduces this to half, and a creature wearing
      Heavy Fortification armour is immune to disintegration.
      This spell is not a death effect, however.\n
      __Disintegrate cancels, and is cancelled by, <9>stoneskin<1>;
      this occurs before the saving throw.\n
      __If a character's total Fortitude save bonus is higher than
      the saving throw DC of this spell, the character is considered
      immune as well -- the saving throw isn't rolled, so the
      character doesn't die on a natural 1.";
    On Event EV_MAGIC_STRIKE {
      if (EVictim->HasEffStati(-1,$"stoneskin"))
        {
          EVictim->RemoveEffStati($"stoneskin",EV_REMOVED);
          VPrint(e,"A fine layer of dust settles off of
            your skin.", "A fine layer of dust settles off of
            the <EVictim>'s skin.");
          return DONE;
        }
      if (EVictim->GetAttr(A_SAV_FORT) >= e.saveDC ||
          EVictim->HasStati(IMMUNITY,AD_DISN))
        {
          e.Immune = true;
          return DONE;
        }
      return NOTHING;
      },
    EV_MAGIC_HIT {  
      bool isKill, isMaimed; int16 Fort, Div;
      
      /* Disintegrate a feature. It's conceptually difficult to justify
         not including this, but it definitely complicates. Do we *want*
         players destroying stairs, altars, etc. with impunity? A player
         can destroy a portal needed for some plot reason as this code
         stands and end up having to suicide (for example, because they
         killed the exit to the /rope trick/ space). Then again, stupidity
         is it's own reward, and monsters are too stupid to disintegrate
         stairs and other features... */
      if (EVictim->isFeature())
        {
          VPrint(e,NULL,"The <EVictim> disintegrates!");
          EVictim->Remove(true);
          return DONE;
        }
      
      /* Disintegrate an item */
      if (EVictim->isType(T_ITEM))
        {
          if (EVictim->HasQuality(IQ_ADAMANT) /* ||
              EVictim->ieID->HasFlag(EF_ARTIFACT) */)
            {
              e.Immune = true;
              return DONE;
            }
          if (EVictim->Owner())
            EVictim->Owner()->IDPrint(
              "Your <hObj2> disintegrates!",
              "The <hObj1>'s <hObj2> disintegrates!",
              EVictim->Owner(), EVictim);
          else
            VPrint(e,"","The <EVictim> disintegrates!");
          EVictim->Remove(true);
          return DONE;
        }
      
      isKill = true; isMaimed = true;
      Fort = EVictim->HighStatiMag(FORTIFICATION);
      if (Fort >= 75)
        { e.Immune = true; return DONE; }
      else if (Fort >= 50 || EVictim->GetAttr(A_SIZ) >= SZ_GARGANTUAN)
        { isKill = false; isMaimed = false; Div = 2; }
      else if (Fort >= 25 || EVictim->GetAttr(A_SIZ) >= SZ_HUGE)
        { isKill = false; isMaimed = true; Div = 1; }
      else
        isKill = true;
        
      /* Add here a case that high divine favour can save a player
         from disintigration when we do gods. */
        
      if (isKill)
        {
          VPrint(e,"You disintegrate!",
                   "The <EVictim> disintegrates!");
          ThrowDmg(EV_DEATH,AD_DISN,0,"disintegration",EActor,EVictim,EItem);
          return DONE;
        }
        
      if (isMaimed)
        {
          /* When we implement the SEVERED stat for the Sword of Sharpness,
             we'll put a 50% chance of losing an arm and a 50% chance of
             losing a leg here. */
        }
        
      e.vDmg /= Div;
      return NOTHING;
      },
    POST(EV_MAGIC_HIT) {
      hObj hBody;
      if (EVictim->isCreature())
        if (EVictim->isDead())
          {
            /*
            hBody = EVictim->GetStatiObj(MY_CORPSE);
            hBody->Remove(true);
            */
          }
      return NOTHING;
      },
    EV_MAGIC_XY {
      rID terID;
      terID = EMap->TerrainAt(e.EXVal,e.EYVal);
      
      if (!EMap->SolidAt(e.EXVal,e.EYVal))
        return NOTHING;
      
      /* Curse IncursionScript's limited disambiguation!
      if (terID->Material == MAT_ADAMANT)
        {
          e.Immune = true;
          return DONE;
        }
      */
      
      APrint(e,"The <rID> disintegrates!",terID);
      return NOTHING;
      };
  }
and EA_TERRAFORM
  { rval: $"floor"; xval: TERRA_CLOSED; }

    
  
/* Wizard Spell "Delayed Blast Fireball" : EA_BLAST */

Wizard / Priest / Druid Spell "Protection from Elements" : EA_INFLICT
  { SC_ABJ; IS_A_BUFF(COST_5); Level: 6; qval: Q_TAR;
    xval: RESIST; yval: AD_FIRE; pval: 10d1 + (LEVEL_1PER1); 
    On Event MSG_STATINAME "ProtElem" / "ProE"; 
    Desc: "Grants the target resistance equal to 10 plus her caster 
      level against Acid, Cold, Lightning, Fire and Sound."; 
    }
  and EA_INFLICT { xval: RESIST; yval: AD_COLD; 
                   flags: EF_DLONG; pval: 10d1+(LEVEL_1PER1); }
  and EA_INFLICT { xval: RESIST; yval: AD_ELEC; 
                   flags: EF_DLONG; pval: 10d1+(LEVEL_1PER1); }
  and EA_INFLICT { xval: RESIST; yval: AD_ACID; 
                   flags: EF_DLONG; pval: 10d1+(LEVEL_1PER1); }
  and EA_INFLICT { xval: RESIST; yval: AD_SONI; 
                   flags: EF_DLONG; pval: 10d1+(LEVEL_1PER1); }

Wizard / Scroll Spell "Tevlar's Transformation" : EA_GRANT
  { SC_THA; Base: SP_MEDIUM; Cost: 36; Level: 6;
    Desc: "Casting this spell, the mage becomes a veritable
      combat juggernaut. She adds her Wisdom modifier as a magic
      bonus to her Strength and Constitution, her Intelligence
      modifier as a magic bonus to Dexterity, and her Charisma
      bonus becomes a natural bonus to armour, overlapping any
      natural armour she might already possess. She also gains
      1d10 temporary hit points per caster level.\n
      __These great benefits come at a price. While this spell
      is active, the mage cannot cast spells, read scrolls,
      invoke innate abilities, zap wands or make ranged weapon
      attacks. As always with effects that grant temporary hit
      points, the caster should have a source of healing ready
      -- if the spell expires and her wounds exceed her true
      hit points, she will die. Regardless, when the spell
      expires the caster loses three Fatigue points.\n
      __Tevlar's Transformation can be cancelled at will.";
    Flags: EF_CANCEL;
    xval: ADJUST; yval: A_THP; pval (LEVEL_1PER1)d10; }
and EA_GRANT
  { xval: ADJUST; yval: A_STR; }
and EA_GRANT
  { xval: ADJUST; yval: A_CON; }
and EA_GRANT
  { xval: ADJUST; yval: A_DEX; }
and EA_GRANT
  { xval: ADJUST_NAT; yval: A_ARM; }
and EA_GRANT
  { xval: TRAP_EVENT; yval: EV_INVOKE; }
and EA_GRANT
  { xval: TRAP_EVENT; yval: EV_CAST; }
and EA_GRANT
  { xval: TRAP_EVENT; yval: EV_ZAP; }
and EA_GRANT
  { xval: TRAP_EVENT; yval: EV_READ; }
and EA_GRANT { 
  xval: TRAP_EVENT; yval: EV_RATTACK; 
  On Event EV_CALC_EFFECT {
    if (GetHandle(EActor) == NULL_OBJ)
        return NOTHING;
    if (e.xval == ADJUST || e.xval == ADJUST_NAT) {
      if (e.yval == A_STR || e.yval == A_CON)
        e.vDmg = EActor->Mod(A_WIS);
      else if (e.yval == A_DEX)
        e.vDmg = EActor->Mod(A_INT);
      else if (e.yval == A_ARM)
        e.vDmg = EActor->Mod(A_CHA);
      }
    return NOTHING;
    },
  META(EV_CAST), META(EV_INVOKE), META(EV_ZAP),
    META(EV_READ), META(EV_RATTACK) {
    EActor->IPrint("You can't do that while <9>Tevlar's 
      Transformation<7> is active.");
    return ABORT;
    },
  EV_REMOVED {
    if (e.EParam == ADJUST && e.vVal == A_THP)
      EActor->LoseFatigue(1,false);
    };
  }

Wizard / Scroll Spell "Fiendform" : EA_POLYMORPH
  { SC_THA; Base: SP_HARD; Cost: 20; Level: 6; Flags: EF_CANCEL, EF_EVIL;
    Desc: "By casting this inherently evil spell, you polymorph yourself
      into one of the following six forms, randomly chosen: osyluth,
      barbazu, hamatula, babau, jovoc or palrethee."; Purpose: EP_BUFF;
      On Event PRE(EV_MAGIC_HIT) {
        int16 i;
        if (e.MM & MM_CONTROL)
          i = EActor->ChoicePrompt(
            "Osyluth, Barbazu, Hamatula, Babau, Jovoc or Palrethee?",
            "123456", '3') - '0';
        else
          i = 1d6;
        switch (i)
          {
            case 1: e->rval = $"osyluth"; break;
            case 2: e->rval = $"barbazu"; break;
            case 3: e->rval = $"hamatula"; break;
            case 4: e->rval = $"babau"; break;
            case 5: e->rval = $"jovoc"; break;
            case 6: e->rval = $"palrethee"; break;
          }
        return NOTHING;
      };
  }

#if 0

Wizard Spell "Eyebite" : EA_GENERIC
  {
    SC_ENC; Base: SP_MEDIUM; Mana: 32; Level: 6;
    Flags: EF_MENTAL, EF_CANCEL; sval: WILL+10; Purpose: EP_ATTACK|EP_CURSE;
    Desc: "Casting this spell grants the caster a gaze attack for
      a brief period of time. Only creatures hostile to the caster
      will be affected. Once a successful save is made, the affected
      creature is no longer subject to further gaze attacks that day.
      The caster may choose one of the following five possible gaze
      attacks:\n
      __<9>Vertigo:<1> Affected creatures become nauseated for 1d4+1
      rounds. Only natural, living creatures are affected. Once a
      successful save is made, the affected creature is no longer
      subject to further gaze attacks that day.\n
      __<9>Charm:<1> Affected creatures are charmed as per the spell
      <9>charm monster<1>. \n
      __<9>Fear:<1> Affected creatures become afraid and flee for
      3d6 rounds; this is a fear effect.\n
      __<9>Sleep:<1> Affected creatures, who must qualify as persons,
      fall asleep.\n
      __<9>Weaken:<1> Affected creatures suffer 1d2 points of Strength
      damage.";
    On Event EV_MAGIC_HIT {
      char ch; rID tID;
      ch = EActor->ChoicePrompt("Vertigo, Charm, Fear, Sleep or Weaken?", "vcfsw", -1);
      switch (ch) {
        case 'v': tID = $"Eyebite;vertigo"; break;
        case 'c': tID = $"Eyebite;charm"; break;
        case 'f': tID = $"Eyebite;fear"; break;
        case 's': tID = $"Eyebite;sleep"; break;
        case 'w': tID = $"Eyebite;weaken"; break;
        }
      EVictim->GainTempStati(TEMPLATE,EActor,e.vDuration,SS_ENCH,e.saveDC,0,tID,e.vCasterLev);
      EVictim->IDPrint("", "The <hObj>'s eye glitter menacingly!", EVictim);
      },
    EV_ISTARGET {
      if (EVictim->HasAttk(A_GAZE))
        return CANNOT_CAST_IT;
      return SHOULD_CAST_IT;
      };
  }
  

Template "Eyebite;vertigo" : TM_NATURE
  {
    Attk:
      A_GAZE for 3d6 AD_NAUS;
    On Event PRE(EV_DAMAGE) {
      if (e.AType == AD_GAZE)
        e.saveDC = EActor->GetEffStatiVal($"Eyebite;vertigo");
      return NOTHING;
    Flags: M_NOGEN;
  }

Template "Eyebite;fear" : TM_NATURE
  {
    Attk:
      A_GAZE for 3d6 AD_FEAR;
    On Event PRE(EV_DAMAGE) {
      if (e.AType == AD_GAZE)
        e.saveDC = EActor->GetEffStatiVal($"Eyebite;fear");
      return NOTHING;
    Flags: M_NOGEN;
  }

Template "Eyebite;charm" : TM_NATURE
  {
    Attk:
      A_GAZE for 0d0 AD_CHRM;
    On Event PRE(EV_DAMAGE) {
      if (e.AType == AD_GAZE) {
        e.saveDC = EActor->GetEffStatiVal($"Eyebite;charm");
        e.vDmg = -2;
        }
      return NOTHING;
    Flags: M_NOGEN;
  }

Template "Eyebite;sleep" : TM_NATURE
  {
    Attk:
      A_GAZE for 3d6 AD_SLEE;
    On Event PRE(EV_DAMAGE) {
      if (e.AType == AD_GAZE) {
        if (!e.EVictim->isMType(MA_PERSON))
          { e.Immune = true; return DONE; }
        e.saveDC = EActor->GetEffStatiVal($"Eyebite;fear");
      return NOTHING;
    Flags: M_NOGEN;
  }

Template "Eyebite;weaken" : TM_NATURE
  {
    Attk:
      A_GAZE for 1d2 AD_DAST;
    On Event PRE(EV_DAMAGE) {
      if (e.AType == AD_GAZE)
        e.saveDC = EActor->GetEffStatiVal($"Eyebite;vertigo");
      return NOTHING;
    Flags: M_NOGEN;
  }
  
#endif

Wizard Spell "Immortal Grandeur" : EA_GENERIC
  { SC_ENC; Base: SP_HARD; IS_A_BUFF(50); Level: 6; sval: WILL + 10;
    Purpose: EP_BUFF; Flags: EF_SHOWNAME, EF_FEAR, EF_MENTAL;
    On Event EV_MAGIC_HIT {
      EVictim->GainTempStati(TRAP_EVENT, EActor, e.vDuration, SS_ENCH,
        EVICTIM(EV_STRIKE),e.saveDC,$"Immortal Grandeur");
      EVictim->GainTempStati(TRAP_EVENT, EActor, e.vDuration, SS_ENCH,
        EVICTIM(EV_EFFECT),e.saveDC,$"Immortal Grandeur");
      return DONE;
      },
    META(EVICTIM(EV_STRIKE)), META(EVICTIM(EV_EFFECT)) {
      int16 saveDC, saveType;
      if (e.Event % 1000 != EV_STRIKE)
        if ((GetHandle(EActor) == GetHandle(EVictim))
             || !EActor->isHostileTo(EVictim))
          return NOTHING;
      if (EActor->ResistLevel(AD_FEAR) == -1)
        return NOTHING;
      if (!EActor->Perceives(EVictim))
        return NOTHING;      
      EActor->LoseFatigue(1,false);
      saveDC = EVictim->GetEffStatiVal(TRAP_EVENT,$"Immortal Grandeur");
      if (e.AType == A_FIRE || e.AType == A_HURL)
        saveDC -= 4;
      saveDC -= EActor->GetEffStatiMag(EFF_FLAG1,$"Immortal Grandeur");  
      saveType = SA_ENCH|SA_COMP|SA_MAGIC|SA_SPELLS|SA_FEAR;
      if (EActor->ChallengeRating() <= 5 && EVictim->isMType(MA_ELF))
        saveType |= SA_DEATH;
      if (EActor->SavingThrow(WILL,saveDC,saveType))
        return NOTHING;
      if (e.AType == A_FIRE || e.AType == A_SPEL)
        return ABORT;
      if (EVictim->isMType(MA_ELF) && EActor->ChallengeRating() <= 3)
        {
          if (EActor->ResistLevel(AD_NECR) == -1)
            return DONE;
          DPrint(e,"The <EVictim>'s soul-wrenching grandeur stops your heart.",
                   "The <EActor> collapses dead from your soul-wrenching grandeur.");
          ThrowDmg(EV_DEATH,AD_FEAR,0,"a terrifying and wonderous sight",
                    EVictim, EActor);
          return DONE;
        }
      TPrint(e,"The <EVictim> is too terrifying for you to attack!",
               "The <EActor> hesitates.", "The <EActor> hesitates.");
      return DONE;
      },
    MSG_CAST
      "You take on a mein of terrible grandeur!" /
      "The <EActor> suddenly seems overwhelmingly awesome!",
    EV_REMOVED
      "You feel less grand." /
      "The <EActor> looks less heart-stoppingly beautiful now.",
    MSG_STATINAME
      "Grand";
    Desc: "__Casting this spell wraps a character in an aura
      of radiant, terrifying glory so palpable as to
      almost be a physical force. Her force of presence
      is augmented to the point where she seems to
      formidable to even offend, let alone actually
      attack.\n
      __To attack a character under the effect of this
      spell head-on requires a Will saving throw; making
      a ranged attack also requires a saving throw, but
      this save have a +4 bonus from the distance. Every
      attack requires a seperate Will save, but every
      past successful saving throw against this spell
      grants a +1 culmulative circumstance bonus to
      further saves against this spell.\n
      __The psychological exertion requires to defy this
      spell is tremendous, and no matter how strong one's
      will, no one can last forever against it. Every
      saving throw made against it costs the maker a point
      of Fatigue.\n
      __Elves have a special advantage with regard to this
      ancient magic -- after all, it originated with them.
      If they both have this spell active and use their
      Manifestation ability, their force of presence is
      so overwhelming that living creatures of Challenge
      Rating 5 or lower die instantly, their hearts stopped
      in shock, should they fail to save against this spell
      when trying to attack. This additional aspect is a 
      death effect and a fear effect, and can be avoided 
      accordingly.";
  }

Wizard / Scroll Spell "Power Word: Stun" : EA_INFLICT
  { SC_DIV; Base: SP_VERY_HARD; Cost: 15; Level: 6; qval: Q_TAR;
    Purpose: EP_CURSE; xval: STUNNED;
    Flags: EF_SOUND, EF_BLIND_PROMPT; sval: NOSAVE;
    Desc: "Power words are ancient pieces of the sorcerous truespeak
      from the dawn times of the world. They are inherently unknowable,
      and creatures who hear one spoken irresistably forget the exact
      structure of its syllables immediately after hearing it. They
      can not be recorded, transcribed or preverved by any mortal
      magic; however, certain powerful divinations can grant a skilled
      mage knowledge of a Power Word just long enough to speak it once,
      allowing its terrible effect to take hold on the world.\n
      __This power word scrambles a creature's mind, preventing it from
      acting coherantly. The victim becomes stunned for a duration that
      is dependant upon their current hit points -- 1d4 rounds if the
      victim has 250 or more HP, 3d6 rounds if the victim has 150 to 249
      HP, 10d6 rounds if the victim has 149 to 75 HP and a full day if
      the victim has 74 or fewer HP.";
    On Event EV_CALC_EFFECT {
      if (GetHandle(EVictim) == NULL_OBJ)
        return NOTHING;
      if (EVictim->cHP >= 250)
        e.vDuration = 1d4;
      else if (EVictim->cHP >= 150)
        e.vDuration = 3d6;
      else if (EVictim->cHP >= 75)
        e.vDuration = 10d6;
      else
        e.vDuration = -2;
      return NOTHING;
      },
    MSG_CAST
      "You point at the <EVictim> and speak an ineffable word!" /
      "The <EActor> points at you and speaks an ineffable word!" /
      "The <EActor> points at the <EVictim> and speaks an ineffable word!";
  }

Wizard Spell "Mirage Arcana" : EA_GENERIC
  { SC_ILL; Base: SP_MEDIUM; Cost: 16; Level: 6; qval: Q_LOC;
    yval: IL_SPECTRAL; aval: AR_FIELD; rval: FI_ITERRAIN; lval: 6; 
    Flags: EF_DLONG, EF_CANCEL;
    Desc: "This spell is similar in effect to the 4th-level illusion
      <9>hallucinatory terrain<1>, but much improved and wider in
      scope. Like the improved illusion spells, it affects all natural
      and exceptional senses and can only be seen through with <9>true
      seeing<1> or similar magic. It affects a 60-foot radius rather
      than a 30-foot one. Most significantly, however, it allows the
      illusionist to conceal terrain as well as create it -- a river
      of magma could be made to look like a shallow stream, or a chasm
      could be concealed with the illusion of smooth floor. The
      concealed terrain is real, of course, and has its full normal
      effect if monsters (or the player character) are tricked into
      walking over it, though these effects are concealed from their
      perception.";
    On Event EV_EFFECT {
      char ch;
      if (EActor->HasEffStati(EFF_FLAG1,$"Hallucinatory Terrain") ||
          EActor->HasEffStati(EFF_FLAG1,$"Mirage Arcana"))
        {
          EActor->IPrint("You can only have one terrain illusion
            active at a time.");
          return ABORT;
        }
      
      ch = EActor->ChoicePrompt("Floor, Magma, Chasm, Slime, Pool or Webbing?","fmcspw", 'm', BLUE, AZURE);
      EActor->GainTempStati(EFF_FLAG1,NULL,e.vDuration,SS_ENCH,ch,e.saveDC,$"Mirage Arcana");
      return NOTHING;
      },
    EV_REMOVED {
      EMap->RemoveEffField($"Mirage Arcana");
      return NOTHING;
      },
    EV_ITERRAIN {
      char ch; rID tID;
      tID = EMap->TerrainAt(e.EXVal, e.EYVal);
      if (!ResourceHasFlag(tID,TF_SOLID))
        {
          ch = EActor->GetEffStatiVal(EFF_FLAG1,$"Mirage Arcana");
          switch (ch)
            {
              case 'f': e.eID = $"floor"; break;            
              case 'm': e.eID = $"magma"; break;
              case 'c': e.eID = $"chasm"; break;
              case 's': e.eID = $"pool of slime"; break;
              case 'p': e.eID = $"deep water"; break;
              case 'w': e.eID = $"webbing"; break;
            }
        }
      else
        e.eID = tID;
      return DONE;
      };
  }      

Wizard Spell "Demi-Shadow Magic" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 15; Level: 6; 
    Purpose: EP_SUMMON; xval: MA_LIVING; yval: IL_SPECTRAL|IL_SHADE40|IL_SHADE10; 
    Desc: "This functions similarly to <9>shadow magic<1>, except that the spells
      it can duplicate are 3rd and 4th level, and the damage it inflicts is 50~
      real."; 
    Flags: EF_IBLAST;
    Lists:
      * SPELL_LIST $"magic missile" $"force bolt" $"burning hands"
                   $"ice dagger" $"sandblast" $"sunscorch"
                   $"scorcher" $"electric loop" $"fireball"
                   $"lightning bolt" $"thunderlance" $"ice storm"
                   $"force missiles" $"shout";
  }
  
Wizard Spell "Shades" : EA_ILLUSION
  { SC_ILL; Base: SP_MEDIUM; Cost: 10; Level: 6; 
    Purpose: EP_SUMMON; xval: MA_LIVING; 
    yval: IL_SPECTRAL|IL_SHADE40|IL_SHADE10|IL_SHADE20; 
    rval: $"generic summons";
    Desc: "This spell functions identically to <9>shadow monsters<1>,
      except that the created creatures are 70~ real, and thus inflict
      70~ if their normal damage on disbelieving characters and can suffer
      up to 70~ of their total hit points from disbelievers before being
      dispelled."; 
    On Event PRE(EV_MAGIC_HIT) {
      SetPVal(e,max(1, (EActor->SkillLevel(SK_ILLUSION)/2)));
      return NOTHING;
      };
    Flags: EF_DLONG, EF_SHOWNAME, EF_IMONSTERS;
  }
  
Wizard / Priest Spell "True Seeing" : EA_INFLICT
  { 
    SC_DIV; IS_A_BUFF(COST_6X); Level: 6;
    Desc: "This august divination shatters all deceptions, causing
      the caster to inherently see through every spell of the
      Illusion school -- the effect is automatic and uncontested,
      unless the creator of the illusion has a <9>false vision<1>
      spell active. Shadow creatures and effects still affect the 
      caster with regard to the percent that they are real, but she 
      automatically disbelieves them and never suffers full 
      damage."; /* True seeing also allows the caster to see
      polymorphed or disguised creatures as they truly are, to
      discern creatures which initially appear as other creatures
      (such as rats and plague rats) and, if the caster is a priest,
      to perceive the alignment of all creatures around her."; */
    xval: TRUE_SIGHT;
    On Event MSG_STATINAME "TrueSight" / "TS";
  }

Wizard / Scroll Spell "Monster Summoning VI" : EA_SUMMON
  { SC_WEA; Base: SP_MEDIUM; Cost: 12; Level: 6; qval: Q_LOC;
    Purpose: EP_SUMMON; rval: $"summoned monster"; pval: 6; 
    Desc: "Summons a living creature of CR 6 to fight in the 
      caster's name.";  
    ALIENIST_CLAUSE(6) }

/* ============================================================= 
 *                   Level Seven ARCANE Spells
 * =============================================================
 * Abj: Repulsion, Spell Turning, Spell Engine, Fire/etc. Immunity
 * Arc: Power Word: Seal, Alter Reality, Limited Wish
 * Div: 
 * Enc:  
 * Evo:  
 * Ill: Project Image 
 * Nec:  
 * Tha: 
 * Wea: 
 * =============================================================

Repulsion
  When you cast this spell, you evoke a stationary field centered
on you inside which creatures whose Challenge Rating is equal to
or lower than your own cannot move toward the center.

Spell Turning
  This spell evokes a metaphysical reflective effect around you,
such that any hostile spells striking you directly (as opposed
to an area effect you are caught in) also affect the original
caster just as they affect you, unless said caster makes a Will
saving throw against the DC of this spell.

Spell Engine
  This spell creates a metaphysical construct appearing as a
spectral spinning wheel which absorbs spell energy, negating
up to [caster level x 2] spell levels of spells cast within
60 feet (6 squares) of it without a chance to resist. 

Project Image
  You create an incorporeal illusion to house your consciousness,
leaving your body comatose. Your illusionary self can move freely,
cast spells and fight, but cannot use equipment. When 'killed',
your body awakens unharmed. 

*/

/* ============================================================= 
 *                   Level Eight ARCANE Spells
 * =============================================================
 * Abj: 
 * Arc: Sink, 
 * Div: PW, Blind
 * Enc:  
 * Evo:  
 * Ill:  
 * Nec:  
 * Tha: 
 * Wea: Maze, Summon Monster IIX, Worldwalk,  
 * =============================================================
 */

Wizard Spell "Othello's Irresistable Dance" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 75; Level: 8; tval: MA_HUMANOID;
    Purpose: EP_CURSE (VS_MENTAL); qval: Q_LOC; 
    aval: AR_GLOBE; cval: EMERALD; lval: 30;
    Flags: EF_LIM_MTYPE, EF_SHOWNAME, EF_DSHORT, EF_MENTAL;
    On Event MSG_STATINAME "Dancing" / "Dan";
    Desc: "Causes all humanoid creatures within a 30 foot radius
      globe to dance and caper wildly, inflicing a -6 penalty to 
      Defense Class, -6 to Reflex saves and halving attack speed 
      and movement rate for the 1d4+1 rounds the effect lasts. 
      There is no saving throw against this effect, though it can 
      be dispelled normally, and mindless creatures are immune.";
    On Event EV_MAGIC_HIT
      "You are magically compelled to begin a ludicrous dance!" /
      "The <EVictim> begins dancing wildly!",
    EV_REMOVED
      "You stop dancing." / 
      "The <EActor> manages to stop dancing."; 
    xval: ADJUST_CIRC; yval: A_DEF; pval: -6; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_SAV_REF; pval: -6; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_SPD; pval: -10; }
and EA_INFLICT
  { xval: ADJUST_CIRC; yval: A_MOV; pval: -10; }
  
/* ============================================================= 
 *                   Level Nine ARCANE Spells
 * =============================================================
 * Abj: Imprisonment, Prismatic Sphere, Disjunction, Elemental Aura
 * Arc: Sphere of Ultimate Destruction, Time Stop, True Creation, 
          Wish
 * Div: Eldritch Tongue, Foresight, Perfected Harmony, PW: Kill
 * Enc: True Domination, Unearthly Majesty, Virus Charm 
 * Evo: Meteor Swarm, Maw of Chaos, Spellstrike, Crushing Hand,
          Elemental Aura 
 * Ill: Phantasmagoria, Spectral Menagerie, Web of Darkness, Wierd 
 * Nec: Master Undead, Wail of the Banshee, Web of Darkness 
 * Tha: Imprisonment, Lifeproof, Power Word: Kill, Shapechange
 * Wea: Black Blade, Chain Contingency, Gate, Summon Monster IX,
 * =============================================================
 
 
 
 
 
 
 
    Desc: "__You evoke an aura around yourself establishing an
      unearthly affinity with one of the four elemental planes
      of existance, without actually changing your shape.
      Elementals and creatures affiliated with the element in 
      question are automatically friendly to you, and can be 
      influenced just as kobolds do vermin. In addition, the 
      specific aura chosen grants unique benefits as follows:
      \n__<9>Earth:<1> You gain ten levels of natural armour,
      the ability to phase through earth just like a xorn and
      gain a +6 natural bonus to Strength.
      \n__<9>Air:<1> You can fly, and are immune to any attacks
      involving air or gasses. You gain a +6 natural bonus to
      Dexterity, the Evasion ability and a +50~ natural bonus
      to Speed and Movement.\n
      \n__<9>Fire:<1> You are immune to fire and cold damage, 
      and anyone attacking you in melee suffers 4d8 points of
      fire damage per attack.\n
      \n__<9>Water:<1> You gain a +10 insight bonus to your
      Swim skill, and you suffer only 1/3rd of the normal
      damage from blunt attacks, fire or electricity. Cold
      damage does you no harm, but may <9>slow<1> you if you
      fail a saving throw. Oozes and aquatic creature are
      inherently friendly to you, along with water elementals,
      and you can breathe water naturally.";
      
      
       
 */

Effect "Dominate Monster" : EA_INFLICT
  { SC_ENC; Base: SP_MEDIUM; Cost: 10; Level: 5; sval: WILL;
    Purpose: EP_CURSE (VS_MENTAL); qval: Q_TAR;
    xval: CHARMED; yval: CH_DOMINATE; 
    Flags: EF_DLONG, EF_MENTAL, EF_COMPULSION; 
    Desc: "Gives you telepathic control over any single
      creature with a mind."; 
	On Event EV_MAGIC_HIT
	  "You sieze control of the <EVictim>'s mind!" / 
	  "The <EActor> siezes control of your mind!" / "",
	EV_ELAPSED
	  "You shake off the effect of the domination." /
	  "The <EActor> shakes off the effect of the domination.";
  }

/* Placeholders */

Effect "Unseen Servant" : EA_NOTIMP { }
Effect "Sculpt Sound" : EA_NOTIMP { }
Effect "Sound Burst" : EA_NOTIMP { }
Effect "Serpent Tongue" : EA_NOTIMP { }
Effect "Commune" : EA_NOTIMP { }
Effect "Blade Barrier" : EA_NOTIMP { }
Effect "Word of Recall" : EA_NOTIMP { }
Effect "Plant Growth" : EA_NOTIMP { }
Effect "Water Breathing" : EA_NOTIMP { }
Effect "Wrack" : EA_NOTIMP { }
Effect "Planar Conjuration" : EA_NOTIMP { }
Effect "Contact Other Plane" : EA_NOTIMP { }
Effect "Fog Cloud" : EA_NOTIMP { }
Effect "Feeblemind" : EA_NOTIMP { }
Effect "Unholy Aura" : EA_NOTIMP { }
Effect "Find the Path" : EA_NOTIMP { }
Effect "Phantasmagoria" : EA_NOTIMP { }
Effect "Tempus Fugit" : EA_NOTIMP { }
Effect "Reverse Gravity" : EA_NOTIMP { }
Effect "Spell Turning" : EA_NOTIMP { }
Effect "Energy Drain" : EA_NOTIMP { }
Effect "Rainbow Pattern" : EA_NOTIMP { }
Effect "Mind Fog" : EA_NOTIMP { }
Effect "Persistant Illusion" : EA_NOTIMP { }
